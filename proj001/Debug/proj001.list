
proj001.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013d4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ec  08001584  08001584  00011584  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001670  08001670  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001670  08001670  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001670  08001670  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001670  08001670  00011670  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001674  08001674  00011674  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001678  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000038  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000009c  2000009c  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00003169  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000080f  00000000  00000000  000231fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000e0  00000000  00000000  00023a10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000098  00000000  00000000  00023af0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001bc87  00000000  00000000  00023b88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001cc1  00000000  00000000  0003f80f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000975dc  00000000  00000000  000414d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000d8aac  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b34  00000000  00000000  000d8b00  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .stab         00000084  00000000  00000000  000d9634  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .stabstr      00000117  00000000  00000000  000d96b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0800156c 	.word	0x0800156c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	0800156c 	.word	0x0800156c

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr

080002de <_write>:
 */

#include "Helper/logger.h"

int _write(int file, char *ptr, int len)
{
 80002de:	b580      	push	{r7, lr}
 80002e0:	b086      	sub	sp, #24
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f7ff ffc7 	bl	8000290 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x16>

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
	...

0800031c <_log>:



static void _log(char const * const logType, char const * const format, va_list args)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	b084      	sub	sp, #16
 8000320:	af00      	add	r7, sp, #0
 8000322:	60f8      	str	r0, [r7, #12]
 8000324:	60b9      	str	r1, [r7, #8]
 8000326:	607a      	str	r2, [r7, #4]
	printf("[%s] : ",logType);
 8000328:	68f9      	ldr	r1, [r7, #12]
 800032a:	4809      	ldr	r0, [pc, #36]	; (8000350 <_log+0x34>)
 800032c:	f000 fc22 	bl	8000b74 <iprintf>
	vfprintf(stdout,format,args);
 8000330:	4b08      	ldr	r3, [pc, #32]	; (8000354 <_log+0x38>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	689b      	ldr	r3, [r3, #8]
 8000336:	687a      	ldr	r2, [r7, #4]
 8000338:	68b9      	ldr	r1, [r7, #8]
 800033a:	4618      	mov	r0, r3
 800033c:	f000 fa7c 	bl	8000838 <vfiprintf>
	printf("\n");
 8000340:	200a      	movs	r0, #10
 8000342:	f000 fc2f 	bl	8000ba4 <putchar>
}
 8000346:	bf00      	nop
 8000348:	3710      	adds	r7, #16
 800034a:	46bd      	mov	sp, r7
 800034c:	bd80      	pop	{r7, pc}
 800034e:	bf00      	nop
 8000350:	08001584 	.word	0x08001584
 8000354:	20000000 	.word	0x20000000

08000358 <logInfo>:
	_log("ERROR",format,args);
	va_end(args);
}

void logInfo(char const * const format, ...)
{
 8000358:	b40f      	push	{r0, r1, r2, r3}
 800035a:	b580      	push	{r7, lr}
 800035c:	b082      	sub	sp, #8
 800035e:	af00      	add	r7, sp, #0
	va_list args;
		va_start(args,format);
 8000360:	f107 0314 	add.w	r3, r7, #20
 8000364:	607b      	str	r3, [r7, #4]
		_log("INFO",format,args);
 8000366:	687a      	ldr	r2, [r7, #4]
 8000368:	6939      	ldr	r1, [r7, #16]
 800036a:	4805      	ldr	r0, [pc, #20]	; (8000380 <logInfo+0x28>)
 800036c:	f7ff ffd6 	bl	800031c <_log>
		va_end(args);
}
 8000370:	bf00      	nop
 8000372:	3708      	adds	r7, #8
 8000374:	46bd      	mov	sp, r7
 8000376:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800037a:	b004      	add	sp, #16
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	08001594 	.word	0x08001594

08000384 <main>:
#include "Helper/logger.h"
#include "usbFramework.h"


int main(void)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	af00      	add	r7, sp, #0
	logInfo("Program Entry Point");
 8000388:	4804      	ldr	r0, [pc, #16]	; (800039c <main+0x18>)
 800038a:	f7ff ffe5 	bl	8000358 <logInfo>
    usb_init();
 800038e:	f000 f89b 	bl	80004c8 <usb_init>
    logInfo("Program finished. Entering loop");
 8000392:	4803      	ldr	r0, [pc, #12]	; (80003a0 <main+0x1c>)
 8000394:	f7ff ffe0 	bl	8000358 <logInfo>
    /* Loop forever */
	for(;;);
 8000398:	e7fe      	b.n	8000398 <main+0x14>
 800039a:	bf00      	nop
 800039c:	080015a4 	.word	0x080015a4
 80003a0:	080015b8 	.word	0x080015b8

080003a4 <clock_config>:
 *                the below mentioned values. The idea is to generate 48MHz of clock
 *                for comms.
 *                PLLM = 4 PLLN = 72 PLLP = 2 PLLQ = 3 AHBP = 1 APB1 = 2 APB2 = 1
 *
 */
static void clock_config(void) {
 80003a4:	b480      	push	{r7}
 80003a6:	af00      	add	r7, sp, #0
	//Configuring the flash latency for HCLK = 72MHz
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY,
 80003a8:	4b26      	ldr	r3, [pc, #152]	; (8000444 <clock_config+0xa0>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	f023 030f 	bic.w	r3, r3, #15
 80003b0:	4a24      	ldr	r2, [pc, #144]	; (8000444 <clock_config+0xa0>)
 80003b2:	f043 0302 	orr.w	r3, r3, #2
 80003b6:	6013      	str	r3, [r2, #0]
			_VAL2FLD(FLASH_ACR_LATENCY,FLASH_ACR_LATENCY_2WS));
	//Enabling HSE
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 80003b8:	4b23      	ldr	r3, [pc, #140]	; (8000448 <clock_config+0xa4>)
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	4a22      	ldr	r2, [pc, #136]	; (8000448 <clock_config+0xa4>)
 80003be:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80003c2:	6013      	str	r3, [r2, #0]
	//Wait till HSE is stable
	while(!(READ_BIT(RCC->CR,RCC_CR_HSERDY)));
 80003c4:	bf00      	nop
 80003c6:	4b20      	ldr	r3, [pc, #128]	; (8000448 <clock_config+0xa4>)
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d0f9      	beq.n	80003c6 <clock_config+0x22>
	//Configuring PLL
	MODIFY_REG(RCC->PLLCFGR,
 80003d2:	4b1d      	ldr	r3, [pc, #116]	; (8000448 <clock_config+0xa4>)
 80003d4:	685b      	ldr	r3, [r3, #4]
 80003d6:	4a1d      	ldr	r2, [pc, #116]	; (800044c <clock_config+0xa8>)
 80003d8:	401a      	ands	r2, r3
 80003da:	491b      	ldr	r1, [pc, #108]	; (8000448 <clock_config+0xa4>)
 80003dc:	4b1c      	ldr	r3, [pc, #112]	; (8000450 <clock_config+0xac>)
 80003de:	4313      	orrs	r3, r2
 80003e0:	604b      	str	r3, [r1, #4]
			RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLP | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLQ,
			_VAL2FLD(RCC_PLLCFGR_PLLM,4) | _VAL2FLD(RCC_PLLCFGR_PLLN,72) | _VAL2FLD(RCC_PLLCFGR_PLLP,0) | RCC_PLLCFGR_PLLSRC_HSE | RCC_PLLCFGR_PLLQ_3);

	//Activate PLL and wait till it is generated.
	SET_BIT(RCC->CR,RCC_CR_PLLON);
 80003e2:	4b19      	ldr	r3, [pc, #100]	; (8000448 <clock_config+0xa4>)
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	4a18      	ldr	r2, [pc, #96]	; (8000448 <clock_config+0xa4>)
 80003e8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003ec:	6013      	str	r3, [r2, #0]
	while(!(READ_BIT(RCC->CR,RCC_CR_PLLRDY)));
 80003ee:	bf00      	nop
 80003f0:	4b15      	ldr	r3, [pc, #84]	; (8000448 <clock_config+0xa4>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80003f8:	2b00      	cmp	r3, #0
 80003fa:	d0f9      	beq.n	80003f0 <clock_config+0x4c>
	//Configuring BUS peripheral clocks
	MODIFY_REG(RCC->CFGR,
 80003fc:	4b12      	ldr	r3, [pc, #72]	; (8000448 <clock_config+0xa4>)
 80003fe:	689b      	ldr	r3, [r3, #8]
 8000400:	f423 437c 	bic.w	r3, r3, #64512	; 0xfc00
 8000404:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000408:	4a0f      	ldr	r2, [pc, #60]	; (8000448 <clock_config+0xa4>)
 800040a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800040e:	6093      	str	r3, [r2, #8]
				RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2,
				RCC_CFGR_HPRE_DIV1 | RCC_CFGR_PPRE1_DIV2 | RCC_CFGR_PPRE2_DIV1);

	//Changing Sysclock to pll
	MODIFY_REG(RCC->CFGR,
 8000410:	4b0d      	ldr	r3, [pc, #52]	; (8000448 <clock_config+0xa4>)
 8000412:	689b      	ldr	r3, [r3, #8]
 8000414:	f023 0303 	bic.w	r3, r3, #3
 8000418:	4a0b      	ldr	r2, [pc, #44]	; (8000448 <clock_config+0xa4>)
 800041a:	f043 0302 	orr.w	r3, r3, #2
 800041e:	6093      	str	r3, [r2, #8]
					(RCC_CFGR_SW),
					RCC_CFGR_SW_PLL);

	//Wait till PLL is selected as clock source for sysclock
		while(!(READ_BIT(RCC->CFGR,RCC_CFGR_SWS_PLL)));
 8000420:	bf00      	nop
 8000422:	4b09      	ldr	r3, [pc, #36]	; (8000448 <clock_config+0xa4>)
 8000424:	689b      	ldr	r3, [r3, #8]
 8000426:	f003 0308 	and.w	r3, r3, #8
 800042a:	2b00      	cmp	r3, #0
 800042c:	d0f9      	beq.n	8000422 <clock_config+0x7e>
	//HSI OFF
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 800042e:	4b06      	ldr	r3, [pc, #24]	; (8000448 <clock_config+0xa4>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	4a05      	ldr	r2, [pc, #20]	; (8000448 <clock_config+0xa4>)
 8000434:	f023 0301 	bic.w	r3, r3, #1
 8000438:	6013      	str	r3, [r2, #0]
}
 800043a:	bf00      	nop
 800043c:	46bd      	mov	sp, r7
 800043e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000442:	4770      	bx	lr
 8000444:	40023c00 	.word	0x40023c00
 8000448:	40023800 	.word	0x40023800
 800044c:	f0bc8000 	.word	0xf0bc8000
 8000450:	03401204 	.word	0x03401204

08000454 <clock_check>:

static void clock_check(void)
{
 8000454:	b480      	push	{r7}
 8000456:	af00      	add	r7, sp, #0
	//Enable Clock to GPIOC
	SET_BIT(RCC->AHB1ENR,RCC_AHB1ENR_GPIOCEN);
 8000458:	4b15      	ldr	r3, [pc, #84]	; (80004b0 <clock_check+0x5c>)
 800045a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045c:	4a14      	ldr	r2, [pc, #80]	; (80004b0 <clock_check+0x5c>)
 800045e:	f043 0304 	orr.w	r3, r3, #4
 8000462:	6313      	str	r3, [r2, #48]	; 0x30

	//Configuring the parameters for GPIO C pin 9
	//Parameters : Alternate function : AF0, Speed : Low
	SET_BIT(GPIOC->MODER,GPIO_MODER_MODER9_1);     // GPIOC.9 is configured as alternate function
 8000464:	4b13      	ldr	r3, [pc, #76]	; (80004b4 <clock_check+0x60>)
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	4a12      	ldr	r2, [pc, #72]	; (80004b4 <clock_check+0x60>)
 800046a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800046e:	6013      	str	r3, [r2, #0]
	MODIFY_REG(GPIOC->OSPEEDR , GPIO_OSPEEDR_OSPEED9 , _VAL2FLD(GPIO_OSPEEDR_OSPEED9,0)); // Speed is set to low
 8000470:	4b10      	ldr	r3, [pc, #64]	; (80004b4 <clock_check+0x60>)
 8000472:	689b      	ldr	r3, [r3, #8]
 8000474:	4a0f      	ldr	r2, [pc, #60]	; (80004b4 <clock_check+0x60>)
 8000476:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 800047a:	6093      	str	r3, [r2, #8]
	MODIFY_REG(GPIOC->AFR[1],GPIO_AFRH_AFSEL9,_VAL2FLD(GPIO_AFRH_AFSEL9,0)); // AF0 is selected
 800047c:	4b0d      	ldr	r3, [pc, #52]	; (80004b4 <clock_check+0x60>)
 800047e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000480:	4a0c      	ldr	r2, [pc, #48]	; (80004b4 <clock_check+0x60>)
 8000482:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000486:	6253      	str	r3, [r2, #36]	; 0x24

	//Enable MCO registers
	MODIFY_REG(RCC->CFGR, RCC_CFGR_MCO2,_VAL2FLD(RCC_CFGR_MCO2,0x3));
 8000488:	4b09      	ldr	r3, [pc, #36]	; (80004b0 <clock_check+0x5c>)
 800048a:	689b      	ldr	r3, [r3, #8]
 800048c:	4a08      	ldr	r2, [pc, #32]	; (80004b0 <clock_check+0x5c>)
 800048e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8000492:	6093      	str	r3, [r2, #8]
	//Prescaler value of 2
	MODIFY_REG(RCC->CFGR, RCC_CFGR_MCO2PRE,RCC_CFGR_MCO2PRE_2);
 8000494:	4b06      	ldr	r3, [pc, #24]	; (80004b0 <clock_check+0x5c>)
 8000496:	689b      	ldr	r3, [r3, #8]
 8000498:	f023 5360 	bic.w	r3, r3, #939524096	; 0x38000000
 800049c:	4a04      	ldr	r2, [pc, #16]	; (80004b0 <clock_check+0x5c>)
 800049e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80004a2:	6093      	str	r3, [r2, #8]
}
 80004a4:	bf00      	nop
 80004a6:	46bd      	mov	sp, r7
 80004a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ac:	4770      	bx	lr
 80004ae:	bf00      	nop
 80004b0:	40023800 	.word	0x40023800
 80004b4:	40020800 	.word	0x40020800

080004b8 <SystemInit>:



void SystemInit(void) {
 80004b8:	b580      	push	{r7, lr}
 80004ba:	af00      	add	r7, sp, #0
	//logInfo("Entered System Configuration");
	clock_check();
 80004bc:	f7ff ffca 	bl	8000454 <clock_check>
	clock_config();
 80004c0:	f7ff ff70 	bl	80003a4 <clock_config>

}
 80004c4:	bf00      	nop
 80004c6:	bd80      	pop	{r7, pc}

080004c8 <usb_init>:
#include "usbFramework.h"

void usb_init(void)
{
 80004c8:	b480      	push	{r7}
 80004ca:	af00      	add	r7, sp, #0

}
 80004cc:	bf00      	nop
 80004ce:	46bd      	mov	sp, r7
 80004d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d4:	4770      	bx	lr
	...

080004d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004d8:	480d      	ldr	r0, [pc, #52]	; (8000510 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004da:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80004dc:	f7ff ffec 	bl	80004b8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004e0:	480c      	ldr	r0, [pc, #48]	; (8000514 <LoopForever+0x6>)
  ldr r1, =_edata
 80004e2:	490d      	ldr	r1, [pc, #52]	; (8000518 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004e4:	4a0d      	ldr	r2, [pc, #52]	; (800051c <LoopForever+0xe>)
  movs r3, #0
 80004e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004e8:	e002      	b.n	80004f0 <LoopCopyDataInit>

080004ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004ee:	3304      	adds	r3, #4

080004f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004f4:	d3f9      	bcc.n	80004ea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004f6:	4a0a      	ldr	r2, [pc, #40]	; (8000520 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004f8:	4c0a      	ldr	r4, [pc, #40]	; (8000524 <LoopForever+0x16>)
  movs r3, #0
 80004fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004fc:	e001      	b.n	8000502 <LoopFillZerobss>

080004fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000500:	3204      	adds	r2, #4

08000502 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000502:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000504:	d3fb      	bcc.n	80004fe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000506:	f000 f811 	bl	800052c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800050a:	f7ff ff3b 	bl	8000384 <main>

0800050e <LoopForever>:

LoopForever:
    b LoopForever
 800050e:	e7fe      	b.n	800050e <LoopForever>
  ldr   r0, =_estack
 8000510:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000514:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000518:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800051c:	08001678 	.word	0x08001678
  ldr r2, =_sbss
 8000520:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000524:	2000009c 	.word	0x2000009c

08000528 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000528:	e7fe      	b.n	8000528 <ADC_IRQHandler>
	...

0800052c <__libc_init_array>:
 800052c:	b570      	push	{r4, r5, r6, lr}
 800052e:	4d0d      	ldr	r5, [pc, #52]	; (8000564 <__libc_init_array+0x38>)
 8000530:	4c0d      	ldr	r4, [pc, #52]	; (8000568 <__libc_init_array+0x3c>)
 8000532:	1b64      	subs	r4, r4, r5
 8000534:	10a4      	asrs	r4, r4, #2
 8000536:	2600      	movs	r6, #0
 8000538:	42a6      	cmp	r6, r4
 800053a:	d109      	bne.n	8000550 <__libc_init_array+0x24>
 800053c:	4d0b      	ldr	r5, [pc, #44]	; (800056c <__libc_init_array+0x40>)
 800053e:	4c0c      	ldr	r4, [pc, #48]	; (8000570 <__libc_init_array+0x44>)
 8000540:	f001 f814 	bl	800156c <_init>
 8000544:	1b64      	subs	r4, r4, r5
 8000546:	10a4      	asrs	r4, r4, #2
 8000548:	2600      	movs	r6, #0
 800054a:	42a6      	cmp	r6, r4
 800054c:	d105      	bne.n	800055a <__libc_init_array+0x2e>
 800054e:	bd70      	pop	{r4, r5, r6, pc}
 8000550:	f855 3b04 	ldr.w	r3, [r5], #4
 8000554:	4798      	blx	r3
 8000556:	3601      	adds	r6, #1
 8000558:	e7ee      	b.n	8000538 <__libc_init_array+0xc>
 800055a:	f855 3b04 	ldr.w	r3, [r5], #4
 800055e:	4798      	blx	r3
 8000560:	3601      	adds	r6, #1
 8000562:	e7f2      	b.n	800054a <__libc_init_array+0x1e>
 8000564:	08001670 	.word	0x08001670
 8000568:	08001670 	.word	0x08001670
 800056c:	08001670 	.word	0x08001670
 8000570:	08001674 	.word	0x08001674

08000574 <memset>:
 8000574:	4402      	add	r2, r0
 8000576:	4603      	mov	r3, r0
 8000578:	4293      	cmp	r3, r2
 800057a:	d100      	bne.n	800057e <memset+0xa>
 800057c:	4770      	bx	lr
 800057e:	f803 1b01 	strb.w	r1, [r3], #1
 8000582:	e7f9      	b.n	8000578 <memset+0x4>

08000584 <__sfputc_r>:
 8000584:	6893      	ldr	r3, [r2, #8]
 8000586:	3b01      	subs	r3, #1
 8000588:	2b00      	cmp	r3, #0
 800058a:	b410      	push	{r4}
 800058c:	6093      	str	r3, [r2, #8]
 800058e:	da08      	bge.n	80005a2 <__sfputc_r+0x1e>
 8000590:	6994      	ldr	r4, [r2, #24]
 8000592:	42a3      	cmp	r3, r4
 8000594:	db01      	blt.n	800059a <__sfputc_r+0x16>
 8000596:	290a      	cmp	r1, #10
 8000598:	d103      	bne.n	80005a2 <__sfputc_r+0x1e>
 800059a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800059e:	f000 bb17 	b.w	8000bd0 <__swbuf_r>
 80005a2:	6813      	ldr	r3, [r2, #0]
 80005a4:	1c58      	adds	r0, r3, #1
 80005a6:	6010      	str	r0, [r2, #0]
 80005a8:	7019      	strb	r1, [r3, #0]
 80005aa:	4608      	mov	r0, r1
 80005ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80005b0:	4770      	bx	lr

080005b2 <__sfputs_r>:
 80005b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005b4:	4606      	mov	r6, r0
 80005b6:	460f      	mov	r7, r1
 80005b8:	4614      	mov	r4, r2
 80005ba:	18d5      	adds	r5, r2, r3
 80005bc:	42ac      	cmp	r4, r5
 80005be:	d101      	bne.n	80005c4 <__sfputs_r+0x12>
 80005c0:	2000      	movs	r0, #0
 80005c2:	e007      	b.n	80005d4 <__sfputs_r+0x22>
 80005c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80005c8:	463a      	mov	r2, r7
 80005ca:	4630      	mov	r0, r6
 80005cc:	f7ff ffda 	bl	8000584 <__sfputc_r>
 80005d0:	1c43      	adds	r3, r0, #1
 80005d2:	d1f3      	bne.n	80005bc <__sfputs_r+0xa>
 80005d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080005d8 <_vfiprintf_r>:
 80005d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80005dc:	460d      	mov	r5, r1
 80005de:	b09d      	sub	sp, #116	; 0x74
 80005e0:	4614      	mov	r4, r2
 80005e2:	4698      	mov	r8, r3
 80005e4:	4606      	mov	r6, r0
 80005e6:	b118      	cbz	r0, 80005f0 <_vfiprintf_r+0x18>
 80005e8:	6983      	ldr	r3, [r0, #24]
 80005ea:	b90b      	cbnz	r3, 80005f0 <_vfiprintf_r+0x18>
 80005ec:	f000 fcca 	bl	8000f84 <__sinit>
 80005f0:	4b89      	ldr	r3, [pc, #548]	; (8000818 <_vfiprintf_r+0x240>)
 80005f2:	429d      	cmp	r5, r3
 80005f4:	d11b      	bne.n	800062e <_vfiprintf_r+0x56>
 80005f6:	6875      	ldr	r5, [r6, #4]
 80005f8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80005fa:	07d9      	lsls	r1, r3, #31
 80005fc:	d405      	bmi.n	800060a <_vfiprintf_r+0x32>
 80005fe:	89ab      	ldrh	r3, [r5, #12]
 8000600:	059a      	lsls	r2, r3, #22
 8000602:	d402      	bmi.n	800060a <_vfiprintf_r+0x32>
 8000604:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000606:	f000 fd5b 	bl	80010c0 <__retarget_lock_acquire_recursive>
 800060a:	89ab      	ldrh	r3, [r5, #12]
 800060c:	071b      	lsls	r3, r3, #28
 800060e:	d501      	bpl.n	8000614 <_vfiprintf_r+0x3c>
 8000610:	692b      	ldr	r3, [r5, #16]
 8000612:	b9eb      	cbnz	r3, 8000650 <_vfiprintf_r+0x78>
 8000614:	4629      	mov	r1, r5
 8000616:	4630      	mov	r0, r6
 8000618:	f000 fb2c 	bl	8000c74 <__swsetup_r>
 800061c:	b1c0      	cbz	r0, 8000650 <_vfiprintf_r+0x78>
 800061e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000620:	07dc      	lsls	r4, r3, #31
 8000622:	d50e      	bpl.n	8000642 <_vfiprintf_r+0x6a>
 8000624:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000628:	b01d      	add	sp, #116	; 0x74
 800062a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800062e:	4b7b      	ldr	r3, [pc, #492]	; (800081c <_vfiprintf_r+0x244>)
 8000630:	429d      	cmp	r5, r3
 8000632:	d101      	bne.n	8000638 <_vfiprintf_r+0x60>
 8000634:	68b5      	ldr	r5, [r6, #8]
 8000636:	e7df      	b.n	80005f8 <_vfiprintf_r+0x20>
 8000638:	4b79      	ldr	r3, [pc, #484]	; (8000820 <_vfiprintf_r+0x248>)
 800063a:	429d      	cmp	r5, r3
 800063c:	bf08      	it	eq
 800063e:	68f5      	ldreq	r5, [r6, #12]
 8000640:	e7da      	b.n	80005f8 <_vfiprintf_r+0x20>
 8000642:	89ab      	ldrh	r3, [r5, #12]
 8000644:	0598      	lsls	r0, r3, #22
 8000646:	d4ed      	bmi.n	8000624 <_vfiprintf_r+0x4c>
 8000648:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800064a:	f000 fd3a 	bl	80010c2 <__retarget_lock_release_recursive>
 800064e:	e7e9      	b.n	8000624 <_vfiprintf_r+0x4c>
 8000650:	2300      	movs	r3, #0
 8000652:	9309      	str	r3, [sp, #36]	; 0x24
 8000654:	2320      	movs	r3, #32
 8000656:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800065a:	f8cd 800c 	str.w	r8, [sp, #12]
 800065e:	2330      	movs	r3, #48	; 0x30
 8000660:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000824 <_vfiprintf_r+0x24c>
 8000664:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000668:	f04f 0901 	mov.w	r9, #1
 800066c:	4623      	mov	r3, r4
 800066e:	469a      	mov	sl, r3
 8000670:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000674:	b10a      	cbz	r2, 800067a <_vfiprintf_r+0xa2>
 8000676:	2a25      	cmp	r2, #37	; 0x25
 8000678:	d1f9      	bne.n	800066e <_vfiprintf_r+0x96>
 800067a:	ebba 0b04 	subs.w	fp, sl, r4
 800067e:	d00b      	beq.n	8000698 <_vfiprintf_r+0xc0>
 8000680:	465b      	mov	r3, fp
 8000682:	4622      	mov	r2, r4
 8000684:	4629      	mov	r1, r5
 8000686:	4630      	mov	r0, r6
 8000688:	f7ff ff93 	bl	80005b2 <__sfputs_r>
 800068c:	3001      	adds	r0, #1
 800068e:	f000 80aa 	beq.w	80007e6 <_vfiprintf_r+0x20e>
 8000692:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000694:	445a      	add	r2, fp
 8000696:	9209      	str	r2, [sp, #36]	; 0x24
 8000698:	f89a 3000 	ldrb.w	r3, [sl]
 800069c:	2b00      	cmp	r3, #0
 800069e:	f000 80a2 	beq.w	80007e6 <_vfiprintf_r+0x20e>
 80006a2:	2300      	movs	r3, #0
 80006a4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80006a8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80006ac:	f10a 0a01 	add.w	sl, sl, #1
 80006b0:	9304      	str	r3, [sp, #16]
 80006b2:	9307      	str	r3, [sp, #28]
 80006b4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80006b8:	931a      	str	r3, [sp, #104]	; 0x68
 80006ba:	4654      	mov	r4, sl
 80006bc:	2205      	movs	r2, #5
 80006be:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006c2:	4858      	ldr	r0, [pc, #352]	; (8000824 <_vfiprintf_r+0x24c>)
 80006c4:	f7ff fd94 	bl	80001f0 <memchr>
 80006c8:	9a04      	ldr	r2, [sp, #16]
 80006ca:	b9d8      	cbnz	r0, 8000704 <_vfiprintf_r+0x12c>
 80006cc:	06d1      	lsls	r1, r2, #27
 80006ce:	bf44      	itt	mi
 80006d0:	2320      	movmi	r3, #32
 80006d2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80006d6:	0713      	lsls	r3, r2, #28
 80006d8:	bf44      	itt	mi
 80006da:	232b      	movmi	r3, #43	; 0x2b
 80006dc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80006e0:	f89a 3000 	ldrb.w	r3, [sl]
 80006e4:	2b2a      	cmp	r3, #42	; 0x2a
 80006e6:	d015      	beq.n	8000714 <_vfiprintf_r+0x13c>
 80006e8:	9a07      	ldr	r2, [sp, #28]
 80006ea:	4654      	mov	r4, sl
 80006ec:	2000      	movs	r0, #0
 80006ee:	f04f 0c0a 	mov.w	ip, #10
 80006f2:	4621      	mov	r1, r4
 80006f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80006f8:	3b30      	subs	r3, #48	; 0x30
 80006fa:	2b09      	cmp	r3, #9
 80006fc:	d94e      	bls.n	800079c <_vfiprintf_r+0x1c4>
 80006fe:	b1b0      	cbz	r0, 800072e <_vfiprintf_r+0x156>
 8000700:	9207      	str	r2, [sp, #28]
 8000702:	e014      	b.n	800072e <_vfiprintf_r+0x156>
 8000704:	eba0 0308 	sub.w	r3, r0, r8
 8000708:	fa09 f303 	lsl.w	r3, r9, r3
 800070c:	4313      	orrs	r3, r2
 800070e:	9304      	str	r3, [sp, #16]
 8000710:	46a2      	mov	sl, r4
 8000712:	e7d2      	b.n	80006ba <_vfiprintf_r+0xe2>
 8000714:	9b03      	ldr	r3, [sp, #12]
 8000716:	1d19      	adds	r1, r3, #4
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	9103      	str	r1, [sp, #12]
 800071c:	2b00      	cmp	r3, #0
 800071e:	bfbb      	ittet	lt
 8000720:	425b      	neglt	r3, r3
 8000722:	f042 0202 	orrlt.w	r2, r2, #2
 8000726:	9307      	strge	r3, [sp, #28]
 8000728:	9307      	strlt	r3, [sp, #28]
 800072a:	bfb8      	it	lt
 800072c:	9204      	strlt	r2, [sp, #16]
 800072e:	7823      	ldrb	r3, [r4, #0]
 8000730:	2b2e      	cmp	r3, #46	; 0x2e
 8000732:	d10c      	bne.n	800074e <_vfiprintf_r+0x176>
 8000734:	7863      	ldrb	r3, [r4, #1]
 8000736:	2b2a      	cmp	r3, #42	; 0x2a
 8000738:	d135      	bne.n	80007a6 <_vfiprintf_r+0x1ce>
 800073a:	9b03      	ldr	r3, [sp, #12]
 800073c:	1d1a      	adds	r2, r3, #4
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	9203      	str	r2, [sp, #12]
 8000742:	2b00      	cmp	r3, #0
 8000744:	bfb8      	it	lt
 8000746:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800074a:	3402      	adds	r4, #2
 800074c:	9305      	str	r3, [sp, #20]
 800074e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000834 <_vfiprintf_r+0x25c>
 8000752:	7821      	ldrb	r1, [r4, #0]
 8000754:	2203      	movs	r2, #3
 8000756:	4650      	mov	r0, sl
 8000758:	f7ff fd4a 	bl	80001f0 <memchr>
 800075c:	b140      	cbz	r0, 8000770 <_vfiprintf_r+0x198>
 800075e:	2340      	movs	r3, #64	; 0x40
 8000760:	eba0 000a 	sub.w	r0, r0, sl
 8000764:	fa03 f000 	lsl.w	r0, r3, r0
 8000768:	9b04      	ldr	r3, [sp, #16]
 800076a:	4303      	orrs	r3, r0
 800076c:	3401      	adds	r4, #1
 800076e:	9304      	str	r3, [sp, #16]
 8000770:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000774:	482c      	ldr	r0, [pc, #176]	; (8000828 <_vfiprintf_r+0x250>)
 8000776:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800077a:	2206      	movs	r2, #6
 800077c:	f7ff fd38 	bl	80001f0 <memchr>
 8000780:	2800      	cmp	r0, #0
 8000782:	d03f      	beq.n	8000804 <_vfiprintf_r+0x22c>
 8000784:	4b29      	ldr	r3, [pc, #164]	; (800082c <_vfiprintf_r+0x254>)
 8000786:	bb1b      	cbnz	r3, 80007d0 <_vfiprintf_r+0x1f8>
 8000788:	9b03      	ldr	r3, [sp, #12]
 800078a:	3307      	adds	r3, #7
 800078c:	f023 0307 	bic.w	r3, r3, #7
 8000790:	3308      	adds	r3, #8
 8000792:	9303      	str	r3, [sp, #12]
 8000794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000796:	443b      	add	r3, r7
 8000798:	9309      	str	r3, [sp, #36]	; 0x24
 800079a:	e767      	b.n	800066c <_vfiprintf_r+0x94>
 800079c:	fb0c 3202 	mla	r2, ip, r2, r3
 80007a0:	460c      	mov	r4, r1
 80007a2:	2001      	movs	r0, #1
 80007a4:	e7a5      	b.n	80006f2 <_vfiprintf_r+0x11a>
 80007a6:	2300      	movs	r3, #0
 80007a8:	3401      	adds	r4, #1
 80007aa:	9305      	str	r3, [sp, #20]
 80007ac:	4619      	mov	r1, r3
 80007ae:	f04f 0c0a 	mov.w	ip, #10
 80007b2:	4620      	mov	r0, r4
 80007b4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80007b8:	3a30      	subs	r2, #48	; 0x30
 80007ba:	2a09      	cmp	r2, #9
 80007bc:	d903      	bls.n	80007c6 <_vfiprintf_r+0x1ee>
 80007be:	2b00      	cmp	r3, #0
 80007c0:	d0c5      	beq.n	800074e <_vfiprintf_r+0x176>
 80007c2:	9105      	str	r1, [sp, #20]
 80007c4:	e7c3      	b.n	800074e <_vfiprintf_r+0x176>
 80007c6:	fb0c 2101 	mla	r1, ip, r1, r2
 80007ca:	4604      	mov	r4, r0
 80007cc:	2301      	movs	r3, #1
 80007ce:	e7f0      	b.n	80007b2 <_vfiprintf_r+0x1da>
 80007d0:	ab03      	add	r3, sp, #12
 80007d2:	9300      	str	r3, [sp, #0]
 80007d4:	462a      	mov	r2, r5
 80007d6:	4b16      	ldr	r3, [pc, #88]	; (8000830 <_vfiprintf_r+0x258>)
 80007d8:	a904      	add	r1, sp, #16
 80007da:	4630      	mov	r0, r6
 80007dc:	f3af 8000 	nop.w
 80007e0:	4607      	mov	r7, r0
 80007e2:	1c78      	adds	r0, r7, #1
 80007e4:	d1d6      	bne.n	8000794 <_vfiprintf_r+0x1bc>
 80007e6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80007e8:	07d9      	lsls	r1, r3, #31
 80007ea:	d405      	bmi.n	80007f8 <_vfiprintf_r+0x220>
 80007ec:	89ab      	ldrh	r3, [r5, #12]
 80007ee:	059a      	lsls	r2, r3, #22
 80007f0:	d402      	bmi.n	80007f8 <_vfiprintf_r+0x220>
 80007f2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80007f4:	f000 fc65 	bl	80010c2 <__retarget_lock_release_recursive>
 80007f8:	89ab      	ldrh	r3, [r5, #12]
 80007fa:	065b      	lsls	r3, r3, #25
 80007fc:	f53f af12 	bmi.w	8000624 <_vfiprintf_r+0x4c>
 8000800:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000802:	e711      	b.n	8000628 <_vfiprintf_r+0x50>
 8000804:	ab03      	add	r3, sp, #12
 8000806:	9300      	str	r3, [sp, #0]
 8000808:	462a      	mov	r2, r5
 800080a:	4b09      	ldr	r3, [pc, #36]	; (8000830 <_vfiprintf_r+0x258>)
 800080c:	a904      	add	r1, sp, #16
 800080e:	4630      	mov	r0, r6
 8000810:	f000 f88a 	bl	8000928 <_printf_i>
 8000814:	e7e4      	b.n	80007e0 <_vfiprintf_r+0x208>
 8000816:	bf00      	nop
 8000818:	08001630 	.word	0x08001630
 800081c:	08001650 	.word	0x08001650
 8000820:	08001610 	.word	0x08001610
 8000824:	080015dc 	.word	0x080015dc
 8000828:	080015e6 	.word	0x080015e6
 800082c:	00000000 	.word	0x00000000
 8000830:	080005b3 	.word	0x080005b3
 8000834:	080015e2 	.word	0x080015e2

08000838 <vfiprintf>:
 8000838:	4613      	mov	r3, r2
 800083a:	460a      	mov	r2, r1
 800083c:	4601      	mov	r1, r0
 800083e:	4802      	ldr	r0, [pc, #8]	; (8000848 <vfiprintf+0x10>)
 8000840:	6800      	ldr	r0, [r0, #0]
 8000842:	f7ff bec9 	b.w	80005d8 <_vfiprintf_r>
 8000846:	bf00      	nop
 8000848:	20000000 	.word	0x20000000

0800084c <_printf_common>:
 800084c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000850:	4616      	mov	r6, r2
 8000852:	4699      	mov	r9, r3
 8000854:	688a      	ldr	r2, [r1, #8]
 8000856:	690b      	ldr	r3, [r1, #16]
 8000858:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800085c:	4293      	cmp	r3, r2
 800085e:	bfb8      	it	lt
 8000860:	4613      	movlt	r3, r2
 8000862:	6033      	str	r3, [r6, #0]
 8000864:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000868:	4607      	mov	r7, r0
 800086a:	460c      	mov	r4, r1
 800086c:	b10a      	cbz	r2, 8000872 <_printf_common+0x26>
 800086e:	3301      	adds	r3, #1
 8000870:	6033      	str	r3, [r6, #0]
 8000872:	6823      	ldr	r3, [r4, #0]
 8000874:	0699      	lsls	r1, r3, #26
 8000876:	bf42      	ittt	mi
 8000878:	6833      	ldrmi	r3, [r6, #0]
 800087a:	3302      	addmi	r3, #2
 800087c:	6033      	strmi	r3, [r6, #0]
 800087e:	6825      	ldr	r5, [r4, #0]
 8000880:	f015 0506 	ands.w	r5, r5, #6
 8000884:	d106      	bne.n	8000894 <_printf_common+0x48>
 8000886:	f104 0a19 	add.w	sl, r4, #25
 800088a:	68e3      	ldr	r3, [r4, #12]
 800088c:	6832      	ldr	r2, [r6, #0]
 800088e:	1a9b      	subs	r3, r3, r2
 8000890:	42ab      	cmp	r3, r5
 8000892:	dc26      	bgt.n	80008e2 <_printf_common+0x96>
 8000894:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000898:	1e13      	subs	r3, r2, #0
 800089a:	6822      	ldr	r2, [r4, #0]
 800089c:	bf18      	it	ne
 800089e:	2301      	movne	r3, #1
 80008a0:	0692      	lsls	r2, r2, #26
 80008a2:	d42b      	bmi.n	80008fc <_printf_common+0xb0>
 80008a4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80008a8:	4649      	mov	r1, r9
 80008aa:	4638      	mov	r0, r7
 80008ac:	47c0      	blx	r8
 80008ae:	3001      	adds	r0, #1
 80008b0:	d01e      	beq.n	80008f0 <_printf_common+0xa4>
 80008b2:	6823      	ldr	r3, [r4, #0]
 80008b4:	68e5      	ldr	r5, [r4, #12]
 80008b6:	6832      	ldr	r2, [r6, #0]
 80008b8:	f003 0306 	and.w	r3, r3, #6
 80008bc:	2b04      	cmp	r3, #4
 80008be:	bf08      	it	eq
 80008c0:	1aad      	subeq	r5, r5, r2
 80008c2:	68a3      	ldr	r3, [r4, #8]
 80008c4:	6922      	ldr	r2, [r4, #16]
 80008c6:	bf0c      	ite	eq
 80008c8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80008cc:	2500      	movne	r5, #0
 80008ce:	4293      	cmp	r3, r2
 80008d0:	bfc4      	itt	gt
 80008d2:	1a9b      	subgt	r3, r3, r2
 80008d4:	18ed      	addgt	r5, r5, r3
 80008d6:	2600      	movs	r6, #0
 80008d8:	341a      	adds	r4, #26
 80008da:	42b5      	cmp	r5, r6
 80008dc:	d11a      	bne.n	8000914 <_printf_common+0xc8>
 80008de:	2000      	movs	r0, #0
 80008e0:	e008      	b.n	80008f4 <_printf_common+0xa8>
 80008e2:	2301      	movs	r3, #1
 80008e4:	4652      	mov	r2, sl
 80008e6:	4649      	mov	r1, r9
 80008e8:	4638      	mov	r0, r7
 80008ea:	47c0      	blx	r8
 80008ec:	3001      	adds	r0, #1
 80008ee:	d103      	bne.n	80008f8 <_printf_common+0xac>
 80008f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80008f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80008f8:	3501      	adds	r5, #1
 80008fa:	e7c6      	b.n	800088a <_printf_common+0x3e>
 80008fc:	18e1      	adds	r1, r4, r3
 80008fe:	1c5a      	adds	r2, r3, #1
 8000900:	2030      	movs	r0, #48	; 0x30
 8000902:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000906:	4422      	add	r2, r4
 8000908:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800090c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000910:	3302      	adds	r3, #2
 8000912:	e7c7      	b.n	80008a4 <_printf_common+0x58>
 8000914:	2301      	movs	r3, #1
 8000916:	4622      	mov	r2, r4
 8000918:	4649      	mov	r1, r9
 800091a:	4638      	mov	r0, r7
 800091c:	47c0      	blx	r8
 800091e:	3001      	adds	r0, #1
 8000920:	d0e6      	beq.n	80008f0 <_printf_common+0xa4>
 8000922:	3601      	adds	r6, #1
 8000924:	e7d9      	b.n	80008da <_printf_common+0x8e>
	...

08000928 <_printf_i>:
 8000928:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800092c:	460c      	mov	r4, r1
 800092e:	4691      	mov	r9, r2
 8000930:	7e27      	ldrb	r7, [r4, #24]
 8000932:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000934:	2f78      	cmp	r7, #120	; 0x78
 8000936:	4680      	mov	r8, r0
 8000938:	469a      	mov	sl, r3
 800093a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800093e:	d807      	bhi.n	8000950 <_printf_i+0x28>
 8000940:	2f62      	cmp	r7, #98	; 0x62
 8000942:	d80a      	bhi.n	800095a <_printf_i+0x32>
 8000944:	2f00      	cmp	r7, #0
 8000946:	f000 80d8 	beq.w	8000afa <_printf_i+0x1d2>
 800094a:	2f58      	cmp	r7, #88	; 0x58
 800094c:	f000 80a3 	beq.w	8000a96 <_printf_i+0x16e>
 8000950:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000954:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000958:	e03a      	b.n	80009d0 <_printf_i+0xa8>
 800095a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800095e:	2b15      	cmp	r3, #21
 8000960:	d8f6      	bhi.n	8000950 <_printf_i+0x28>
 8000962:	a001      	add	r0, pc, #4	; (adr r0, 8000968 <_printf_i+0x40>)
 8000964:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000968:	080009c1 	.word	0x080009c1
 800096c:	080009d5 	.word	0x080009d5
 8000970:	08000951 	.word	0x08000951
 8000974:	08000951 	.word	0x08000951
 8000978:	08000951 	.word	0x08000951
 800097c:	08000951 	.word	0x08000951
 8000980:	080009d5 	.word	0x080009d5
 8000984:	08000951 	.word	0x08000951
 8000988:	08000951 	.word	0x08000951
 800098c:	08000951 	.word	0x08000951
 8000990:	08000951 	.word	0x08000951
 8000994:	08000ae1 	.word	0x08000ae1
 8000998:	08000a05 	.word	0x08000a05
 800099c:	08000ac3 	.word	0x08000ac3
 80009a0:	08000951 	.word	0x08000951
 80009a4:	08000951 	.word	0x08000951
 80009a8:	08000b03 	.word	0x08000b03
 80009ac:	08000951 	.word	0x08000951
 80009b0:	08000a05 	.word	0x08000a05
 80009b4:	08000951 	.word	0x08000951
 80009b8:	08000951 	.word	0x08000951
 80009bc:	08000acb 	.word	0x08000acb
 80009c0:	680b      	ldr	r3, [r1, #0]
 80009c2:	1d1a      	adds	r2, r3, #4
 80009c4:	681b      	ldr	r3, [r3, #0]
 80009c6:	600a      	str	r2, [r1, #0]
 80009c8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80009cc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80009d0:	2301      	movs	r3, #1
 80009d2:	e0a3      	b.n	8000b1c <_printf_i+0x1f4>
 80009d4:	6825      	ldr	r5, [r4, #0]
 80009d6:	6808      	ldr	r0, [r1, #0]
 80009d8:	062e      	lsls	r6, r5, #24
 80009da:	f100 0304 	add.w	r3, r0, #4
 80009de:	d50a      	bpl.n	80009f6 <_printf_i+0xce>
 80009e0:	6805      	ldr	r5, [r0, #0]
 80009e2:	600b      	str	r3, [r1, #0]
 80009e4:	2d00      	cmp	r5, #0
 80009e6:	da03      	bge.n	80009f0 <_printf_i+0xc8>
 80009e8:	232d      	movs	r3, #45	; 0x2d
 80009ea:	426d      	negs	r5, r5
 80009ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80009f0:	485e      	ldr	r0, [pc, #376]	; (8000b6c <_printf_i+0x244>)
 80009f2:	230a      	movs	r3, #10
 80009f4:	e019      	b.n	8000a2a <_printf_i+0x102>
 80009f6:	f015 0f40 	tst.w	r5, #64	; 0x40
 80009fa:	6805      	ldr	r5, [r0, #0]
 80009fc:	600b      	str	r3, [r1, #0]
 80009fe:	bf18      	it	ne
 8000a00:	b22d      	sxthne	r5, r5
 8000a02:	e7ef      	b.n	80009e4 <_printf_i+0xbc>
 8000a04:	680b      	ldr	r3, [r1, #0]
 8000a06:	6825      	ldr	r5, [r4, #0]
 8000a08:	1d18      	adds	r0, r3, #4
 8000a0a:	6008      	str	r0, [r1, #0]
 8000a0c:	0628      	lsls	r0, r5, #24
 8000a0e:	d501      	bpl.n	8000a14 <_printf_i+0xec>
 8000a10:	681d      	ldr	r5, [r3, #0]
 8000a12:	e002      	b.n	8000a1a <_printf_i+0xf2>
 8000a14:	0669      	lsls	r1, r5, #25
 8000a16:	d5fb      	bpl.n	8000a10 <_printf_i+0xe8>
 8000a18:	881d      	ldrh	r5, [r3, #0]
 8000a1a:	4854      	ldr	r0, [pc, #336]	; (8000b6c <_printf_i+0x244>)
 8000a1c:	2f6f      	cmp	r7, #111	; 0x6f
 8000a1e:	bf0c      	ite	eq
 8000a20:	2308      	moveq	r3, #8
 8000a22:	230a      	movne	r3, #10
 8000a24:	2100      	movs	r1, #0
 8000a26:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000a2a:	6866      	ldr	r6, [r4, #4]
 8000a2c:	60a6      	str	r6, [r4, #8]
 8000a2e:	2e00      	cmp	r6, #0
 8000a30:	bfa2      	ittt	ge
 8000a32:	6821      	ldrge	r1, [r4, #0]
 8000a34:	f021 0104 	bicge.w	r1, r1, #4
 8000a38:	6021      	strge	r1, [r4, #0]
 8000a3a:	b90d      	cbnz	r5, 8000a40 <_printf_i+0x118>
 8000a3c:	2e00      	cmp	r6, #0
 8000a3e:	d04d      	beq.n	8000adc <_printf_i+0x1b4>
 8000a40:	4616      	mov	r6, r2
 8000a42:	fbb5 f1f3 	udiv	r1, r5, r3
 8000a46:	fb03 5711 	mls	r7, r3, r1, r5
 8000a4a:	5dc7      	ldrb	r7, [r0, r7]
 8000a4c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000a50:	462f      	mov	r7, r5
 8000a52:	42bb      	cmp	r3, r7
 8000a54:	460d      	mov	r5, r1
 8000a56:	d9f4      	bls.n	8000a42 <_printf_i+0x11a>
 8000a58:	2b08      	cmp	r3, #8
 8000a5a:	d10b      	bne.n	8000a74 <_printf_i+0x14c>
 8000a5c:	6823      	ldr	r3, [r4, #0]
 8000a5e:	07df      	lsls	r7, r3, #31
 8000a60:	d508      	bpl.n	8000a74 <_printf_i+0x14c>
 8000a62:	6923      	ldr	r3, [r4, #16]
 8000a64:	6861      	ldr	r1, [r4, #4]
 8000a66:	4299      	cmp	r1, r3
 8000a68:	bfde      	ittt	le
 8000a6a:	2330      	movle	r3, #48	; 0x30
 8000a6c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000a70:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8000a74:	1b92      	subs	r2, r2, r6
 8000a76:	6122      	str	r2, [r4, #16]
 8000a78:	f8cd a000 	str.w	sl, [sp]
 8000a7c:	464b      	mov	r3, r9
 8000a7e:	aa03      	add	r2, sp, #12
 8000a80:	4621      	mov	r1, r4
 8000a82:	4640      	mov	r0, r8
 8000a84:	f7ff fee2 	bl	800084c <_printf_common>
 8000a88:	3001      	adds	r0, #1
 8000a8a:	d14c      	bne.n	8000b26 <_printf_i+0x1fe>
 8000a8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000a90:	b004      	add	sp, #16
 8000a92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a96:	4835      	ldr	r0, [pc, #212]	; (8000b6c <_printf_i+0x244>)
 8000a98:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000a9c:	6823      	ldr	r3, [r4, #0]
 8000a9e:	680e      	ldr	r6, [r1, #0]
 8000aa0:	061f      	lsls	r7, r3, #24
 8000aa2:	f856 5b04 	ldr.w	r5, [r6], #4
 8000aa6:	600e      	str	r6, [r1, #0]
 8000aa8:	d514      	bpl.n	8000ad4 <_printf_i+0x1ac>
 8000aaa:	07d9      	lsls	r1, r3, #31
 8000aac:	bf44      	itt	mi
 8000aae:	f043 0320 	orrmi.w	r3, r3, #32
 8000ab2:	6023      	strmi	r3, [r4, #0]
 8000ab4:	b91d      	cbnz	r5, 8000abe <_printf_i+0x196>
 8000ab6:	6823      	ldr	r3, [r4, #0]
 8000ab8:	f023 0320 	bic.w	r3, r3, #32
 8000abc:	6023      	str	r3, [r4, #0]
 8000abe:	2310      	movs	r3, #16
 8000ac0:	e7b0      	b.n	8000a24 <_printf_i+0xfc>
 8000ac2:	6823      	ldr	r3, [r4, #0]
 8000ac4:	f043 0320 	orr.w	r3, r3, #32
 8000ac8:	6023      	str	r3, [r4, #0]
 8000aca:	2378      	movs	r3, #120	; 0x78
 8000acc:	4828      	ldr	r0, [pc, #160]	; (8000b70 <_printf_i+0x248>)
 8000ace:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000ad2:	e7e3      	b.n	8000a9c <_printf_i+0x174>
 8000ad4:	065e      	lsls	r6, r3, #25
 8000ad6:	bf48      	it	mi
 8000ad8:	b2ad      	uxthmi	r5, r5
 8000ada:	e7e6      	b.n	8000aaa <_printf_i+0x182>
 8000adc:	4616      	mov	r6, r2
 8000ade:	e7bb      	b.n	8000a58 <_printf_i+0x130>
 8000ae0:	680b      	ldr	r3, [r1, #0]
 8000ae2:	6826      	ldr	r6, [r4, #0]
 8000ae4:	6960      	ldr	r0, [r4, #20]
 8000ae6:	1d1d      	adds	r5, r3, #4
 8000ae8:	600d      	str	r5, [r1, #0]
 8000aea:	0635      	lsls	r5, r6, #24
 8000aec:	681b      	ldr	r3, [r3, #0]
 8000aee:	d501      	bpl.n	8000af4 <_printf_i+0x1cc>
 8000af0:	6018      	str	r0, [r3, #0]
 8000af2:	e002      	b.n	8000afa <_printf_i+0x1d2>
 8000af4:	0671      	lsls	r1, r6, #25
 8000af6:	d5fb      	bpl.n	8000af0 <_printf_i+0x1c8>
 8000af8:	8018      	strh	r0, [r3, #0]
 8000afa:	2300      	movs	r3, #0
 8000afc:	6123      	str	r3, [r4, #16]
 8000afe:	4616      	mov	r6, r2
 8000b00:	e7ba      	b.n	8000a78 <_printf_i+0x150>
 8000b02:	680b      	ldr	r3, [r1, #0]
 8000b04:	1d1a      	adds	r2, r3, #4
 8000b06:	600a      	str	r2, [r1, #0]
 8000b08:	681e      	ldr	r6, [r3, #0]
 8000b0a:	6862      	ldr	r2, [r4, #4]
 8000b0c:	2100      	movs	r1, #0
 8000b0e:	4630      	mov	r0, r6
 8000b10:	f7ff fb6e 	bl	80001f0 <memchr>
 8000b14:	b108      	cbz	r0, 8000b1a <_printf_i+0x1f2>
 8000b16:	1b80      	subs	r0, r0, r6
 8000b18:	6060      	str	r0, [r4, #4]
 8000b1a:	6863      	ldr	r3, [r4, #4]
 8000b1c:	6123      	str	r3, [r4, #16]
 8000b1e:	2300      	movs	r3, #0
 8000b20:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000b24:	e7a8      	b.n	8000a78 <_printf_i+0x150>
 8000b26:	6923      	ldr	r3, [r4, #16]
 8000b28:	4632      	mov	r2, r6
 8000b2a:	4649      	mov	r1, r9
 8000b2c:	4640      	mov	r0, r8
 8000b2e:	47d0      	blx	sl
 8000b30:	3001      	adds	r0, #1
 8000b32:	d0ab      	beq.n	8000a8c <_printf_i+0x164>
 8000b34:	6823      	ldr	r3, [r4, #0]
 8000b36:	079b      	lsls	r3, r3, #30
 8000b38:	d413      	bmi.n	8000b62 <_printf_i+0x23a>
 8000b3a:	68e0      	ldr	r0, [r4, #12]
 8000b3c:	9b03      	ldr	r3, [sp, #12]
 8000b3e:	4298      	cmp	r0, r3
 8000b40:	bfb8      	it	lt
 8000b42:	4618      	movlt	r0, r3
 8000b44:	e7a4      	b.n	8000a90 <_printf_i+0x168>
 8000b46:	2301      	movs	r3, #1
 8000b48:	4632      	mov	r2, r6
 8000b4a:	4649      	mov	r1, r9
 8000b4c:	4640      	mov	r0, r8
 8000b4e:	47d0      	blx	sl
 8000b50:	3001      	adds	r0, #1
 8000b52:	d09b      	beq.n	8000a8c <_printf_i+0x164>
 8000b54:	3501      	adds	r5, #1
 8000b56:	68e3      	ldr	r3, [r4, #12]
 8000b58:	9903      	ldr	r1, [sp, #12]
 8000b5a:	1a5b      	subs	r3, r3, r1
 8000b5c:	42ab      	cmp	r3, r5
 8000b5e:	dcf2      	bgt.n	8000b46 <_printf_i+0x21e>
 8000b60:	e7eb      	b.n	8000b3a <_printf_i+0x212>
 8000b62:	2500      	movs	r5, #0
 8000b64:	f104 0619 	add.w	r6, r4, #25
 8000b68:	e7f5      	b.n	8000b56 <_printf_i+0x22e>
 8000b6a:	bf00      	nop
 8000b6c:	080015ed 	.word	0x080015ed
 8000b70:	080015fe 	.word	0x080015fe

08000b74 <iprintf>:
 8000b74:	b40f      	push	{r0, r1, r2, r3}
 8000b76:	4b0a      	ldr	r3, [pc, #40]	; (8000ba0 <iprintf+0x2c>)
 8000b78:	b513      	push	{r0, r1, r4, lr}
 8000b7a:	681c      	ldr	r4, [r3, #0]
 8000b7c:	b124      	cbz	r4, 8000b88 <iprintf+0x14>
 8000b7e:	69a3      	ldr	r3, [r4, #24]
 8000b80:	b913      	cbnz	r3, 8000b88 <iprintf+0x14>
 8000b82:	4620      	mov	r0, r4
 8000b84:	f000 f9fe 	bl	8000f84 <__sinit>
 8000b88:	ab05      	add	r3, sp, #20
 8000b8a:	9a04      	ldr	r2, [sp, #16]
 8000b8c:	68a1      	ldr	r1, [r4, #8]
 8000b8e:	9301      	str	r3, [sp, #4]
 8000b90:	4620      	mov	r0, r4
 8000b92:	f7ff fd21 	bl	80005d8 <_vfiprintf_r>
 8000b96:	b002      	add	sp, #8
 8000b98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b9c:	b004      	add	sp, #16
 8000b9e:	4770      	bx	lr
 8000ba0:	20000000 	.word	0x20000000

08000ba4 <putchar>:
 8000ba4:	4b09      	ldr	r3, [pc, #36]	; (8000bcc <putchar+0x28>)
 8000ba6:	b513      	push	{r0, r1, r4, lr}
 8000ba8:	681c      	ldr	r4, [r3, #0]
 8000baa:	4601      	mov	r1, r0
 8000bac:	b134      	cbz	r4, 8000bbc <putchar+0x18>
 8000bae:	69a3      	ldr	r3, [r4, #24]
 8000bb0:	b923      	cbnz	r3, 8000bbc <putchar+0x18>
 8000bb2:	9001      	str	r0, [sp, #4]
 8000bb4:	4620      	mov	r0, r4
 8000bb6:	f000 f9e5 	bl	8000f84 <__sinit>
 8000bba:	9901      	ldr	r1, [sp, #4]
 8000bbc:	68a2      	ldr	r2, [r4, #8]
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	b002      	add	sp, #8
 8000bc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bc6:	f000 bb8b 	b.w	80012e0 <_putc_r>
 8000bca:	bf00      	nop
 8000bcc:	20000000 	.word	0x20000000

08000bd0 <__swbuf_r>:
 8000bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bd2:	460e      	mov	r6, r1
 8000bd4:	4614      	mov	r4, r2
 8000bd6:	4605      	mov	r5, r0
 8000bd8:	b118      	cbz	r0, 8000be2 <__swbuf_r+0x12>
 8000bda:	6983      	ldr	r3, [r0, #24]
 8000bdc:	b90b      	cbnz	r3, 8000be2 <__swbuf_r+0x12>
 8000bde:	f000 f9d1 	bl	8000f84 <__sinit>
 8000be2:	4b21      	ldr	r3, [pc, #132]	; (8000c68 <__swbuf_r+0x98>)
 8000be4:	429c      	cmp	r4, r3
 8000be6:	d12b      	bne.n	8000c40 <__swbuf_r+0x70>
 8000be8:	686c      	ldr	r4, [r5, #4]
 8000bea:	69a3      	ldr	r3, [r4, #24]
 8000bec:	60a3      	str	r3, [r4, #8]
 8000bee:	89a3      	ldrh	r3, [r4, #12]
 8000bf0:	071a      	lsls	r2, r3, #28
 8000bf2:	d52f      	bpl.n	8000c54 <__swbuf_r+0x84>
 8000bf4:	6923      	ldr	r3, [r4, #16]
 8000bf6:	b36b      	cbz	r3, 8000c54 <__swbuf_r+0x84>
 8000bf8:	6923      	ldr	r3, [r4, #16]
 8000bfa:	6820      	ldr	r0, [r4, #0]
 8000bfc:	1ac0      	subs	r0, r0, r3
 8000bfe:	6963      	ldr	r3, [r4, #20]
 8000c00:	b2f6      	uxtb	r6, r6
 8000c02:	4283      	cmp	r3, r0
 8000c04:	4637      	mov	r7, r6
 8000c06:	dc04      	bgt.n	8000c12 <__swbuf_r+0x42>
 8000c08:	4621      	mov	r1, r4
 8000c0a:	4628      	mov	r0, r5
 8000c0c:	f000 f926 	bl	8000e5c <_fflush_r>
 8000c10:	bb30      	cbnz	r0, 8000c60 <__swbuf_r+0x90>
 8000c12:	68a3      	ldr	r3, [r4, #8]
 8000c14:	3b01      	subs	r3, #1
 8000c16:	60a3      	str	r3, [r4, #8]
 8000c18:	6823      	ldr	r3, [r4, #0]
 8000c1a:	1c5a      	adds	r2, r3, #1
 8000c1c:	6022      	str	r2, [r4, #0]
 8000c1e:	701e      	strb	r6, [r3, #0]
 8000c20:	6963      	ldr	r3, [r4, #20]
 8000c22:	3001      	adds	r0, #1
 8000c24:	4283      	cmp	r3, r0
 8000c26:	d004      	beq.n	8000c32 <__swbuf_r+0x62>
 8000c28:	89a3      	ldrh	r3, [r4, #12]
 8000c2a:	07db      	lsls	r3, r3, #31
 8000c2c:	d506      	bpl.n	8000c3c <__swbuf_r+0x6c>
 8000c2e:	2e0a      	cmp	r6, #10
 8000c30:	d104      	bne.n	8000c3c <__swbuf_r+0x6c>
 8000c32:	4621      	mov	r1, r4
 8000c34:	4628      	mov	r0, r5
 8000c36:	f000 f911 	bl	8000e5c <_fflush_r>
 8000c3a:	b988      	cbnz	r0, 8000c60 <__swbuf_r+0x90>
 8000c3c:	4638      	mov	r0, r7
 8000c3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c40:	4b0a      	ldr	r3, [pc, #40]	; (8000c6c <__swbuf_r+0x9c>)
 8000c42:	429c      	cmp	r4, r3
 8000c44:	d101      	bne.n	8000c4a <__swbuf_r+0x7a>
 8000c46:	68ac      	ldr	r4, [r5, #8]
 8000c48:	e7cf      	b.n	8000bea <__swbuf_r+0x1a>
 8000c4a:	4b09      	ldr	r3, [pc, #36]	; (8000c70 <__swbuf_r+0xa0>)
 8000c4c:	429c      	cmp	r4, r3
 8000c4e:	bf08      	it	eq
 8000c50:	68ec      	ldreq	r4, [r5, #12]
 8000c52:	e7ca      	b.n	8000bea <__swbuf_r+0x1a>
 8000c54:	4621      	mov	r1, r4
 8000c56:	4628      	mov	r0, r5
 8000c58:	f000 f80c 	bl	8000c74 <__swsetup_r>
 8000c5c:	2800      	cmp	r0, #0
 8000c5e:	d0cb      	beq.n	8000bf8 <__swbuf_r+0x28>
 8000c60:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000c64:	e7ea      	b.n	8000c3c <__swbuf_r+0x6c>
 8000c66:	bf00      	nop
 8000c68:	08001630 	.word	0x08001630
 8000c6c:	08001650 	.word	0x08001650
 8000c70:	08001610 	.word	0x08001610

08000c74 <__swsetup_r>:
 8000c74:	4b32      	ldr	r3, [pc, #200]	; (8000d40 <__swsetup_r+0xcc>)
 8000c76:	b570      	push	{r4, r5, r6, lr}
 8000c78:	681d      	ldr	r5, [r3, #0]
 8000c7a:	4606      	mov	r6, r0
 8000c7c:	460c      	mov	r4, r1
 8000c7e:	b125      	cbz	r5, 8000c8a <__swsetup_r+0x16>
 8000c80:	69ab      	ldr	r3, [r5, #24]
 8000c82:	b913      	cbnz	r3, 8000c8a <__swsetup_r+0x16>
 8000c84:	4628      	mov	r0, r5
 8000c86:	f000 f97d 	bl	8000f84 <__sinit>
 8000c8a:	4b2e      	ldr	r3, [pc, #184]	; (8000d44 <__swsetup_r+0xd0>)
 8000c8c:	429c      	cmp	r4, r3
 8000c8e:	d10f      	bne.n	8000cb0 <__swsetup_r+0x3c>
 8000c90:	686c      	ldr	r4, [r5, #4]
 8000c92:	89a3      	ldrh	r3, [r4, #12]
 8000c94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000c98:	0719      	lsls	r1, r3, #28
 8000c9a:	d42c      	bmi.n	8000cf6 <__swsetup_r+0x82>
 8000c9c:	06dd      	lsls	r5, r3, #27
 8000c9e:	d411      	bmi.n	8000cc4 <__swsetup_r+0x50>
 8000ca0:	2309      	movs	r3, #9
 8000ca2:	6033      	str	r3, [r6, #0]
 8000ca4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000ca8:	81a3      	strh	r3, [r4, #12]
 8000caa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000cae:	e03e      	b.n	8000d2e <__swsetup_r+0xba>
 8000cb0:	4b25      	ldr	r3, [pc, #148]	; (8000d48 <__swsetup_r+0xd4>)
 8000cb2:	429c      	cmp	r4, r3
 8000cb4:	d101      	bne.n	8000cba <__swsetup_r+0x46>
 8000cb6:	68ac      	ldr	r4, [r5, #8]
 8000cb8:	e7eb      	b.n	8000c92 <__swsetup_r+0x1e>
 8000cba:	4b24      	ldr	r3, [pc, #144]	; (8000d4c <__swsetup_r+0xd8>)
 8000cbc:	429c      	cmp	r4, r3
 8000cbe:	bf08      	it	eq
 8000cc0:	68ec      	ldreq	r4, [r5, #12]
 8000cc2:	e7e6      	b.n	8000c92 <__swsetup_r+0x1e>
 8000cc4:	0758      	lsls	r0, r3, #29
 8000cc6:	d512      	bpl.n	8000cee <__swsetup_r+0x7a>
 8000cc8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000cca:	b141      	cbz	r1, 8000cde <__swsetup_r+0x6a>
 8000ccc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000cd0:	4299      	cmp	r1, r3
 8000cd2:	d002      	beq.n	8000cda <__swsetup_r+0x66>
 8000cd4:	4630      	mov	r0, r6
 8000cd6:	f000 fa59 	bl	800118c <_free_r>
 8000cda:	2300      	movs	r3, #0
 8000cdc:	6363      	str	r3, [r4, #52]	; 0x34
 8000cde:	89a3      	ldrh	r3, [r4, #12]
 8000ce0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000ce4:	81a3      	strh	r3, [r4, #12]
 8000ce6:	2300      	movs	r3, #0
 8000ce8:	6063      	str	r3, [r4, #4]
 8000cea:	6923      	ldr	r3, [r4, #16]
 8000cec:	6023      	str	r3, [r4, #0]
 8000cee:	89a3      	ldrh	r3, [r4, #12]
 8000cf0:	f043 0308 	orr.w	r3, r3, #8
 8000cf4:	81a3      	strh	r3, [r4, #12]
 8000cf6:	6923      	ldr	r3, [r4, #16]
 8000cf8:	b94b      	cbnz	r3, 8000d0e <__swsetup_r+0x9a>
 8000cfa:	89a3      	ldrh	r3, [r4, #12]
 8000cfc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000d00:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000d04:	d003      	beq.n	8000d0e <__swsetup_r+0x9a>
 8000d06:	4621      	mov	r1, r4
 8000d08:	4630      	mov	r0, r6
 8000d0a:	f000 f9ff 	bl	800110c <__smakebuf_r>
 8000d0e:	89a0      	ldrh	r0, [r4, #12]
 8000d10:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000d14:	f010 0301 	ands.w	r3, r0, #1
 8000d18:	d00a      	beq.n	8000d30 <__swsetup_r+0xbc>
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	60a3      	str	r3, [r4, #8]
 8000d1e:	6963      	ldr	r3, [r4, #20]
 8000d20:	425b      	negs	r3, r3
 8000d22:	61a3      	str	r3, [r4, #24]
 8000d24:	6923      	ldr	r3, [r4, #16]
 8000d26:	b943      	cbnz	r3, 8000d3a <__swsetup_r+0xc6>
 8000d28:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000d2c:	d1ba      	bne.n	8000ca4 <__swsetup_r+0x30>
 8000d2e:	bd70      	pop	{r4, r5, r6, pc}
 8000d30:	0781      	lsls	r1, r0, #30
 8000d32:	bf58      	it	pl
 8000d34:	6963      	ldrpl	r3, [r4, #20]
 8000d36:	60a3      	str	r3, [r4, #8]
 8000d38:	e7f4      	b.n	8000d24 <__swsetup_r+0xb0>
 8000d3a:	2000      	movs	r0, #0
 8000d3c:	e7f7      	b.n	8000d2e <__swsetup_r+0xba>
 8000d3e:	bf00      	nop
 8000d40:	20000000 	.word	0x20000000
 8000d44:	08001630 	.word	0x08001630
 8000d48:	08001650 	.word	0x08001650
 8000d4c:	08001610 	.word	0x08001610

08000d50 <__sflush_r>:
 8000d50:	898a      	ldrh	r2, [r1, #12]
 8000d52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d56:	4605      	mov	r5, r0
 8000d58:	0710      	lsls	r0, r2, #28
 8000d5a:	460c      	mov	r4, r1
 8000d5c:	d458      	bmi.n	8000e10 <__sflush_r+0xc0>
 8000d5e:	684b      	ldr	r3, [r1, #4]
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	dc05      	bgt.n	8000d70 <__sflush_r+0x20>
 8000d64:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000d66:	2b00      	cmp	r3, #0
 8000d68:	dc02      	bgt.n	8000d70 <__sflush_r+0x20>
 8000d6a:	2000      	movs	r0, #0
 8000d6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000d70:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000d72:	2e00      	cmp	r6, #0
 8000d74:	d0f9      	beq.n	8000d6a <__sflush_r+0x1a>
 8000d76:	2300      	movs	r3, #0
 8000d78:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000d7c:	682f      	ldr	r7, [r5, #0]
 8000d7e:	602b      	str	r3, [r5, #0]
 8000d80:	d032      	beq.n	8000de8 <__sflush_r+0x98>
 8000d82:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000d84:	89a3      	ldrh	r3, [r4, #12]
 8000d86:	075a      	lsls	r2, r3, #29
 8000d88:	d505      	bpl.n	8000d96 <__sflush_r+0x46>
 8000d8a:	6863      	ldr	r3, [r4, #4]
 8000d8c:	1ac0      	subs	r0, r0, r3
 8000d8e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000d90:	b10b      	cbz	r3, 8000d96 <__sflush_r+0x46>
 8000d92:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000d94:	1ac0      	subs	r0, r0, r3
 8000d96:	2300      	movs	r3, #0
 8000d98:	4602      	mov	r2, r0
 8000d9a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000d9c:	6a21      	ldr	r1, [r4, #32]
 8000d9e:	4628      	mov	r0, r5
 8000da0:	47b0      	blx	r6
 8000da2:	1c43      	adds	r3, r0, #1
 8000da4:	89a3      	ldrh	r3, [r4, #12]
 8000da6:	d106      	bne.n	8000db6 <__sflush_r+0x66>
 8000da8:	6829      	ldr	r1, [r5, #0]
 8000daa:	291d      	cmp	r1, #29
 8000dac:	d82c      	bhi.n	8000e08 <__sflush_r+0xb8>
 8000dae:	4a2a      	ldr	r2, [pc, #168]	; (8000e58 <__sflush_r+0x108>)
 8000db0:	40ca      	lsrs	r2, r1
 8000db2:	07d6      	lsls	r6, r2, #31
 8000db4:	d528      	bpl.n	8000e08 <__sflush_r+0xb8>
 8000db6:	2200      	movs	r2, #0
 8000db8:	6062      	str	r2, [r4, #4]
 8000dba:	04d9      	lsls	r1, r3, #19
 8000dbc:	6922      	ldr	r2, [r4, #16]
 8000dbe:	6022      	str	r2, [r4, #0]
 8000dc0:	d504      	bpl.n	8000dcc <__sflush_r+0x7c>
 8000dc2:	1c42      	adds	r2, r0, #1
 8000dc4:	d101      	bne.n	8000dca <__sflush_r+0x7a>
 8000dc6:	682b      	ldr	r3, [r5, #0]
 8000dc8:	b903      	cbnz	r3, 8000dcc <__sflush_r+0x7c>
 8000dca:	6560      	str	r0, [r4, #84]	; 0x54
 8000dcc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000dce:	602f      	str	r7, [r5, #0]
 8000dd0:	2900      	cmp	r1, #0
 8000dd2:	d0ca      	beq.n	8000d6a <__sflush_r+0x1a>
 8000dd4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000dd8:	4299      	cmp	r1, r3
 8000dda:	d002      	beq.n	8000de2 <__sflush_r+0x92>
 8000ddc:	4628      	mov	r0, r5
 8000dde:	f000 f9d5 	bl	800118c <_free_r>
 8000de2:	2000      	movs	r0, #0
 8000de4:	6360      	str	r0, [r4, #52]	; 0x34
 8000de6:	e7c1      	b.n	8000d6c <__sflush_r+0x1c>
 8000de8:	6a21      	ldr	r1, [r4, #32]
 8000dea:	2301      	movs	r3, #1
 8000dec:	4628      	mov	r0, r5
 8000dee:	47b0      	blx	r6
 8000df0:	1c41      	adds	r1, r0, #1
 8000df2:	d1c7      	bne.n	8000d84 <__sflush_r+0x34>
 8000df4:	682b      	ldr	r3, [r5, #0]
 8000df6:	2b00      	cmp	r3, #0
 8000df8:	d0c4      	beq.n	8000d84 <__sflush_r+0x34>
 8000dfa:	2b1d      	cmp	r3, #29
 8000dfc:	d001      	beq.n	8000e02 <__sflush_r+0xb2>
 8000dfe:	2b16      	cmp	r3, #22
 8000e00:	d101      	bne.n	8000e06 <__sflush_r+0xb6>
 8000e02:	602f      	str	r7, [r5, #0]
 8000e04:	e7b1      	b.n	8000d6a <__sflush_r+0x1a>
 8000e06:	89a3      	ldrh	r3, [r4, #12]
 8000e08:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e0c:	81a3      	strh	r3, [r4, #12]
 8000e0e:	e7ad      	b.n	8000d6c <__sflush_r+0x1c>
 8000e10:	690f      	ldr	r7, [r1, #16]
 8000e12:	2f00      	cmp	r7, #0
 8000e14:	d0a9      	beq.n	8000d6a <__sflush_r+0x1a>
 8000e16:	0793      	lsls	r3, r2, #30
 8000e18:	680e      	ldr	r6, [r1, #0]
 8000e1a:	bf08      	it	eq
 8000e1c:	694b      	ldreq	r3, [r1, #20]
 8000e1e:	600f      	str	r7, [r1, #0]
 8000e20:	bf18      	it	ne
 8000e22:	2300      	movne	r3, #0
 8000e24:	eba6 0807 	sub.w	r8, r6, r7
 8000e28:	608b      	str	r3, [r1, #8]
 8000e2a:	f1b8 0f00 	cmp.w	r8, #0
 8000e2e:	dd9c      	ble.n	8000d6a <__sflush_r+0x1a>
 8000e30:	6a21      	ldr	r1, [r4, #32]
 8000e32:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000e34:	4643      	mov	r3, r8
 8000e36:	463a      	mov	r2, r7
 8000e38:	4628      	mov	r0, r5
 8000e3a:	47b0      	blx	r6
 8000e3c:	2800      	cmp	r0, #0
 8000e3e:	dc06      	bgt.n	8000e4e <__sflush_r+0xfe>
 8000e40:	89a3      	ldrh	r3, [r4, #12]
 8000e42:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e46:	81a3      	strh	r3, [r4, #12]
 8000e48:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e4c:	e78e      	b.n	8000d6c <__sflush_r+0x1c>
 8000e4e:	4407      	add	r7, r0
 8000e50:	eba8 0800 	sub.w	r8, r8, r0
 8000e54:	e7e9      	b.n	8000e2a <__sflush_r+0xda>
 8000e56:	bf00      	nop
 8000e58:	20400001 	.word	0x20400001

08000e5c <_fflush_r>:
 8000e5c:	b538      	push	{r3, r4, r5, lr}
 8000e5e:	690b      	ldr	r3, [r1, #16]
 8000e60:	4605      	mov	r5, r0
 8000e62:	460c      	mov	r4, r1
 8000e64:	b913      	cbnz	r3, 8000e6c <_fflush_r+0x10>
 8000e66:	2500      	movs	r5, #0
 8000e68:	4628      	mov	r0, r5
 8000e6a:	bd38      	pop	{r3, r4, r5, pc}
 8000e6c:	b118      	cbz	r0, 8000e76 <_fflush_r+0x1a>
 8000e6e:	6983      	ldr	r3, [r0, #24]
 8000e70:	b90b      	cbnz	r3, 8000e76 <_fflush_r+0x1a>
 8000e72:	f000 f887 	bl	8000f84 <__sinit>
 8000e76:	4b14      	ldr	r3, [pc, #80]	; (8000ec8 <_fflush_r+0x6c>)
 8000e78:	429c      	cmp	r4, r3
 8000e7a:	d11b      	bne.n	8000eb4 <_fflush_r+0x58>
 8000e7c:	686c      	ldr	r4, [r5, #4]
 8000e7e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000e82:	2b00      	cmp	r3, #0
 8000e84:	d0ef      	beq.n	8000e66 <_fflush_r+0xa>
 8000e86:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000e88:	07d0      	lsls	r0, r2, #31
 8000e8a:	d404      	bmi.n	8000e96 <_fflush_r+0x3a>
 8000e8c:	0599      	lsls	r1, r3, #22
 8000e8e:	d402      	bmi.n	8000e96 <_fflush_r+0x3a>
 8000e90:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000e92:	f000 f915 	bl	80010c0 <__retarget_lock_acquire_recursive>
 8000e96:	4628      	mov	r0, r5
 8000e98:	4621      	mov	r1, r4
 8000e9a:	f7ff ff59 	bl	8000d50 <__sflush_r>
 8000e9e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000ea0:	07da      	lsls	r2, r3, #31
 8000ea2:	4605      	mov	r5, r0
 8000ea4:	d4e0      	bmi.n	8000e68 <_fflush_r+0xc>
 8000ea6:	89a3      	ldrh	r3, [r4, #12]
 8000ea8:	059b      	lsls	r3, r3, #22
 8000eaa:	d4dd      	bmi.n	8000e68 <_fflush_r+0xc>
 8000eac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000eae:	f000 f908 	bl	80010c2 <__retarget_lock_release_recursive>
 8000eb2:	e7d9      	b.n	8000e68 <_fflush_r+0xc>
 8000eb4:	4b05      	ldr	r3, [pc, #20]	; (8000ecc <_fflush_r+0x70>)
 8000eb6:	429c      	cmp	r4, r3
 8000eb8:	d101      	bne.n	8000ebe <_fflush_r+0x62>
 8000eba:	68ac      	ldr	r4, [r5, #8]
 8000ebc:	e7df      	b.n	8000e7e <_fflush_r+0x22>
 8000ebe:	4b04      	ldr	r3, [pc, #16]	; (8000ed0 <_fflush_r+0x74>)
 8000ec0:	429c      	cmp	r4, r3
 8000ec2:	bf08      	it	eq
 8000ec4:	68ec      	ldreq	r4, [r5, #12]
 8000ec6:	e7da      	b.n	8000e7e <_fflush_r+0x22>
 8000ec8:	08001630 	.word	0x08001630
 8000ecc:	08001650 	.word	0x08001650
 8000ed0:	08001610 	.word	0x08001610

08000ed4 <std>:
 8000ed4:	2300      	movs	r3, #0
 8000ed6:	b510      	push	{r4, lr}
 8000ed8:	4604      	mov	r4, r0
 8000eda:	e9c0 3300 	strd	r3, r3, [r0]
 8000ede:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ee2:	6083      	str	r3, [r0, #8]
 8000ee4:	8181      	strh	r1, [r0, #12]
 8000ee6:	6643      	str	r3, [r0, #100]	; 0x64
 8000ee8:	81c2      	strh	r2, [r0, #14]
 8000eea:	6183      	str	r3, [r0, #24]
 8000eec:	4619      	mov	r1, r3
 8000eee:	2208      	movs	r2, #8
 8000ef0:	305c      	adds	r0, #92	; 0x5c
 8000ef2:	f7ff fb3f 	bl	8000574 <memset>
 8000ef6:	4b05      	ldr	r3, [pc, #20]	; (8000f0c <std+0x38>)
 8000ef8:	6263      	str	r3, [r4, #36]	; 0x24
 8000efa:	4b05      	ldr	r3, [pc, #20]	; (8000f10 <std+0x3c>)
 8000efc:	62a3      	str	r3, [r4, #40]	; 0x28
 8000efe:	4b05      	ldr	r3, [pc, #20]	; (8000f14 <std+0x40>)
 8000f00:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f02:	4b05      	ldr	r3, [pc, #20]	; (8000f18 <std+0x44>)
 8000f04:	6224      	str	r4, [r4, #32]
 8000f06:	6323      	str	r3, [r4, #48]	; 0x30
 8000f08:	bd10      	pop	{r4, pc}
 8000f0a:	bf00      	nop
 8000f0c:	08001391 	.word	0x08001391
 8000f10:	080013b3 	.word	0x080013b3
 8000f14:	080013eb 	.word	0x080013eb
 8000f18:	0800140f 	.word	0x0800140f

08000f1c <_cleanup_r>:
 8000f1c:	4901      	ldr	r1, [pc, #4]	; (8000f24 <_cleanup_r+0x8>)
 8000f1e:	f000 b8af 	b.w	8001080 <_fwalk_reent>
 8000f22:	bf00      	nop
 8000f24:	08000e5d 	.word	0x08000e5d

08000f28 <__sfmoreglue>:
 8000f28:	b570      	push	{r4, r5, r6, lr}
 8000f2a:	1e4a      	subs	r2, r1, #1
 8000f2c:	2568      	movs	r5, #104	; 0x68
 8000f2e:	4355      	muls	r5, r2
 8000f30:	460e      	mov	r6, r1
 8000f32:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000f36:	f000 f979 	bl	800122c <_malloc_r>
 8000f3a:	4604      	mov	r4, r0
 8000f3c:	b140      	cbz	r0, 8000f50 <__sfmoreglue+0x28>
 8000f3e:	2100      	movs	r1, #0
 8000f40:	e9c0 1600 	strd	r1, r6, [r0]
 8000f44:	300c      	adds	r0, #12
 8000f46:	60a0      	str	r0, [r4, #8]
 8000f48:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000f4c:	f7ff fb12 	bl	8000574 <memset>
 8000f50:	4620      	mov	r0, r4
 8000f52:	bd70      	pop	{r4, r5, r6, pc}

08000f54 <__sfp_lock_acquire>:
 8000f54:	4801      	ldr	r0, [pc, #4]	; (8000f5c <__sfp_lock_acquire+0x8>)
 8000f56:	f000 b8b3 	b.w	80010c0 <__retarget_lock_acquire_recursive>
 8000f5a:	bf00      	nop
 8000f5c:	20000094 	.word	0x20000094

08000f60 <__sfp_lock_release>:
 8000f60:	4801      	ldr	r0, [pc, #4]	; (8000f68 <__sfp_lock_release+0x8>)
 8000f62:	f000 b8ae 	b.w	80010c2 <__retarget_lock_release_recursive>
 8000f66:	bf00      	nop
 8000f68:	20000094 	.word	0x20000094

08000f6c <__sinit_lock_acquire>:
 8000f6c:	4801      	ldr	r0, [pc, #4]	; (8000f74 <__sinit_lock_acquire+0x8>)
 8000f6e:	f000 b8a7 	b.w	80010c0 <__retarget_lock_acquire_recursive>
 8000f72:	bf00      	nop
 8000f74:	2000008f 	.word	0x2000008f

08000f78 <__sinit_lock_release>:
 8000f78:	4801      	ldr	r0, [pc, #4]	; (8000f80 <__sinit_lock_release+0x8>)
 8000f7a:	f000 b8a2 	b.w	80010c2 <__retarget_lock_release_recursive>
 8000f7e:	bf00      	nop
 8000f80:	2000008f 	.word	0x2000008f

08000f84 <__sinit>:
 8000f84:	b510      	push	{r4, lr}
 8000f86:	4604      	mov	r4, r0
 8000f88:	f7ff fff0 	bl	8000f6c <__sinit_lock_acquire>
 8000f8c:	69a3      	ldr	r3, [r4, #24]
 8000f8e:	b11b      	cbz	r3, 8000f98 <__sinit+0x14>
 8000f90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000f94:	f7ff bff0 	b.w	8000f78 <__sinit_lock_release>
 8000f98:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000f9c:	6523      	str	r3, [r4, #80]	; 0x50
 8000f9e:	4b13      	ldr	r3, [pc, #76]	; (8000fec <__sinit+0x68>)
 8000fa0:	4a13      	ldr	r2, [pc, #76]	; (8000ff0 <__sinit+0x6c>)
 8000fa2:	681b      	ldr	r3, [r3, #0]
 8000fa4:	62a2      	str	r2, [r4, #40]	; 0x28
 8000fa6:	42a3      	cmp	r3, r4
 8000fa8:	bf04      	itt	eq
 8000faa:	2301      	moveq	r3, #1
 8000fac:	61a3      	streq	r3, [r4, #24]
 8000fae:	4620      	mov	r0, r4
 8000fb0:	f000 f820 	bl	8000ff4 <__sfp>
 8000fb4:	6060      	str	r0, [r4, #4]
 8000fb6:	4620      	mov	r0, r4
 8000fb8:	f000 f81c 	bl	8000ff4 <__sfp>
 8000fbc:	60a0      	str	r0, [r4, #8]
 8000fbe:	4620      	mov	r0, r4
 8000fc0:	f000 f818 	bl	8000ff4 <__sfp>
 8000fc4:	2200      	movs	r2, #0
 8000fc6:	60e0      	str	r0, [r4, #12]
 8000fc8:	2104      	movs	r1, #4
 8000fca:	6860      	ldr	r0, [r4, #4]
 8000fcc:	f7ff ff82 	bl	8000ed4 <std>
 8000fd0:	68a0      	ldr	r0, [r4, #8]
 8000fd2:	2201      	movs	r2, #1
 8000fd4:	2109      	movs	r1, #9
 8000fd6:	f7ff ff7d 	bl	8000ed4 <std>
 8000fda:	68e0      	ldr	r0, [r4, #12]
 8000fdc:	2202      	movs	r2, #2
 8000fde:	2112      	movs	r1, #18
 8000fe0:	f7ff ff78 	bl	8000ed4 <std>
 8000fe4:	2301      	movs	r3, #1
 8000fe6:	61a3      	str	r3, [r4, #24]
 8000fe8:	e7d2      	b.n	8000f90 <__sinit+0xc>
 8000fea:	bf00      	nop
 8000fec:	080015d8 	.word	0x080015d8
 8000ff0:	08000f1d 	.word	0x08000f1d

08000ff4 <__sfp>:
 8000ff4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ff6:	4607      	mov	r7, r0
 8000ff8:	f7ff ffac 	bl	8000f54 <__sfp_lock_acquire>
 8000ffc:	4b1e      	ldr	r3, [pc, #120]	; (8001078 <__sfp+0x84>)
 8000ffe:	681e      	ldr	r6, [r3, #0]
 8001000:	69b3      	ldr	r3, [r6, #24]
 8001002:	b913      	cbnz	r3, 800100a <__sfp+0x16>
 8001004:	4630      	mov	r0, r6
 8001006:	f7ff ffbd 	bl	8000f84 <__sinit>
 800100a:	3648      	adds	r6, #72	; 0x48
 800100c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001010:	3b01      	subs	r3, #1
 8001012:	d503      	bpl.n	800101c <__sfp+0x28>
 8001014:	6833      	ldr	r3, [r6, #0]
 8001016:	b30b      	cbz	r3, 800105c <__sfp+0x68>
 8001018:	6836      	ldr	r6, [r6, #0]
 800101a:	e7f7      	b.n	800100c <__sfp+0x18>
 800101c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001020:	b9d5      	cbnz	r5, 8001058 <__sfp+0x64>
 8001022:	4b16      	ldr	r3, [pc, #88]	; (800107c <__sfp+0x88>)
 8001024:	60e3      	str	r3, [r4, #12]
 8001026:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800102a:	6665      	str	r5, [r4, #100]	; 0x64
 800102c:	f000 f847 	bl	80010be <__retarget_lock_init_recursive>
 8001030:	f7ff ff96 	bl	8000f60 <__sfp_lock_release>
 8001034:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8001038:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800103c:	6025      	str	r5, [r4, #0]
 800103e:	61a5      	str	r5, [r4, #24]
 8001040:	2208      	movs	r2, #8
 8001042:	4629      	mov	r1, r5
 8001044:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001048:	f7ff fa94 	bl	8000574 <memset>
 800104c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001050:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8001054:	4620      	mov	r0, r4
 8001056:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001058:	3468      	adds	r4, #104	; 0x68
 800105a:	e7d9      	b.n	8001010 <__sfp+0x1c>
 800105c:	2104      	movs	r1, #4
 800105e:	4638      	mov	r0, r7
 8001060:	f7ff ff62 	bl	8000f28 <__sfmoreglue>
 8001064:	4604      	mov	r4, r0
 8001066:	6030      	str	r0, [r6, #0]
 8001068:	2800      	cmp	r0, #0
 800106a:	d1d5      	bne.n	8001018 <__sfp+0x24>
 800106c:	f7ff ff78 	bl	8000f60 <__sfp_lock_release>
 8001070:	230c      	movs	r3, #12
 8001072:	603b      	str	r3, [r7, #0]
 8001074:	e7ee      	b.n	8001054 <__sfp+0x60>
 8001076:	bf00      	nop
 8001078:	080015d8 	.word	0x080015d8
 800107c:	ffff0001 	.word	0xffff0001

08001080 <_fwalk_reent>:
 8001080:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001084:	4606      	mov	r6, r0
 8001086:	4688      	mov	r8, r1
 8001088:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800108c:	2700      	movs	r7, #0
 800108e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001092:	f1b9 0901 	subs.w	r9, r9, #1
 8001096:	d505      	bpl.n	80010a4 <_fwalk_reent+0x24>
 8001098:	6824      	ldr	r4, [r4, #0]
 800109a:	2c00      	cmp	r4, #0
 800109c:	d1f7      	bne.n	800108e <_fwalk_reent+0xe>
 800109e:	4638      	mov	r0, r7
 80010a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80010a4:	89ab      	ldrh	r3, [r5, #12]
 80010a6:	2b01      	cmp	r3, #1
 80010a8:	d907      	bls.n	80010ba <_fwalk_reent+0x3a>
 80010aa:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80010ae:	3301      	adds	r3, #1
 80010b0:	d003      	beq.n	80010ba <_fwalk_reent+0x3a>
 80010b2:	4629      	mov	r1, r5
 80010b4:	4630      	mov	r0, r6
 80010b6:	47c0      	blx	r8
 80010b8:	4307      	orrs	r7, r0
 80010ba:	3568      	adds	r5, #104	; 0x68
 80010bc:	e7e9      	b.n	8001092 <_fwalk_reent+0x12>

080010be <__retarget_lock_init_recursive>:
 80010be:	4770      	bx	lr

080010c0 <__retarget_lock_acquire_recursive>:
 80010c0:	4770      	bx	lr

080010c2 <__retarget_lock_release_recursive>:
 80010c2:	4770      	bx	lr

080010c4 <__swhatbuf_r>:
 80010c4:	b570      	push	{r4, r5, r6, lr}
 80010c6:	460e      	mov	r6, r1
 80010c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010cc:	2900      	cmp	r1, #0
 80010ce:	b096      	sub	sp, #88	; 0x58
 80010d0:	4614      	mov	r4, r2
 80010d2:	461d      	mov	r5, r3
 80010d4:	da07      	bge.n	80010e6 <__swhatbuf_r+0x22>
 80010d6:	2300      	movs	r3, #0
 80010d8:	602b      	str	r3, [r5, #0]
 80010da:	89b3      	ldrh	r3, [r6, #12]
 80010dc:	061a      	lsls	r2, r3, #24
 80010de:	d410      	bmi.n	8001102 <__swhatbuf_r+0x3e>
 80010e0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80010e4:	e00e      	b.n	8001104 <__swhatbuf_r+0x40>
 80010e6:	466a      	mov	r2, sp
 80010e8:	f000 f9b8 	bl	800145c <_fstat_r>
 80010ec:	2800      	cmp	r0, #0
 80010ee:	dbf2      	blt.n	80010d6 <__swhatbuf_r+0x12>
 80010f0:	9a01      	ldr	r2, [sp, #4]
 80010f2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80010f6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80010fa:	425a      	negs	r2, r3
 80010fc:	415a      	adcs	r2, r3
 80010fe:	602a      	str	r2, [r5, #0]
 8001100:	e7ee      	b.n	80010e0 <__swhatbuf_r+0x1c>
 8001102:	2340      	movs	r3, #64	; 0x40
 8001104:	2000      	movs	r0, #0
 8001106:	6023      	str	r3, [r4, #0]
 8001108:	b016      	add	sp, #88	; 0x58
 800110a:	bd70      	pop	{r4, r5, r6, pc}

0800110c <__smakebuf_r>:
 800110c:	898b      	ldrh	r3, [r1, #12]
 800110e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001110:	079d      	lsls	r5, r3, #30
 8001112:	4606      	mov	r6, r0
 8001114:	460c      	mov	r4, r1
 8001116:	d507      	bpl.n	8001128 <__smakebuf_r+0x1c>
 8001118:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800111c:	6023      	str	r3, [r4, #0]
 800111e:	6123      	str	r3, [r4, #16]
 8001120:	2301      	movs	r3, #1
 8001122:	6163      	str	r3, [r4, #20]
 8001124:	b002      	add	sp, #8
 8001126:	bd70      	pop	{r4, r5, r6, pc}
 8001128:	ab01      	add	r3, sp, #4
 800112a:	466a      	mov	r2, sp
 800112c:	f7ff ffca 	bl	80010c4 <__swhatbuf_r>
 8001130:	9900      	ldr	r1, [sp, #0]
 8001132:	4605      	mov	r5, r0
 8001134:	4630      	mov	r0, r6
 8001136:	f000 f879 	bl	800122c <_malloc_r>
 800113a:	b948      	cbnz	r0, 8001150 <__smakebuf_r+0x44>
 800113c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001140:	059a      	lsls	r2, r3, #22
 8001142:	d4ef      	bmi.n	8001124 <__smakebuf_r+0x18>
 8001144:	f023 0303 	bic.w	r3, r3, #3
 8001148:	f043 0302 	orr.w	r3, r3, #2
 800114c:	81a3      	strh	r3, [r4, #12]
 800114e:	e7e3      	b.n	8001118 <__smakebuf_r+0xc>
 8001150:	4b0d      	ldr	r3, [pc, #52]	; (8001188 <__smakebuf_r+0x7c>)
 8001152:	62b3      	str	r3, [r6, #40]	; 0x28
 8001154:	89a3      	ldrh	r3, [r4, #12]
 8001156:	6020      	str	r0, [r4, #0]
 8001158:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800115c:	81a3      	strh	r3, [r4, #12]
 800115e:	9b00      	ldr	r3, [sp, #0]
 8001160:	6163      	str	r3, [r4, #20]
 8001162:	9b01      	ldr	r3, [sp, #4]
 8001164:	6120      	str	r0, [r4, #16]
 8001166:	b15b      	cbz	r3, 8001180 <__smakebuf_r+0x74>
 8001168:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800116c:	4630      	mov	r0, r6
 800116e:	f000 f987 	bl	8001480 <_isatty_r>
 8001172:	b128      	cbz	r0, 8001180 <__smakebuf_r+0x74>
 8001174:	89a3      	ldrh	r3, [r4, #12]
 8001176:	f023 0303 	bic.w	r3, r3, #3
 800117a:	f043 0301 	orr.w	r3, r3, #1
 800117e:	81a3      	strh	r3, [r4, #12]
 8001180:	89a0      	ldrh	r0, [r4, #12]
 8001182:	4305      	orrs	r5, r0
 8001184:	81a5      	strh	r5, [r4, #12]
 8001186:	e7cd      	b.n	8001124 <__smakebuf_r+0x18>
 8001188:	08000f1d 	.word	0x08000f1d

0800118c <_free_r>:
 800118c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800118e:	2900      	cmp	r1, #0
 8001190:	d048      	beq.n	8001224 <_free_r+0x98>
 8001192:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001196:	9001      	str	r0, [sp, #4]
 8001198:	2b00      	cmp	r3, #0
 800119a:	f1a1 0404 	sub.w	r4, r1, #4
 800119e:	bfb8      	it	lt
 80011a0:	18e4      	addlt	r4, r4, r3
 80011a2:	f000 f98f 	bl	80014c4 <__malloc_lock>
 80011a6:	4a20      	ldr	r2, [pc, #128]	; (8001228 <_free_r+0x9c>)
 80011a8:	9801      	ldr	r0, [sp, #4]
 80011aa:	6813      	ldr	r3, [r2, #0]
 80011ac:	4615      	mov	r5, r2
 80011ae:	b933      	cbnz	r3, 80011be <_free_r+0x32>
 80011b0:	6063      	str	r3, [r4, #4]
 80011b2:	6014      	str	r4, [r2, #0]
 80011b4:	b003      	add	sp, #12
 80011b6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80011ba:	f000 b989 	b.w	80014d0 <__malloc_unlock>
 80011be:	42a3      	cmp	r3, r4
 80011c0:	d90b      	bls.n	80011da <_free_r+0x4e>
 80011c2:	6821      	ldr	r1, [r4, #0]
 80011c4:	1862      	adds	r2, r4, r1
 80011c6:	4293      	cmp	r3, r2
 80011c8:	bf04      	itt	eq
 80011ca:	681a      	ldreq	r2, [r3, #0]
 80011cc:	685b      	ldreq	r3, [r3, #4]
 80011ce:	6063      	str	r3, [r4, #4]
 80011d0:	bf04      	itt	eq
 80011d2:	1852      	addeq	r2, r2, r1
 80011d4:	6022      	streq	r2, [r4, #0]
 80011d6:	602c      	str	r4, [r5, #0]
 80011d8:	e7ec      	b.n	80011b4 <_free_r+0x28>
 80011da:	461a      	mov	r2, r3
 80011dc:	685b      	ldr	r3, [r3, #4]
 80011de:	b10b      	cbz	r3, 80011e4 <_free_r+0x58>
 80011e0:	42a3      	cmp	r3, r4
 80011e2:	d9fa      	bls.n	80011da <_free_r+0x4e>
 80011e4:	6811      	ldr	r1, [r2, #0]
 80011e6:	1855      	adds	r5, r2, r1
 80011e8:	42a5      	cmp	r5, r4
 80011ea:	d10b      	bne.n	8001204 <_free_r+0x78>
 80011ec:	6824      	ldr	r4, [r4, #0]
 80011ee:	4421      	add	r1, r4
 80011f0:	1854      	adds	r4, r2, r1
 80011f2:	42a3      	cmp	r3, r4
 80011f4:	6011      	str	r1, [r2, #0]
 80011f6:	d1dd      	bne.n	80011b4 <_free_r+0x28>
 80011f8:	681c      	ldr	r4, [r3, #0]
 80011fa:	685b      	ldr	r3, [r3, #4]
 80011fc:	6053      	str	r3, [r2, #4]
 80011fe:	4421      	add	r1, r4
 8001200:	6011      	str	r1, [r2, #0]
 8001202:	e7d7      	b.n	80011b4 <_free_r+0x28>
 8001204:	d902      	bls.n	800120c <_free_r+0x80>
 8001206:	230c      	movs	r3, #12
 8001208:	6003      	str	r3, [r0, #0]
 800120a:	e7d3      	b.n	80011b4 <_free_r+0x28>
 800120c:	6825      	ldr	r5, [r4, #0]
 800120e:	1961      	adds	r1, r4, r5
 8001210:	428b      	cmp	r3, r1
 8001212:	bf04      	itt	eq
 8001214:	6819      	ldreq	r1, [r3, #0]
 8001216:	685b      	ldreq	r3, [r3, #4]
 8001218:	6063      	str	r3, [r4, #4]
 800121a:	bf04      	itt	eq
 800121c:	1949      	addeq	r1, r1, r5
 800121e:	6021      	streq	r1, [r4, #0]
 8001220:	6054      	str	r4, [r2, #4]
 8001222:	e7c7      	b.n	80011b4 <_free_r+0x28>
 8001224:	b003      	add	sp, #12
 8001226:	bd30      	pop	{r4, r5, pc}
 8001228:	20000080 	.word	0x20000080

0800122c <_malloc_r>:
 800122c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800122e:	1ccd      	adds	r5, r1, #3
 8001230:	f025 0503 	bic.w	r5, r5, #3
 8001234:	3508      	adds	r5, #8
 8001236:	2d0c      	cmp	r5, #12
 8001238:	bf38      	it	cc
 800123a:	250c      	movcc	r5, #12
 800123c:	2d00      	cmp	r5, #0
 800123e:	4606      	mov	r6, r0
 8001240:	db01      	blt.n	8001246 <_malloc_r+0x1a>
 8001242:	42a9      	cmp	r1, r5
 8001244:	d903      	bls.n	800124e <_malloc_r+0x22>
 8001246:	230c      	movs	r3, #12
 8001248:	6033      	str	r3, [r6, #0]
 800124a:	2000      	movs	r0, #0
 800124c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800124e:	f000 f939 	bl	80014c4 <__malloc_lock>
 8001252:	4921      	ldr	r1, [pc, #132]	; (80012d8 <_malloc_r+0xac>)
 8001254:	680a      	ldr	r2, [r1, #0]
 8001256:	4614      	mov	r4, r2
 8001258:	b99c      	cbnz	r4, 8001282 <_malloc_r+0x56>
 800125a:	4f20      	ldr	r7, [pc, #128]	; (80012dc <_malloc_r+0xb0>)
 800125c:	683b      	ldr	r3, [r7, #0]
 800125e:	b923      	cbnz	r3, 800126a <_malloc_r+0x3e>
 8001260:	4621      	mov	r1, r4
 8001262:	4630      	mov	r0, r6
 8001264:	f000 f884 	bl	8001370 <_sbrk_r>
 8001268:	6038      	str	r0, [r7, #0]
 800126a:	4629      	mov	r1, r5
 800126c:	4630      	mov	r0, r6
 800126e:	f000 f87f 	bl	8001370 <_sbrk_r>
 8001272:	1c43      	adds	r3, r0, #1
 8001274:	d123      	bne.n	80012be <_malloc_r+0x92>
 8001276:	230c      	movs	r3, #12
 8001278:	6033      	str	r3, [r6, #0]
 800127a:	4630      	mov	r0, r6
 800127c:	f000 f928 	bl	80014d0 <__malloc_unlock>
 8001280:	e7e3      	b.n	800124a <_malloc_r+0x1e>
 8001282:	6823      	ldr	r3, [r4, #0]
 8001284:	1b5b      	subs	r3, r3, r5
 8001286:	d417      	bmi.n	80012b8 <_malloc_r+0x8c>
 8001288:	2b0b      	cmp	r3, #11
 800128a:	d903      	bls.n	8001294 <_malloc_r+0x68>
 800128c:	6023      	str	r3, [r4, #0]
 800128e:	441c      	add	r4, r3
 8001290:	6025      	str	r5, [r4, #0]
 8001292:	e004      	b.n	800129e <_malloc_r+0x72>
 8001294:	6863      	ldr	r3, [r4, #4]
 8001296:	42a2      	cmp	r2, r4
 8001298:	bf0c      	ite	eq
 800129a:	600b      	streq	r3, [r1, #0]
 800129c:	6053      	strne	r3, [r2, #4]
 800129e:	4630      	mov	r0, r6
 80012a0:	f000 f916 	bl	80014d0 <__malloc_unlock>
 80012a4:	f104 000b 	add.w	r0, r4, #11
 80012a8:	1d23      	adds	r3, r4, #4
 80012aa:	f020 0007 	bic.w	r0, r0, #7
 80012ae:	1ac2      	subs	r2, r0, r3
 80012b0:	d0cc      	beq.n	800124c <_malloc_r+0x20>
 80012b2:	1a1b      	subs	r3, r3, r0
 80012b4:	50a3      	str	r3, [r4, r2]
 80012b6:	e7c9      	b.n	800124c <_malloc_r+0x20>
 80012b8:	4622      	mov	r2, r4
 80012ba:	6864      	ldr	r4, [r4, #4]
 80012bc:	e7cc      	b.n	8001258 <_malloc_r+0x2c>
 80012be:	1cc4      	adds	r4, r0, #3
 80012c0:	f024 0403 	bic.w	r4, r4, #3
 80012c4:	42a0      	cmp	r0, r4
 80012c6:	d0e3      	beq.n	8001290 <_malloc_r+0x64>
 80012c8:	1a21      	subs	r1, r4, r0
 80012ca:	4630      	mov	r0, r6
 80012cc:	f000 f850 	bl	8001370 <_sbrk_r>
 80012d0:	3001      	adds	r0, #1
 80012d2:	d1dd      	bne.n	8001290 <_malloc_r+0x64>
 80012d4:	e7cf      	b.n	8001276 <_malloc_r+0x4a>
 80012d6:	bf00      	nop
 80012d8:	20000080 	.word	0x20000080
 80012dc:	20000084 	.word	0x20000084

080012e0 <_putc_r>:
 80012e0:	b570      	push	{r4, r5, r6, lr}
 80012e2:	460d      	mov	r5, r1
 80012e4:	4614      	mov	r4, r2
 80012e6:	4606      	mov	r6, r0
 80012e8:	b118      	cbz	r0, 80012f2 <_putc_r+0x12>
 80012ea:	6983      	ldr	r3, [r0, #24]
 80012ec:	b90b      	cbnz	r3, 80012f2 <_putc_r+0x12>
 80012ee:	f7ff fe49 	bl	8000f84 <__sinit>
 80012f2:	4b1c      	ldr	r3, [pc, #112]	; (8001364 <_putc_r+0x84>)
 80012f4:	429c      	cmp	r4, r3
 80012f6:	d124      	bne.n	8001342 <_putc_r+0x62>
 80012f8:	6874      	ldr	r4, [r6, #4]
 80012fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012fc:	07d8      	lsls	r0, r3, #31
 80012fe:	d405      	bmi.n	800130c <_putc_r+0x2c>
 8001300:	89a3      	ldrh	r3, [r4, #12]
 8001302:	0599      	lsls	r1, r3, #22
 8001304:	d402      	bmi.n	800130c <_putc_r+0x2c>
 8001306:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001308:	f7ff feda 	bl	80010c0 <__retarget_lock_acquire_recursive>
 800130c:	68a3      	ldr	r3, [r4, #8]
 800130e:	3b01      	subs	r3, #1
 8001310:	2b00      	cmp	r3, #0
 8001312:	60a3      	str	r3, [r4, #8]
 8001314:	da05      	bge.n	8001322 <_putc_r+0x42>
 8001316:	69a2      	ldr	r2, [r4, #24]
 8001318:	4293      	cmp	r3, r2
 800131a:	db1c      	blt.n	8001356 <_putc_r+0x76>
 800131c:	b2eb      	uxtb	r3, r5
 800131e:	2b0a      	cmp	r3, #10
 8001320:	d019      	beq.n	8001356 <_putc_r+0x76>
 8001322:	6823      	ldr	r3, [r4, #0]
 8001324:	1c5a      	adds	r2, r3, #1
 8001326:	6022      	str	r2, [r4, #0]
 8001328:	701d      	strb	r5, [r3, #0]
 800132a:	b2ed      	uxtb	r5, r5
 800132c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800132e:	07da      	lsls	r2, r3, #31
 8001330:	d405      	bmi.n	800133e <_putc_r+0x5e>
 8001332:	89a3      	ldrh	r3, [r4, #12]
 8001334:	059b      	lsls	r3, r3, #22
 8001336:	d402      	bmi.n	800133e <_putc_r+0x5e>
 8001338:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800133a:	f7ff fec2 	bl	80010c2 <__retarget_lock_release_recursive>
 800133e:	4628      	mov	r0, r5
 8001340:	bd70      	pop	{r4, r5, r6, pc}
 8001342:	4b09      	ldr	r3, [pc, #36]	; (8001368 <_putc_r+0x88>)
 8001344:	429c      	cmp	r4, r3
 8001346:	d101      	bne.n	800134c <_putc_r+0x6c>
 8001348:	68b4      	ldr	r4, [r6, #8]
 800134a:	e7d6      	b.n	80012fa <_putc_r+0x1a>
 800134c:	4b07      	ldr	r3, [pc, #28]	; (800136c <_putc_r+0x8c>)
 800134e:	429c      	cmp	r4, r3
 8001350:	bf08      	it	eq
 8001352:	68f4      	ldreq	r4, [r6, #12]
 8001354:	e7d1      	b.n	80012fa <_putc_r+0x1a>
 8001356:	4629      	mov	r1, r5
 8001358:	4622      	mov	r2, r4
 800135a:	4630      	mov	r0, r6
 800135c:	f7ff fc38 	bl	8000bd0 <__swbuf_r>
 8001360:	4605      	mov	r5, r0
 8001362:	e7e3      	b.n	800132c <_putc_r+0x4c>
 8001364:	08001630 	.word	0x08001630
 8001368:	08001650 	.word	0x08001650
 800136c:	08001610 	.word	0x08001610

08001370 <_sbrk_r>:
 8001370:	b538      	push	{r3, r4, r5, lr}
 8001372:	4d06      	ldr	r5, [pc, #24]	; (800138c <_sbrk_r+0x1c>)
 8001374:	2300      	movs	r3, #0
 8001376:	4604      	mov	r4, r0
 8001378:	4608      	mov	r0, r1
 800137a:	602b      	str	r3, [r5, #0]
 800137c:	f000 f8e8 	bl	8001550 <_sbrk>
 8001380:	1c43      	adds	r3, r0, #1
 8001382:	d102      	bne.n	800138a <_sbrk_r+0x1a>
 8001384:	682b      	ldr	r3, [r5, #0]
 8001386:	b103      	cbz	r3, 800138a <_sbrk_r+0x1a>
 8001388:	6023      	str	r3, [r4, #0]
 800138a:	bd38      	pop	{r3, r4, r5, pc}
 800138c:	20000098 	.word	0x20000098

08001390 <__sread>:
 8001390:	b510      	push	{r4, lr}
 8001392:	460c      	mov	r4, r1
 8001394:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001398:	f000 f8a0 	bl	80014dc <_read_r>
 800139c:	2800      	cmp	r0, #0
 800139e:	bfab      	itete	ge
 80013a0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80013a2:	89a3      	ldrhlt	r3, [r4, #12]
 80013a4:	181b      	addge	r3, r3, r0
 80013a6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80013aa:	bfac      	ite	ge
 80013ac:	6563      	strge	r3, [r4, #84]	; 0x54
 80013ae:	81a3      	strhlt	r3, [r4, #12]
 80013b0:	bd10      	pop	{r4, pc}

080013b2 <__swrite>:
 80013b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013b6:	461f      	mov	r7, r3
 80013b8:	898b      	ldrh	r3, [r1, #12]
 80013ba:	05db      	lsls	r3, r3, #23
 80013bc:	4605      	mov	r5, r0
 80013be:	460c      	mov	r4, r1
 80013c0:	4616      	mov	r6, r2
 80013c2:	d505      	bpl.n	80013d0 <__swrite+0x1e>
 80013c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013c8:	2302      	movs	r3, #2
 80013ca:	2200      	movs	r2, #0
 80013cc:	f000 f868 	bl	80014a0 <_lseek_r>
 80013d0:	89a3      	ldrh	r3, [r4, #12]
 80013d2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013d6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013da:	81a3      	strh	r3, [r4, #12]
 80013dc:	4632      	mov	r2, r6
 80013de:	463b      	mov	r3, r7
 80013e0:	4628      	mov	r0, r5
 80013e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013e6:	f000 b817 	b.w	8001418 <_write_r>

080013ea <__sseek>:
 80013ea:	b510      	push	{r4, lr}
 80013ec:	460c      	mov	r4, r1
 80013ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013f2:	f000 f855 	bl	80014a0 <_lseek_r>
 80013f6:	1c43      	adds	r3, r0, #1
 80013f8:	89a3      	ldrh	r3, [r4, #12]
 80013fa:	bf15      	itete	ne
 80013fc:	6560      	strne	r0, [r4, #84]	; 0x54
 80013fe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001402:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001406:	81a3      	strheq	r3, [r4, #12]
 8001408:	bf18      	it	ne
 800140a:	81a3      	strhne	r3, [r4, #12]
 800140c:	bd10      	pop	{r4, pc}

0800140e <__sclose>:
 800140e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001412:	f000 b813 	b.w	800143c <_close_r>
	...

08001418 <_write_r>:
 8001418:	b538      	push	{r3, r4, r5, lr}
 800141a:	4d07      	ldr	r5, [pc, #28]	; (8001438 <_write_r+0x20>)
 800141c:	4604      	mov	r4, r0
 800141e:	4608      	mov	r0, r1
 8001420:	4611      	mov	r1, r2
 8001422:	2200      	movs	r2, #0
 8001424:	602a      	str	r2, [r5, #0]
 8001426:	461a      	mov	r2, r3
 8001428:	f7fe ff59 	bl	80002de <_write>
 800142c:	1c43      	adds	r3, r0, #1
 800142e:	d102      	bne.n	8001436 <_write_r+0x1e>
 8001430:	682b      	ldr	r3, [r5, #0]
 8001432:	b103      	cbz	r3, 8001436 <_write_r+0x1e>
 8001434:	6023      	str	r3, [r4, #0]
 8001436:	bd38      	pop	{r3, r4, r5, pc}
 8001438:	20000098 	.word	0x20000098

0800143c <_close_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4d06      	ldr	r5, [pc, #24]	; (8001458 <_close_r+0x1c>)
 8001440:	2300      	movs	r3, #0
 8001442:	4604      	mov	r4, r0
 8001444:	4608      	mov	r0, r1
 8001446:	602b      	str	r3, [r5, #0]
 8001448:	f000 f85a 	bl	8001500 <_close>
 800144c:	1c43      	adds	r3, r0, #1
 800144e:	d102      	bne.n	8001456 <_close_r+0x1a>
 8001450:	682b      	ldr	r3, [r5, #0]
 8001452:	b103      	cbz	r3, 8001456 <_close_r+0x1a>
 8001454:	6023      	str	r3, [r4, #0]
 8001456:	bd38      	pop	{r3, r4, r5, pc}
 8001458:	20000098 	.word	0x20000098

0800145c <_fstat_r>:
 800145c:	b538      	push	{r3, r4, r5, lr}
 800145e:	4d07      	ldr	r5, [pc, #28]	; (800147c <_fstat_r+0x20>)
 8001460:	2300      	movs	r3, #0
 8001462:	4604      	mov	r4, r0
 8001464:	4608      	mov	r0, r1
 8001466:	4611      	mov	r1, r2
 8001468:	602b      	str	r3, [r5, #0]
 800146a:	f000 f851 	bl	8001510 <_fstat>
 800146e:	1c43      	adds	r3, r0, #1
 8001470:	d102      	bne.n	8001478 <_fstat_r+0x1c>
 8001472:	682b      	ldr	r3, [r5, #0]
 8001474:	b103      	cbz	r3, 8001478 <_fstat_r+0x1c>
 8001476:	6023      	str	r3, [r4, #0]
 8001478:	bd38      	pop	{r3, r4, r5, pc}
 800147a:	bf00      	nop
 800147c:	20000098 	.word	0x20000098

08001480 <_isatty_r>:
 8001480:	b538      	push	{r3, r4, r5, lr}
 8001482:	4d06      	ldr	r5, [pc, #24]	; (800149c <_isatty_r+0x1c>)
 8001484:	2300      	movs	r3, #0
 8001486:	4604      	mov	r4, r0
 8001488:	4608      	mov	r0, r1
 800148a:	602b      	str	r3, [r5, #0]
 800148c:	f000 f848 	bl	8001520 <_isatty>
 8001490:	1c43      	adds	r3, r0, #1
 8001492:	d102      	bne.n	800149a <_isatty_r+0x1a>
 8001494:	682b      	ldr	r3, [r5, #0]
 8001496:	b103      	cbz	r3, 800149a <_isatty_r+0x1a>
 8001498:	6023      	str	r3, [r4, #0]
 800149a:	bd38      	pop	{r3, r4, r5, pc}
 800149c:	20000098 	.word	0x20000098

080014a0 <_lseek_r>:
 80014a0:	b538      	push	{r3, r4, r5, lr}
 80014a2:	4d07      	ldr	r5, [pc, #28]	; (80014c0 <_lseek_r+0x20>)
 80014a4:	4604      	mov	r4, r0
 80014a6:	4608      	mov	r0, r1
 80014a8:	4611      	mov	r1, r2
 80014aa:	2200      	movs	r2, #0
 80014ac:	602a      	str	r2, [r5, #0]
 80014ae:	461a      	mov	r2, r3
 80014b0:	f000 f83e 	bl	8001530 <_lseek>
 80014b4:	1c43      	adds	r3, r0, #1
 80014b6:	d102      	bne.n	80014be <_lseek_r+0x1e>
 80014b8:	682b      	ldr	r3, [r5, #0]
 80014ba:	b103      	cbz	r3, 80014be <_lseek_r+0x1e>
 80014bc:	6023      	str	r3, [r4, #0]
 80014be:	bd38      	pop	{r3, r4, r5, pc}
 80014c0:	20000098 	.word	0x20000098

080014c4 <__malloc_lock>:
 80014c4:	4801      	ldr	r0, [pc, #4]	; (80014cc <__malloc_lock+0x8>)
 80014c6:	f7ff bdfb 	b.w	80010c0 <__retarget_lock_acquire_recursive>
 80014ca:	bf00      	nop
 80014cc:	20000090 	.word	0x20000090

080014d0 <__malloc_unlock>:
 80014d0:	4801      	ldr	r0, [pc, #4]	; (80014d8 <__malloc_unlock+0x8>)
 80014d2:	f7ff bdf6 	b.w	80010c2 <__retarget_lock_release_recursive>
 80014d6:	bf00      	nop
 80014d8:	20000090 	.word	0x20000090

080014dc <_read_r>:
 80014dc:	b538      	push	{r3, r4, r5, lr}
 80014de:	4d07      	ldr	r5, [pc, #28]	; (80014fc <_read_r+0x20>)
 80014e0:	4604      	mov	r4, r0
 80014e2:	4608      	mov	r0, r1
 80014e4:	4611      	mov	r1, r2
 80014e6:	2200      	movs	r2, #0
 80014e8:	602a      	str	r2, [r5, #0]
 80014ea:	461a      	mov	r2, r3
 80014ec:	f000 f828 	bl	8001540 <_read>
 80014f0:	1c43      	adds	r3, r0, #1
 80014f2:	d102      	bne.n	80014fa <_read_r+0x1e>
 80014f4:	682b      	ldr	r3, [r5, #0]
 80014f6:	b103      	cbz	r3, 80014fa <_read_r+0x1e>
 80014f8:	6023      	str	r3, [r4, #0]
 80014fa:	bd38      	pop	{r3, r4, r5, pc}
 80014fc:	20000098 	.word	0x20000098

08001500 <_close>:
 8001500:	4b02      	ldr	r3, [pc, #8]	; (800150c <_close+0xc>)
 8001502:	2258      	movs	r2, #88	; 0x58
 8001504:	601a      	str	r2, [r3, #0]
 8001506:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800150a:	4770      	bx	lr
 800150c:	20000098 	.word	0x20000098

08001510 <_fstat>:
 8001510:	4b02      	ldr	r3, [pc, #8]	; (800151c <_fstat+0xc>)
 8001512:	2258      	movs	r2, #88	; 0x58
 8001514:	601a      	str	r2, [r3, #0]
 8001516:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800151a:	4770      	bx	lr
 800151c:	20000098 	.word	0x20000098

08001520 <_isatty>:
 8001520:	4b02      	ldr	r3, [pc, #8]	; (800152c <_isatty+0xc>)
 8001522:	2258      	movs	r2, #88	; 0x58
 8001524:	601a      	str	r2, [r3, #0]
 8001526:	2000      	movs	r0, #0
 8001528:	4770      	bx	lr
 800152a:	bf00      	nop
 800152c:	20000098 	.word	0x20000098

08001530 <_lseek>:
 8001530:	4b02      	ldr	r3, [pc, #8]	; (800153c <_lseek+0xc>)
 8001532:	2258      	movs	r2, #88	; 0x58
 8001534:	601a      	str	r2, [r3, #0]
 8001536:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800153a:	4770      	bx	lr
 800153c:	20000098 	.word	0x20000098

08001540 <_read>:
 8001540:	4b02      	ldr	r3, [pc, #8]	; (800154c <_read+0xc>)
 8001542:	2258      	movs	r2, #88	; 0x58
 8001544:	601a      	str	r2, [r3, #0]
 8001546:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800154a:	4770      	bx	lr
 800154c:	20000098 	.word	0x20000098

08001550 <_sbrk>:
 8001550:	4b04      	ldr	r3, [pc, #16]	; (8001564 <_sbrk+0x14>)
 8001552:	6819      	ldr	r1, [r3, #0]
 8001554:	4602      	mov	r2, r0
 8001556:	b909      	cbnz	r1, 800155c <_sbrk+0xc>
 8001558:	4903      	ldr	r1, [pc, #12]	; (8001568 <_sbrk+0x18>)
 800155a:	6019      	str	r1, [r3, #0]
 800155c:	6818      	ldr	r0, [r3, #0]
 800155e:	4402      	add	r2, r0
 8001560:	601a      	str	r2, [r3, #0]
 8001562:	4770      	bx	lr
 8001564:	20000088 	.word	0x20000088
 8001568:	200000a0 	.word	0x200000a0

0800156c <_init>:
 800156c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800156e:	bf00      	nop
 8001570:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001572:	bc08      	pop	{r3}
 8001574:	469e      	mov	lr, r3
 8001576:	4770      	bx	lr

08001578 <_fini>:
 8001578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800157a:	bf00      	nop
 800157c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800157e:	bc08      	pop	{r3}
 8001580:	469e      	mov	lr, r3
 8001582:	4770      	bx	lr
