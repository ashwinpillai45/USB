
proj001.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013b4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000cc  08001564  08001564  00011564  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001630  08001630  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001630  08001630  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001630  08001630  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001630  08001630  00011630  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001634  08001634  00011634  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001638  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000038  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000009c  2000009c  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   000024d9  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000062e  00000000  00000000  0002256d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00022ba0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000088  00000000  00000000  00022c60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001b9bb  00000000  00000000  00022ce8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000015ad  00000000  00000000  0003e6a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00097380  00000000  00000000  0003fc50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000d6fd0  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b04  00000000  00000000  000d7024  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .stab         00000084  00000000  00000000  000d7b28  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .stabstr      00000117  00000000  00000000  000d7bac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0800154c 	.word	0x0800154c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	0800154c 	.word	0x0800154c

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr

080002de <_write>:
 */

#include "Helper/logger.h"

int _write(int file, char *ptr, int len)
{
 80002de:	b580      	push	{r7, lr}
 80002e0:	b086      	sub	sp, #24
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f7ff ffc7 	bl	8000290 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x16>

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
	...

0800031c <_log>:



static void _log(char const * const logType, char const * const format, va_list args)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	b084      	sub	sp, #16
 8000320:	af00      	add	r7, sp, #0
 8000322:	60f8      	str	r0, [r7, #12]
 8000324:	60b9      	str	r1, [r7, #8]
 8000326:	607a      	str	r2, [r7, #4]
	printf("[%s] : ",logType);
 8000328:	68f9      	ldr	r1, [r7, #12]
 800032a:	4809      	ldr	r0, [pc, #36]	; (8000350 <_log+0x34>)
 800032c:	f000 fc12 	bl	8000b54 <iprintf>
	vfprintf(stdout,format,args);
 8000330:	4b08      	ldr	r3, [pc, #32]	; (8000354 <_log+0x38>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	689b      	ldr	r3, [r3, #8]
 8000336:	687a      	ldr	r2, [r7, #4]
 8000338:	68b9      	ldr	r1, [r7, #8]
 800033a:	4618      	mov	r0, r3
 800033c:	f000 fa6c 	bl	8000818 <vfiprintf>
	printf("\n");
 8000340:	200a      	movs	r0, #10
 8000342:	f000 fc1f 	bl	8000b84 <putchar>
}
 8000346:	bf00      	nop
 8000348:	3710      	adds	r7, #16
 800034a:	46bd      	mov	sp, r7
 800034c:	bd80      	pop	{r7, pc}
 800034e:	bf00      	nop
 8000350:	08001564 	.word	0x08001564
 8000354:	20000000 	.word	0x20000000

08000358 <logInfo>:
	_log("ERROR",format,args);
	va_end(args);
}

void logInfo(char const * const format, ...)
{
 8000358:	b40f      	push	{r0, r1, r2, r3}
 800035a:	b580      	push	{r7, lr}
 800035c:	b082      	sub	sp, #8
 800035e:	af00      	add	r7, sp, #0
	va_list args;
		va_start(args,format);
 8000360:	f107 0314 	add.w	r3, r7, #20
 8000364:	607b      	str	r3, [r7, #4]
		_log("INFO",format,args);
 8000366:	687a      	ldr	r2, [r7, #4]
 8000368:	6939      	ldr	r1, [r7, #16]
 800036a:	4805      	ldr	r0, [pc, #20]	; (8000380 <logInfo+0x28>)
 800036c:	f7ff ffd6 	bl	800031c <_log>
		va_end(args);
}
 8000370:	bf00      	nop
 8000372:	3708      	adds	r7, #8
 8000374:	46bd      	mov	sp, r7
 8000376:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800037a:	b004      	add	sp, #16
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	08001574 	.word	0x08001574

08000384 <main>:
#include "Helper/logger.h"



int main(void)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	af00      	add	r7, sp, #0
	logInfo("Program Entry Point");
 8000388:	4801      	ldr	r0, [pc, #4]	; (8000390 <main+0xc>)
 800038a:	f7ff ffe5 	bl	8000358 <logInfo>
    /* Loop forever */
	for(;;);
 800038e:	e7fe      	b.n	800038e <main+0xa>
 8000390:	08001584 	.word	0x08001584

08000394 <clock_config>:
 *                the below mentioned values. The idea is to generate 48MHz of clock
 *                for comms.
 *                PLLM = 4 PLLN = 72 PLLP = 2 PLLQ = 3 AHBP = 1 APB1 = 2 APB2 = 1
 *
 */
static void clock_config(void) {
 8000394:	b480      	push	{r7}
 8000396:	af00      	add	r7, sp, #0
	//Configuring the flash latency for HCLK = 72MHz
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY,
 8000398:	4b26      	ldr	r3, [pc, #152]	; (8000434 <clock_config+0xa0>)
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	f023 030f 	bic.w	r3, r3, #15
 80003a0:	4a24      	ldr	r2, [pc, #144]	; (8000434 <clock_config+0xa0>)
 80003a2:	f043 0302 	orr.w	r3, r3, #2
 80003a6:	6013      	str	r3, [r2, #0]
			_VAL2FLD(FLASH_ACR_LATENCY,FLASH_ACR_LATENCY_2WS));
	//Enabling HSE
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 80003a8:	4b23      	ldr	r3, [pc, #140]	; (8000438 <clock_config+0xa4>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	4a22      	ldr	r2, [pc, #136]	; (8000438 <clock_config+0xa4>)
 80003ae:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80003b2:	6013      	str	r3, [r2, #0]
	//Wait till HSE is stable
	while(!(READ_BIT(RCC->CR,RCC_CR_HSERDY)));
 80003b4:	bf00      	nop
 80003b6:	4b20      	ldr	r3, [pc, #128]	; (8000438 <clock_config+0xa4>)
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80003be:	2b00      	cmp	r3, #0
 80003c0:	d0f9      	beq.n	80003b6 <clock_config+0x22>
	//Configuring PLL
	MODIFY_REG(RCC->PLLCFGR,
 80003c2:	4b1d      	ldr	r3, [pc, #116]	; (8000438 <clock_config+0xa4>)
 80003c4:	685b      	ldr	r3, [r3, #4]
 80003c6:	4a1d      	ldr	r2, [pc, #116]	; (800043c <clock_config+0xa8>)
 80003c8:	401a      	ands	r2, r3
 80003ca:	491b      	ldr	r1, [pc, #108]	; (8000438 <clock_config+0xa4>)
 80003cc:	4b1c      	ldr	r3, [pc, #112]	; (8000440 <clock_config+0xac>)
 80003ce:	4313      	orrs	r3, r2
 80003d0:	604b      	str	r3, [r1, #4]
			RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLP | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLQ,
			_VAL2FLD(RCC_PLLCFGR_PLLM,4) | _VAL2FLD(RCC_PLLCFGR_PLLN,72) | _VAL2FLD(RCC_PLLCFGR_PLLP,0) | RCC_PLLCFGR_PLLSRC_HSE | RCC_PLLCFGR_PLLQ_3);

	//Activate PLL and wait till it is generated.
	SET_BIT(RCC->CR,RCC_CR_PLLON);
 80003d2:	4b19      	ldr	r3, [pc, #100]	; (8000438 <clock_config+0xa4>)
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	4a18      	ldr	r2, [pc, #96]	; (8000438 <clock_config+0xa4>)
 80003d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003dc:	6013      	str	r3, [r2, #0]
	while(!(READ_BIT(RCC->CR,RCC_CR_PLLRDY)));
 80003de:	bf00      	nop
 80003e0:	4b15      	ldr	r3, [pc, #84]	; (8000438 <clock_config+0xa4>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80003e8:	2b00      	cmp	r3, #0
 80003ea:	d0f9      	beq.n	80003e0 <clock_config+0x4c>
	//Configuring BUS peripheral clocks
	MODIFY_REG(RCC->CFGR,
 80003ec:	4b12      	ldr	r3, [pc, #72]	; (8000438 <clock_config+0xa4>)
 80003ee:	689b      	ldr	r3, [r3, #8]
 80003f0:	f423 437c 	bic.w	r3, r3, #64512	; 0xfc00
 80003f4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80003f8:	4a0f      	ldr	r2, [pc, #60]	; (8000438 <clock_config+0xa4>)
 80003fa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80003fe:	6093      	str	r3, [r2, #8]
				RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2,
				RCC_CFGR_HPRE_DIV1 | RCC_CFGR_PPRE1_DIV2 | RCC_CFGR_PPRE2_DIV1);

	//Changing Sysclock to pll
	MODIFY_REG(RCC->CFGR,
 8000400:	4b0d      	ldr	r3, [pc, #52]	; (8000438 <clock_config+0xa4>)
 8000402:	689b      	ldr	r3, [r3, #8]
 8000404:	f023 0303 	bic.w	r3, r3, #3
 8000408:	4a0b      	ldr	r2, [pc, #44]	; (8000438 <clock_config+0xa4>)
 800040a:	f043 0302 	orr.w	r3, r3, #2
 800040e:	6093      	str	r3, [r2, #8]
					(RCC_CFGR_SW),
					RCC_CFGR_SW_PLL);

	//Wait till PLL is selected as clock source for sysclock
		while(!(READ_BIT(RCC->CFGR,RCC_CFGR_SWS_PLL)));
 8000410:	bf00      	nop
 8000412:	4b09      	ldr	r3, [pc, #36]	; (8000438 <clock_config+0xa4>)
 8000414:	689b      	ldr	r3, [r3, #8]
 8000416:	f003 0308 	and.w	r3, r3, #8
 800041a:	2b00      	cmp	r3, #0
 800041c:	d0f9      	beq.n	8000412 <clock_config+0x7e>
	//HSI OFF
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 800041e:	4b06      	ldr	r3, [pc, #24]	; (8000438 <clock_config+0xa4>)
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	4a05      	ldr	r2, [pc, #20]	; (8000438 <clock_config+0xa4>)
 8000424:	f023 0301 	bic.w	r3, r3, #1
 8000428:	6013      	str	r3, [r2, #0]
}
 800042a:	bf00      	nop
 800042c:	46bd      	mov	sp, r7
 800042e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000432:	4770      	bx	lr
 8000434:	40023c00 	.word	0x40023c00
 8000438:	40023800 	.word	0x40023800
 800043c:	f0bc8000 	.word	0xf0bc8000
 8000440:	03401204 	.word	0x03401204

08000444 <clock_check>:

static void clock_check(void)
{
 8000444:	b480      	push	{r7}
 8000446:	af00      	add	r7, sp, #0
	//Enable Clock to GPIOC
	SET_BIT(RCC->AHB1ENR,RCC_AHB1ENR_GPIOCEN);
 8000448:	4b15      	ldr	r3, [pc, #84]	; (80004a0 <clock_check+0x5c>)
 800044a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800044c:	4a14      	ldr	r2, [pc, #80]	; (80004a0 <clock_check+0x5c>)
 800044e:	f043 0304 	orr.w	r3, r3, #4
 8000452:	6313      	str	r3, [r2, #48]	; 0x30

	//Configuring the parameters for GPIO C pin 9
	//Parameters : Alternate function : AF0, Speed : Low
	SET_BIT(GPIOC->MODER,GPIO_MODER_MODER9_1);     // GPIOC.9 is configured as alternate function
 8000454:	4b13      	ldr	r3, [pc, #76]	; (80004a4 <clock_check+0x60>)
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	4a12      	ldr	r2, [pc, #72]	; (80004a4 <clock_check+0x60>)
 800045a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800045e:	6013      	str	r3, [r2, #0]
	MODIFY_REG(GPIOC->OSPEEDR , GPIO_OSPEEDR_OSPEED9 , _VAL2FLD(GPIO_OSPEEDR_OSPEED9,0)); // Speed is set to low
 8000460:	4b10      	ldr	r3, [pc, #64]	; (80004a4 <clock_check+0x60>)
 8000462:	689b      	ldr	r3, [r3, #8]
 8000464:	4a0f      	ldr	r2, [pc, #60]	; (80004a4 <clock_check+0x60>)
 8000466:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 800046a:	6093      	str	r3, [r2, #8]
	MODIFY_REG(GPIOC->AFR[1],GPIO_AFRH_AFSEL9,_VAL2FLD(GPIO_AFRH_AFSEL9,0)); // AF0 is selected
 800046c:	4b0d      	ldr	r3, [pc, #52]	; (80004a4 <clock_check+0x60>)
 800046e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000470:	4a0c      	ldr	r2, [pc, #48]	; (80004a4 <clock_check+0x60>)
 8000472:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000476:	6253      	str	r3, [r2, #36]	; 0x24

	//Enable MCO registers
	MODIFY_REG(RCC->CFGR, RCC_CFGR_MCO2,_VAL2FLD(RCC_CFGR_MCO2,0x3));
 8000478:	4b09      	ldr	r3, [pc, #36]	; (80004a0 <clock_check+0x5c>)
 800047a:	689b      	ldr	r3, [r3, #8]
 800047c:	4a08      	ldr	r2, [pc, #32]	; (80004a0 <clock_check+0x5c>)
 800047e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8000482:	6093      	str	r3, [r2, #8]
	//Prescaler value of 2
	MODIFY_REG(RCC->CFGR, RCC_CFGR_MCO2PRE,RCC_CFGR_MCO2PRE_2);
 8000484:	4b06      	ldr	r3, [pc, #24]	; (80004a0 <clock_check+0x5c>)
 8000486:	689b      	ldr	r3, [r3, #8]
 8000488:	f023 5360 	bic.w	r3, r3, #939524096	; 0x38000000
 800048c:	4a04      	ldr	r2, [pc, #16]	; (80004a0 <clock_check+0x5c>)
 800048e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000492:	6093      	str	r3, [r2, #8]
}
 8000494:	bf00      	nop
 8000496:	46bd      	mov	sp, r7
 8000498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049c:	4770      	bx	lr
 800049e:	bf00      	nop
 80004a0:	40023800 	.word	0x40023800
 80004a4:	40020800 	.word	0x40020800

080004a8 <SystemInit>:



void SystemInit(void) {
 80004a8:	b580      	push	{r7, lr}
 80004aa:	af00      	add	r7, sp, #0
	//logInfo("Entered System Configuration");
	clock_check();
 80004ac:	f7ff ffca 	bl	8000444 <clock_check>
	clock_config();
 80004b0:	f7ff ff70 	bl	8000394 <clock_config>

}
 80004b4:	bf00      	nop
 80004b6:	bd80      	pop	{r7, pc}

080004b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004b8:	480d      	ldr	r0, [pc, #52]	; (80004f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ba:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80004bc:	f7ff fff4 	bl	80004a8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004c0:	480c      	ldr	r0, [pc, #48]	; (80004f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80004c2:	490d      	ldr	r1, [pc, #52]	; (80004f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004c4:	4a0d      	ldr	r2, [pc, #52]	; (80004fc <LoopForever+0xe>)
  movs r3, #0
 80004c6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004c8:	e002      	b.n	80004d0 <LoopCopyDataInit>

080004ca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004cc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004ce:	3304      	adds	r3, #4

080004d0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004d0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004d2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004d4:	d3f9      	bcc.n	80004ca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004d6:	4a0a      	ldr	r2, [pc, #40]	; (8000500 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004d8:	4c0a      	ldr	r4, [pc, #40]	; (8000504 <LoopForever+0x16>)
  movs r3, #0
 80004da:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004dc:	e001      	b.n	80004e2 <LoopFillZerobss>

080004de <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004de:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004e0:	3204      	adds	r2, #4

080004e2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004e2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004e4:	d3fb      	bcc.n	80004de <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004e6:	f000 f811 	bl	800050c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004ea:	f7ff ff4b 	bl	8000384 <main>

080004ee <LoopForever>:

LoopForever:
    b LoopForever
 80004ee:	e7fe      	b.n	80004ee <LoopForever>
  ldr   r0, =_estack
 80004f0:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80004f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004f8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004fc:	08001638 	.word	0x08001638
  ldr r2, =_sbss
 8000500:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000504:	2000009c 	.word	0x2000009c

08000508 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000508:	e7fe      	b.n	8000508 <ADC_IRQHandler>
	...

0800050c <__libc_init_array>:
 800050c:	b570      	push	{r4, r5, r6, lr}
 800050e:	4d0d      	ldr	r5, [pc, #52]	; (8000544 <__libc_init_array+0x38>)
 8000510:	4c0d      	ldr	r4, [pc, #52]	; (8000548 <__libc_init_array+0x3c>)
 8000512:	1b64      	subs	r4, r4, r5
 8000514:	10a4      	asrs	r4, r4, #2
 8000516:	2600      	movs	r6, #0
 8000518:	42a6      	cmp	r6, r4
 800051a:	d109      	bne.n	8000530 <__libc_init_array+0x24>
 800051c:	4d0b      	ldr	r5, [pc, #44]	; (800054c <__libc_init_array+0x40>)
 800051e:	4c0c      	ldr	r4, [pc, #48]	; (8000550 <__libc_init_array+0x44>)
 8000520:	f001 f814 	bl	800154c <_init>
 8000524:	1b64      	subs	r4, r4, r5
 8000526:	10a4      	asrs	r4, r4, #2
 8000528:	2600      	movs	r6, #0
 800052a:	42a6      	cmp	r6, r4
 800052c:	d105      	bne.n	800053a <__libc_init_array+0x2e>
 800052e:	bd70      	pop	{r4, r5, r6, pc}
 8000530:	f855 3b04 	ldr.w	r3, [r5], #4
 8000534:	4798      	blx	r3
 8000536:	3601      	adds	r6, #1
 8000538:	e7ee      	b.n	8000518 <__libc_init_array+0xc>
 800053a:	f855 3b04 	ldr.w	r3, [r5], #4
 800053e:	4798      	blx	r3
 8000540:	3601      	adds	r6, #1
 8000542:	e7f2      	b.n	800052a <__libc_init_array+0x1e>
 8000544:	08001630 	.word	0x08001630
 8000548:	08001630 	.word	0x08001630
 800054c:	08001630 	.word	0x08001630
 8000550:	08001634 	.word	0x08001634

08000554 <memset>:
 8000554:	4402      	add	r2, r0
 8000556:	4603      	mov	r3, r0
 8000558:	4293      	cmp	r3, r2
 800055a:	d100      	bne.n	800055e <memset+0xa>
 800055c:	4770      	bx	lr
 800055e:	f803 1b01 	strb.w	r1, [r3], #1
 8000562:	e7f9      	b.n	8000558 <memset+0x4>

08000564 <__sfputc_r>:
 8000564:	6893      	ldr	r3, [r2, #8]
 8000566:	3b01      	subs	r3, #1
 8000568:	2b00      	cmp	r3, #0
 800056a:	b410      	push	{r4}
 800056c:	6093      	str	r3, [r2, #8]
 800056e:	da08      	bge.n	8000582 <__sfputc_r+0x1e>
 8000570:	6994      	ldr	r4, [r2, #24]
 8000572:	42a3      	cmp	r3, r4
 8000574:	db01      	blt.n	800057a <__sfputc_r+0x16>
 8000576:	290a      	cmp	r1, #10
 8000578:	d103      	bne.n	8000582 <__sfputc_r+0x1e>
 800057a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800057e:	f000 bb17 	b.w	8000bb0 <__swbuf_r>
 8000582:	6813      	ldr	r3, [r2, #0]
 8000584:	1c58      	adds	r0, r3, #1
 8000586:	6010      	str	r0, [r2, #0]
 8000588:	7019      	strb	r1, [r3, #0]
 800058a:	4608      	mov	r0, r1
 800058c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000590:	4770      	bx	lr

08000592 <__sfputs_r>:
 8000592:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000594:	4606      	mov	r6, r0
 8000596:	460f      	mov	r7, r1
 8000598:	4614      	mov	r4, r2
 800059a:	18d5      	adds	r5, r2, r3
 800059c:	42ac      	cmp	r4, r5
 800059e:	d101      	bne.n	80005a4 <__sfputs_r+0x12>
 80005a0:	2000      	movs	r0, #0
 80005a2:	e007      	b.n	80005b4 <__sfputs_r+0x22>
 80005a4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80005a8:	463a      	mov	r2, r7
 80005aa:	4630      	mov	r0, r6
 80005ac:	f7ff ffda 	bl	8000564 <__sfputc_r>
 80005b0:	1c43      	adds	r3, r0, #1
 80005b2:	d1f3      	bne.n	800059c <__sfputs_r+0xa>
 80005b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080005b8 <_vfiprintf_r>:
 80005b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80005bc:	460d      	mov	r5, r1
 80005be:	b09d      	sub	sp, #116	; 0x74
 80005c0:	4614      	mov	r4, r2
 80005c2:	4698      	mov	r8, r3
 80005c4:	4606      	mov	r6, r0
 80005c6:	b118      	cbz	r0, 80005d0 <_vfiprintf_r+0x18>
 80005c8:	6983      	ldr	r3, [r0, #24]
 80005ca:	b90b      	cbnz	r3, 80005d0 <_vfiprintf_r+0x18>
 80005cc:	f000 fcca 	bl	8000f64 <__sinit>
 80005d0:	4b89      	ldr	r3, [pc, #548]	; (80007f8 <_vfiprintf_r+0x240>)
 80005d2:	429d      	cmp	r5, r3
 80005d4:	d11b      	bne.n	800060e <_vfiprintf_r+0x56>
 80005d6:	6875      	ldr	r5, [r6, #4]
 80005d8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80005da:	07d9      	lsls	r1, r3, #31
 80005dc:	d405      	bmi.n	80005ea <_vfiprintf_r+0x32>
 80005de:	89ab      	ldrh	r3, [r5, #12]
 80005e0:	059a      	lsls	r2, r3, #22
 80005e2:	d402      	bmi.n	80005ea <_vfiprintf_r+0x32>
 80005e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80005e6:	f000 fd5b 	bl	80010a0 <__retarget_lock_acquire_recursive>
 80005ea:	89ab      	ldrh	r3, [r5, #12]
 80005ec:	071b      	lsls	r3, r3, #28
 80005ee:	d501      	bpl.n	80005f4 <_vfiprintf_r+0x3c>
 80005f0:	692b      	ldr	r3, [r5, #16]
 80005f2:	b9eb      	cbnz	r3, 8000630 <_vfiprintf_r+0x78>
 80005f4:	4629      	mov	r1, r5
 80005f6:	4630      	mov	r0, r6
 80005f8:	f000 fb2c 	bl	8000c54 <__swsetup_r>
 80005fc:	b1c0      	cbz	r0, 8000630 <_vfiprintf_r+0x78>
 80005fe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000600:	07dc      	lsls	r4, r3, #31
 8000602:	d50e      	bpl.n	8000622 <_vfiprintf_r+0x6a>
 8000604:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000608:	b01d      	add	sp, #116	; 0x74
 800060a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800060e:	4b7b      	ldr	r3, [pc, #492]	; (80007fc <_vfiprintf_r+0x244>)
 8000610:	429d      	cmp	r5, r3
 8000612:	d101      	bne.n	8000618 <_vfiprintf_r+0x60>
 8000614:	68b5      	ldr	r5, [r6, #8]
 8000616:	e7df      	b.n	80005d8 <_vfiprintf_r+0x20>
 8000618:	4b79      	ldr	r3, [pc, #484]	; (8000800 <_vfiprintf_r+0x248>)
 800061a:	429d      	cmp	r5, r3
 800061c:	bf08      	it	eq
 800061e:	68f5      	ldreq	r5, [r6, #12]
 8000620:	e7da      	b.n	80005d8 <_vfiprintf_r+0x20>
 8000622:	89ab      	ldrh	r3, [r5, #12]
 8000624:	0598      	lsls	r0, r3, #22
 8000626:	d4ed      	bmi.n	8000604 <_vfiprintf_r+0x4c>
 8000628:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800062a:	f000 fd3a 	bl	80010a2 <__retarget_lock_release_recursive>
 800062e:	e7e9      	b.n	8000604 <_vfiprintf_r+0x4c>
 8000630:	2300      	movs	r3, #0
 8000632:	9309      	str	r3, [sp, #36]	; 0x24
 8000634:	2320      	movs	r3, #32
 8000636:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800063a:	f8cd 800c 	str.w	r8, [sp, #12]
 800063e:	2330      	movs	r3, #48	; 0x30
 8000640:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000804 <_vfiprintf_r+0x24c>
 8000644:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000648:	f04f 0901 	mov.w	r9, #1
 800064c:	4623      	mov	r3, r4
 800064e:	469a      	mov	sl, r3
 8000650:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000654:	b10a      	cbz	r2, 800065a <_vfiprintf_r+0xa2>
 8000656:	2a25      	cmp	r2, #37	; 0x25
 8000658:	d1f9      	bne.n	800064e <_vfiprintf_r+0x96>
 800065a:	ebba 0b04 	subs.w	fp, sl, r4
 800065e:	d00b      	beq.n	8000678 <_vfiprintf_r+0xc0>
 8000660:	465b      	mov	r3, fp
 8000662:	4622      	mov	r2, r4
 8000664:	4629      	mov	r1, r5
 8000666:	4630      	mov	r0, r6
 8000668:	f7ff ff93 	bl	8000592 <__sfputs_r>
 800066c:	3001      	adds	r0, #1
 800066e:	f000 80aa 	beq.w	80007c6 <_vfiprintf_r+0x20e>
 8000672:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000674:	445a      	add	r2, fp
 8000676:	9209      	str	r2, [sp, #36]	; 0x24
 8000678:	f89a 3000 	ldrb.w	r3, [sl]
 800067c:	2b00      	cmp	r3, #0
 800067e:	f000 80a2 	beq.w	80007c6 <_vfiprintf_r+0x20e>
 8000682:	2300      	movs	r3, #0
 8000684:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000688:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800068c:	f10a 0a01 	add.w	sl, sl, #1
 8000690:	9304      	str	r3, [sp, #16]
 8000692:	9307      	str	r3, [sp, #28]
 8000694:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000698:	931a      	str	r3, [sp, #104]	; 0x68
 800069a:	4654      	mov	r4, sl
 800069c:	2205      	movs	r2, #5
 800069e:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006a2:	4858      	ldr	r0, [pc, #352]	; (8000804 <_vfiprintf_r+0x24c>)
 80006a4:	f7ff fda4 	bl	80001f0 <memchr>
 80006a8:	9a04      	ldr	r2, [sp, #16]
 80006aa:	b9d8      	cbnz	r0, 80006e4 <_vfiprintf_r+0x12c>
 80006ac:	06d1      	lsls	r1, r2, #27
 80006ae:	bf44      	itt	mi
 80006b0:	2320      	movmi	r3, #32
 80006b2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80006b6:	0713      	lsls	r3, r2, #28
 80006b8:	bf44      	itt	mi
 80006ba:	232b      	movmi	r3, #43	; 0x2b
 80006bc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80006c0:	f89a 3000 	ldrb.w	r3, [sl]
 80006c4:	2b2a      	cmp	r3, #42	; 0x2a
 80006c6:	d015      	beq.n	80006f4 <_vfiprintf_r+0x13c>
 80006c8:	9a07      	ldr	r2, [sp, #28]
 80006ca:	4654      	mov	r4, sl
 80006cc:	2000      	movs	r0, #0
 80006ce:	f04f 0c0a 	mov.w	ip, #10
 80006d2:	4621      	mov	r1, r4
 80006d4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80006d8:	3b30      	subs	r3, #48	; 0x30
 80006da:	2b09      	cmp	r3, #9
 80006dc:	d94e      	bls.n	800077c <_vfiprintf_r+0x1c4>
 80006de:	b1b0      	cbz	r0, 800070e <_vfiprintf_r+0x156>
 80006e0:	9207      	str	r2, [sp, #28]
 80006e2:	e014      	b.n	800070e <_vfiprintf_r+0x156>
 80006e4:	eba0 0308 	sub.w	r3, r0, r8
 80006e8:	fa09 f303 	lsl.w	r3, r9, r3
 80006ec:	4313      	orrs	r3, r2
 80006ee:	9304      	str	r3, [sp, #16]
 80006f0:	46a2      	mov	sl, r4
 80006f2:	e7d2      	b.n	800069a <_vfiprintf_r+0xe2>
 80006f4:	9b03      	ldr	r3, [sp, #12]
 80006f6:	1d19      	adds	r1, r3, #4
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	9103      	str	r1, [sp, #12]
 80006fc:	2b00      	cmp	r3, #0
 80006fe:	bfbb      	ittet	lt
 8000700:	425b      	neglt	r3, r3
 8000702:	f042 0202 	orrlt.w	r2, r2, #2
 8000706:	9307      	strge	r3, [sp, #28]
 8000708:	9307      	strlt	r3, [sp, #28]
 800070a:	bfb8      	it	lt
 800070c:	9204      	strlt	r2, [sp, #16]
 800070e:	7823      	ldrb	r3, [r4, #0]
 8000710:	2b2e      	cmp	r3, #46	; 0x2e
 8000712:	d10c      	bne.n	800072e <_vfiprintf_r+0x176>
 8000714:	7863      	ldrb	r3, [r4, #1]
 8000716:	2b2a      	cmp	r3, #42	; 0x2a
 8000718:	d135      	bne.n	8000786 <_vfiprintf_r+0x1ce>
 800071a:	9b03      	ldr	r3, [sp, #12]
 800071c:	1d1a      	adds	r2, r3, #4
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	9203      	str	r2, [sp, #12]
 8000722:	2b00      	cmp	r3, #0
 8000724:	bfb8      	it	lt
 8000726:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800072a:	3402      	adds	r4, #2
 800072c:	9305      	str	r3, [sp, #20]
 800072e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000814 <_vfiprintf_r+0x25c>
 8000732:	7821      	ldrb	r1, [r4, #0]
 8000734:	2203      	movs	r2, #3
 8000736:	4650      	mov	r0, sl
 8000738:	f7ff fd5a 	bl	80001f0 <memchr>
 800073c:	b140      	cbz	r0, 8000750 <_vfiprintf_r+0x198>
 800073e:	2340      	movs	r3, #64	; 0x40
 8000740:	eba0 000a 	sub.w	r0, r0, sl
 8000744:	fa03 f000 	lsl.w	r0, r3, r0
 8000748:	9b04      	ldr	r3, [sp, #16]
 800074a:	4303      	orrs	r3, r0
 800074c:	3401      	adds	r4, #1
 800074e:	9304      	str	r3, [sp, #16]
 8000750:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000754:	482c      	ldr	r0, [pc, #176]	; (8000808 <_vfiprintf_r+0x250>)
 8000756:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800075a:	2206      	movs	r2, #6
 800075c:	f7ff fd48 	bl	80001f0 <memchr>
 8000760:	2800      	cmp	r0, #0
 8000762:	d03f      	beq.n	80007e4 <_vfiprintf_r+0x22c>
 8000764:	4b29      	ldr	r3, [pc, #164]	; (800080c <_vfiprintf_r+0x254>)
 8000766:	bb1b      	cbnz	r3, 80007b0 <_vfiprintf_r+0x1f8>
 8000768:	9b03      	ldr	r3, [sp, #12]
 800076a:	3307      	adds	r3, #7
 800076c:	f023 0307 	bic.w	r3, r3, #7
 8000770:	3308      	adds	r3, #8
 8000772:	9303      	str	r3, [sp, #12]
 8000774:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000776:	443b      	add	r3, r7
 8000778:	9309      	str	r3, [sp, #36]	; 0x24
 800077a:	e767      	b.n	800064c <_vfiprintf_r+0x94>
 800077c:	fb0c 3202 	mla	r2, ip, r2, r3
 8000780:	460c      	mov	r4, r1
 8000782:	2001      	movs	r0, #1
 8000784:	e7a5      	b.n	80006d2 <_vfiprintf_r+0x11a>
 8000786:	2300      	movs	r3, #0
 8000788:	3401      	adds	r4, #1
 800078a:	9305      	str	r3, [sp, #20]
 800078c:	4619      	mov	r1, r3
 800078e:	f04f 0c0a 	mov.w	ip, #10
 8000792:	4620      	mov	r0, r4
 8000794:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000798:	3a30      	subs	r2, #48	; 0x30
 800079a:	2a09      	cmp	r2, #9
 800079c:	d903      	bls.n	80007a6 <_vfiprintf_r+0x1ee>
 800079e:	2b00      	cmp	r3, #0
 80007a0:	d0c5      	beq.n	800072e <_vfiprintf_r+0x176>
 80007a2:	9105      	str	r1, [sp, #20]
 80007a4:	e7c3      	b.n	800072e <_vfiprintf_r+0x176>
 80007a6:	fb0c 2101 	mla	r1, ip, r1, r2
 80007aa:	4604      	mov	r4, r0
 80007ac:	2301      	movs	r3, #1
 80007ae:	e7f0      	b.n	8000792 <_vfiprintf_r+0x1da>
 80007b0:	ab03      	add	r3, sp, #12
 80007b2:	9300      	str	r3, [sp, #0]
 80007b4:	462a      	mov	r2, r5
 80007b6:	4b16      	ldr	r3, [pc, #88]	; (8000810 <_vfiprintf_r+0x258>)
 80007b8:	a904      	add	r1, sp, #16
 80007ba:	4630      	mov	r0, r6
 80007bc:	f3af 8000 	nop.w
 80007c0:	4607      	mov	r7, r0
 80007c2:	1c78      	adds	r0, r7, #1
 80007c4:	d1d6      	bne.n	8000774 <_vfiprintf_r+0x1bc>
 80007c6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80007c8:	07d9      	lsls	r1, r3, #31
 80007ca:	d405      	bmi.n	80007d8 <_vfiprintf_r+0x220>
 80007cc:	89ab      	ldrh	r3, [r5, #12]
 80007ce:	059a      	lsls	r2, r3, #22
 80007d0:	d402      	bmi.n	80007d8 <_vfiprintf_r+0x220>
 80007d2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80007d4:	f000 fc65 	bl	80010a2 <__retarget_lock_release_recursive>
 80007d8:	89ab      	ldrh	r3, [r5, #12]
 80007da:	065b      	lsls	r3, r3, #25
 80007dc:	f53f af12 	bmi.w	8000604 <_vfiprintf_r+0x4c>
 80007e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80007e2:	e711      	b.n	8000608 <_vfiprintf_r+0x50>
 80007e4:	ab03      	add	r3, sp, #12
 80007e6:	9300      	str	r3, [sp, #0]
 80007e8:	462a      	mov	r2, r5
 80007ea:	4b09      	ldr	r3, [pc, #36]	; (8000810 <_vfiprintf_r+0x258>)
 80007ec:	a904      	add	r1, sp, #16
 80007ee:	4630      	mov	r0, r6
 80007f0:	f000 f88a 	bl	8000908 <_printf_i>
 80007f4:	e7e4      	b.n	80007c0 <_vfiprintf_r+0x208>
 80007f6:	bf00      	nop
 80007f8:	080015f0 	.word	0x080015f0
 80007fc:	08001610 	.word	0x08001610
 8000800:	080015d0 	.word	0x080015d0
 8000804:	0800159c 	.word	0x0800159c
 8000808:	080015a6 	.word	0x080015a6
 800080c:	00000000 	.word	0x00000000
 8000810:	08000593 	.word	0x08000593
 8000814:	080015a2 	.word	0x080015a2

08000818 <vfiprintf>:
 8000818:	4613      	mov	r3, r2
 800081a:	460a      	mov	r2, r1
 800081c:	4601      	mov	r1, r0
 800081e:	4802      	ldr	r0, [pc, #8]	; (8000828 <vfiprintf+0x10>)
 8000820:	6800      	ldr	r0, [r0, #0]
 8000822:	f7ff bec9 	b.w	80005b8 <_vfiprintf_r>
 8000826:	bf00      	nop
 8000828:	20000000 	.word	0x20000000

0800082c <_printf_common>:
 800082c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000830:	4616      	mov	r6, r2
 8000832:	4699      	mov	r9, r3
 8000834:	688a      	ldr	r2, [r1, #8]
 8000836:	690b      	ldr	r3, [r1, #16]
 8000838:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800083c:	4293      	cmp	r3, r2
 800083e:	bfb8      	it	lt
 8000840:	4613      	movlt	r3, r2
 8000842:	6033      	str	r3, [r6, #0]
 8000844:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000848:	4607      	mov	r7, r0
 800084a:	460c      	mov	r4, r1
 800084c:	b10a      	cbz	r2, 8000852 <_printf_common+0x26>
 800084e:	3301      	adds	r3, #1
 8000850:	6033      	str	r3, [r6, #0]
 8000852:	6823      	ldr	r3, [r4, #0]
 8000854:	0699      	lsls	r1, r3, #26
 8000856:	bf42      	ittt	mi
 8000858:	6833      	ldrmi	r3, [r6, #0]
 800085a:	3302      	addmi	r3, #2
 800085c:	6033      	strmi	r3, [r6, #0]
 800085e:	6825      	ldr	r5, [r4, #0]
 8000860:	f015 0506 	ands.w	r5, r5, #6
 8000864:	d106      	bne.n	8000874 <_printf_common+0x48>
 8000866:	f104 0a19 	add.w	sl, r4, #25
 800086a:	68e3      	ldr	r3, [r4, #12]
 800086c:	6832      	ldr	r2, [r6, #0]
 800086e:	1a9b      	subs	r3, r3, r2
 8000870:	42ab      	cmp	r3, r5
 8000872:	dc26      	bgt.n	80008c2 <_printf_common+0x96>
 8000874:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000878:	1e13      	subs	r3, r2, #0
 800087a:	6822      	ldr	r2, [r4, #0]
 800087c:	bf18      	it	ne
 800087e:	2301      	movne	r3, #1
 8000880:	0692      	lsls	r2, r2, #26
 8000882:	d42b      	bmi.n	80008dc <_printf_common+0xb0>
 8000884:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000888:	4649      	mov	r1, r9
 800088a:	4638      	mov	r0, r7
 800088c:	47c0      	blx	r8
 800088e:	3001      	adds	r0, #1
 8000890:	d01e      	beq.n	80008d0 <_printf_common+0xa4>
 8000892:	6823      	ldr	r3, [r4, #0]
 8000894:	68e5      	ldr	r5, [r4, #12]
 8000896:	6832      	ldr	r2, [r6, #0]
 8000898:	f003 0306 	and.w	r3, r3, #6
 800089c:	2b04      	cmp	r3, #4
 800089e:	bf08      	it	eq
 80008a0:	1aad      	subeq	r5, r5, r2
 80008a2:	68a3      	ldr	r3, [r4, #8]
 80008a4:	6922      	ldr	r2, [r4, #16]
 80008a6:	bf0c      	ite	eq
 80008a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80008ac:	2500      	movne	r5, #0
 80008ae:	4293      	cmp	r3, r2
 80008b0:	bfc4      	itt	gt
 80008b2:	1a9b      	subgt	r3, r3, r2
 80008b4:	18ed      	addgt	r5, r5, r3
 80008b6:	2600      	movs	r6, #0
 80008b8:	341a      	adds	r4, #26
 80008ba:	42b5      	cmp	r5, r6
 80008bc:	d11a      	bne.n	80008f4 <_printf_common+0xc8>
 80008be:	2000      	movs	r0, #0
 80008c0:	e008      	b.n	80008d4 <_printf_common+0xa8>
 80008c2:	2301      	movs	r3, #1
 80008c4:	4652      	mov	r2, sl
 80008c6:	4649      	mov	r1, r9
 80008c8:	4638      	mov	r0, r7
 80008ca:	47c0      	blx	r8
 80008cc:	3001      	adds	r0, #1
 80008ce:	d103      	bne.n	80008d8 <_printf_common+0xac>
 80008d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80008d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80008d8:	3501      	adds	r5, #1
 80008da:	e7c6      	b.n	800086a <_printf_common+0x3e>
 80008dc:	18e1      	adds	r1, r4, r3
 80008de:	1c5a      	adds	r2, r3, #1
 80008e0:	2030      	movs	r0, #48	; 0x30
 80008e2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80008e6:	4422      	add	r2, r4
 80008e8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80008ec:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80008f0:	3302      	adds	r3, #2
 80008f2:	e7c7      	b.n	8000884 <_printf_common+0x58>
 80008f4:	2301      	movs	r3, #1
 80008f6:	4622      	mov	r2, r4
 80008f8:	4649      	mov	r1, r9
 80008fa:	4638      	mov	r0, r7
 80008fc:	47c0      	blx	r8
 80008fe:	3001      	adds	r0, #1
 8000900:	d0e6      	beq.n	80008d0 <_printf_common+0xa4>
 8000902:	3601      	adds	r6, #1
 8000904:	e7d9      	b.n	80008ba <_printf_common+0x8e>
	...

08000908 <_printf_i>:
 8000908:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800090c:	460c      	mov	r4, r1
 800090e:	4691      	mov	r9, r2
 8000910:	7e27      	ldrb	r7, [r4, #24]
 8000912:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000914:	2f78      	cmp	r7, #120	; 0x78
 8000916:	4680      	mov	r8, r0
 8000918:	469a      	mov	sl, r3
 800091a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800091e:	d807      	bhi.n	8000930 <_printf_i+0x28>
 8000920:	2f62      	cmp	r7, #98	; 0x62
 8000922:	d80a      	bhi.n	800093a <_printf_i+0x32>
 8000924:	2f00      	cmp	r7, #0
 8000926:	f000 80d8 	beq.w	8000ada <_printf_i+0x1d2>
 800092a:	2f58      	cmp	r7, #88	; 0x58
 800092c:	f000 80a3 	beq.w	8000a76 <_printf_i+0x16e>
 8000930:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000934:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000938:	e03a      	b.n	80009b0 <_printf_i+0xa8>
 800093a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800093e:	2b15      	cmp	r3, #21
 8000940:	d8f6      	bhi.n	8000930 <_printf_i+0x28>
 8000942:	a001      	add	r0, pc, #4	; (adr r0, 8000948 <_printf_i+0x40>)
 8000944:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000948:	080009a1 	.word	0x080009a1
 800094c:	080009b5 	.word	0x080009b5
 8000950:	08000931 	.word	0x08000931
 8000954:	08000931 	.word	0x08000931
 8000958:	08000931 	.word	0x08000931
 800095c:	08000931 	.word	0x08000931
 8000960:	080009b5 	.word	0x080009b5
 8000964:	08000931 	.word	0x08000931
 8000968:	08000931 	.word	0x08000931
 800096c:	08000931 	.word	0x08000931
 8000970:	08000931 	.word	0x08000931
 8000974:	08000ac1 	.word	0x08000ac1
 8000978:	080009e5 	.word	0x080009e5
 800097c:	08000aa3 	.word	0x08000aa3
 8000980:	08000931 	.word	0x08000931
 8000984:	08000931 	.word	0x08000931
 8000988:	08000ae3 	.word	0x08000ae3
 800098c:	08000931 	.word	0x08000931
 8000990:	080009e5 	.word	0x080009e5
 8000994:	08000931 	.word	0x08000931
 8000998:	08000931 	.word	0x08000931
 800099c:	08000aab 	.word	0x08000aab
 80009a0:	680b      	ldr	r3, [r1, #0]
 80009a2:	1d1a      	adds	r2, r3, #4
 80009a4:	681b      	ldr	r3, [r3, #0]
 80009a6:	600a      	str	r2, [r1, #0]
 80009a8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80009ac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80009b0:	2301      	movs	r3, #1
 80009b2:	e0a3      	b.n	8000afc <_printf_i+0x1f4>
 80009b4:	6825      	ldr	r5, [r4, #0]
 80009b6:	6808      	ldr	r0, [r1, #0]
 80009b8:	062e      	lsls	r6, r5, #24
 80009ba:	f100 0304 	add.w	r3, r0, #4
 80009be:	d50a      	bpl.n	80009d6 <_printf_i+0xce>
 80009c0:	6805      	ldr	r5, [r0, #0]
 80009c2:	600b      	str	r3, [r1, #0]
 80009c4:	2d00      	cmp	r5, #0
 80009c6:	da03      	bge.n	80009d0 <_printf_i+0xc8>
 80009c8:	232d      	movs	r3, #45	; 0x2d
 80009ca:	426d      	negs	r5, r5
 80009cc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80009d0:	485e      	ldr	r0, [pc, #376]	; (8000b4c <_printf_i+0x244>)
 80009d2:	230a      	movs	r3, #10
 80009d4:	e019      	b.n	8000a0a <_printf_i+0x102>
 80009d6:	f015 0f40 	tst.w	r5, #64	; 0x40
 80009da:	6805      	ldr	r5, [r0, #0]
 80009dc:	600b      	str	r3, [r1, #0]
 80009de:	bf18      	it	ne
 80009e0:	b22d      	sxthne	r5, r5
 80009e2:	e7ef      	b.n	80009c4 <_printf_i+0xbc>
 80009e4:	680b      	ldr	r3, [r1, #0]
 80009e6:	6825      	ldr	r5, [r4, #0]
 80009e8:	1d18      	adds	r0, r3, #4
 80009ea:	6008      	str	r0, [r1, #0]
 80009ec:	0628      	lsls	r0, r5, #24
 80009ee:	d501      	bpl.n	80009f4 <_printf_i+0xec>
 80009f0:	681d      	ldr	r5, [r3, #0]
 80009f2:	e002      	b.n	80009fa <_printf_i+0xf2>
 80009f4:	0669      	lsls	r1, r5, #25
 80009f6:	d5fb      	bpl.n	80009f0 <_printf_i+0xe8>
 80009f8:	881d      	ldrh	r5, [r3, #0]
 80009fa:	4854      	ldr	r0, [pc, #336]	; (8000b4c <_printf_i+0x244>)
 80009fc:	2f6f      	cmp	r7, #111	; 0x6f
 80009fe:	bf0c      	ite	eq
 8000a00:	2308      	moveq	r3, #8
 8000a02:	230a      	movne	r3, #10
 8000a04:	2100      	movs	r1, #0
 8000a06:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000a0a:	6866      	ldr	r6, [r4, #4]
 8000a0c:	60a6      	str	r6, [r4, #8]
 8000a0e:	2e00      	cmp	r6, #0
 8000a10:	bfa2      	ittt	ge
 8000a12:	6821      	ldrge	r1, [r4, #0]
 8000a14:	f021 0104 	bicge.w	r1, r1, #4
 8000a18:	6021      	strge	r1, [r4, #0]
 8000a1a:	b90d      	cbnz	r5, 8000a20 <_printf_i+0x118>
 8000a1c:	2e00      	cmp	r6, #0
 8000a1e:	d04d      	beq.n	8000abc <_printf_i+0x1b4>
 8000a20:	4616      	mov	r6, r2
 8000a22:	fbb5 f1f3 	udiv	r1, r5, r3
 8000a26:	fb03 5711 	mls	r7, r3, r1, r5
 8000a2a:	5dc7      	ldrb	r7, [r0, r7]
 8000a2c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000a30:	462f      	mov	r7, r5
 8000a32:	42bb      	cmp	r3, r7
 8000a34:	460d      	mov	r5, r1
 8000a36:	d9f4      	bls.n	8000a22 <_printf_i+0x11a>
 8000a38:	2b08      	cmp	r3, #8
 8000a3a:	d10b      	bne.n	8000a54 <_printf_i+0x14c>
 8000a3c:	6823      	ldr	r3, [r4, #0]
 8000a3e:	07df      	lsls	r7, r3, #31
 8000a40:	d508      	bpl.n	8000a54 <_printf_i+0x14c>
 8000a42:	6923      	ldr	r3, [r4, #16]
 8000a44:	6861      	ldr	r1, [r4, #4]
 8000a46:	4299      	cmp	r1, r3
 8000a48:	bfde      	ittt	le
 8000a4a:	2330      	movle	r3, #48	; 0x30
 8000a4c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000a50:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8000a54:	1b92      	subs	r2, r2, r6
 8000a56:	6122      	str	r2, [r4, #16]
 8000a58:	f8cd a000 	str.w	sl, [sp]
 8000a5c:	464b      	mov	r3, r9
 8000a5e:	aa03      	add	r2, sp, #12
 8000a60:	4621      	mov	r1, r4
 8000a62:	4640      	mov	r0, r8
 8000a64:	f7ff fee2 	bl	800082c <_printf_common>
 8000a68:	3001      	adds	r0, #1
 8000a6a:	d14c      	bne.n	8000b06 <_printf_i+0x1fe>
 8000a6c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000a70:	b004      	add	sp, #16
 8000a72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a76:	4835      	ldr	r0, [pc, #212]	; (8000b4c <_printf_i+0x244>)
 8000a78:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000a7c:	6823      	ldr	r3, [r4, #0]
 8000a7e:	680e      	ldr	r6, [r1, #0]
 8000a80:	061f      	lsls	r7, r3, #24
 8000a82:	f856 5b04 	ldr.w	r5, [r6], #4
 8000a86:	600e      	str	r6, [r1, #0]
 8000a88:	d514      	bpl.n	8000ab4 <_printf_i+0x1ac>
 8000a8a:	07d9      	lsls	r1, r3, #31
 8000a8c:	bf44      	itt	mi
 8000a8e:	f043 0320 	orrmi.w	r3, r3, #32
 8000a92:	6023      	strmi	r3, [r4, #0]
 8000a94:	b91d      	cbnz	r5, 8000a9e <_printf_i+0x196>
 8000a96:	6823      	ldr	r3, [r4, #0]
 8000a98:	f023 0320 	bic.w	r3, r3, #32
 8000a9c:	6023      	str	r3, [r4, #0]
 8000a9e:	2310      	movs	r3, #16
 8000aa0:	e7b0      	b.n	8000a04 <_printf_i+0xfc>
 8000aa2:	6823      	ldr	r3, [r4, #0]
 8000aa4:	f043 0320 	orr.w	r3, r3, #32
 8000aa8:	6023      	str	r3, [r4, #0]
 8000aaa:	2378      	movs	r3, #120	; 0x78
 8000aac:	4828      	ldr	r0, [pc, #160]	; (8000b50 <_printf_i+0x248>)
 8000aae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000ab2:	e7e3      	b.n	8000a7c <_printf_i+0x174>
 8000ab4:	065e      	lsls	r6, r3, #25
 8000ab6:	bf48      	it	mi
 8000ab8:	b2ad      	uxthmi	r5, r5
 8000aba:	e7e6      	b.n	8000a8a <_printf_i+0x182>
 8000abc:	4616      	mov	r6, r2
 8000abe:	e7bb      	b.n	8000a38 <_printf_i+0x130>
 8000ac0:	680b      	ldr	r3, [r1, #0]
 8000ac2:	6826      	ldr	r6, [r4, #0]
 8000ac4:	6960      	ldr	r0, [r4, #20]
 8000ac6:	1d1d      	adds	r5, r3, #4
 8000ac8:	600d      	str	r5, [r1, #0]
 8000aca:	0635      	lsls	r5, r6, #24
 8000acc:	681b      	ldr	r3, [r3, #0]
 8000ace:	d501      	bpl.n	8000ad4 <_printf_i+0x1cc>
 8000ad0:	6018      	str	r0, [r3, #0]
 8000ad2:	e002      	b.n	8000ada <_printf_i+0x1d2>
 8000ad4:	0671      	lsls	r1, r6, #25
 8000ad6:	d5fb      	bpl.n	8000ad0 <_printf_i+0x1c8>
 8000ad8:	8018      	strh	r0, [r3, #0]
 8000ada:	2300      	movs	r3, #0
 8000adc:	6123      	str	r3, [r4, #16]
 8000ade:	4616      	mov	r6, r2
 8000ae0:	e7ba      	b.n	8000a58 <_printf_i+0x150>
 8000ae2:	680b      	ldr	r3, [r1, #0]
 8000ae4:	1d1a      	adds	r2, r3, #4
 8000ae6:	600a      	str	r2, [r1, #0]
 8000ae8:	681e      	ldr	r6, [r3, #0]
 8000aea:	6862      	ldr	r2, [r4, #4]
 8000aec:	2100      	movs	r1, #0
 8000aee:	4630      	mov	r0, r6
 8000af0:	f7ff fb7e 	bl	80001f0 <memchr>
 8000af4:	b108      	cbz	r0, 8000afa <_printf_i+0x1f2>
 8000af6:	1b80      	subs	r0, r0, r6
 8000af8:	6060      	str	r0, [r4, #4]
 8000afa:	6863      	ldr	r3, [r4, #4]
 8000afc:	6123      	str	r3, [r4, #16]
 8000afe:	2300      	movs	r3, #0
 8000b00:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000b04:	e7a8      	b.n	8000a58 <_printf_i+0x150>
 8000b06:	6923      	ldr	r3, [r4, #16]
 8000b08:	4632      	mov	r2, r6
 8000b0a:	4649      	mov	r1, r9
 8000b0c:	4640      	mov	r0, r8
 8000b0e:	47d0      	blx	sl
 8000b10:	3001      	adds	r0, #1
 8000b12:	d0ab      	beq.n	8000a6c <_printf_i+0x164>
 8000b14:	6823      	ldr	r3, [r4, #0]
 8000b16:	079b      	lsls	r3, r3, #30
 8000b18:	d413      	bmi.n	8000b42 <_printf_i+0x23a>
 8000b1a:	68e0      	ldr	r0, [r4, #12]
 8000b1c:	9b03      	ldr	r3, [sp, #12]
 8000b1e:	4298      	cmp	r0, r3
 8000b20:	bfb8      	it	lt
 8000b22:	4618      	movlt	r0, r3
 8000b24:	e7a4      	b.n	8000a70 <_printf_i+0x168>
 8000b26:	2301      	movs	r3, #1
 8000b28:	4632      	mov	r2, r6
 8000b2a:	4649      	mov	r1, r9
 8000b2c:	4640      	mov	r0, r8
 8000b2e:	47d0      	blx	sl
 8000b30:	3001      	adds	r0, #1
 8000b32:	d09b      	beq.n	8000a6c <_printf_i+0x164>
 8000b34:	3501      	adds	r5, #1
 8000b36:	68e3      	ldr	r3, [r4, #12]
 8000b38:	9903      	ldr	r1, [sp, #12]
 8000b3a:	1a5b      	subs	r3, r3, r1
 8000b3c:	42ab      	cmp	r3, r5
 8000b3e:	dcf2      	bgt.n	8000b26 <_printf_i+0x21e>
 8000b40:	e7eb      	b.n	8000b1a <_printf_i+0x212>
 8000b42:	2500      	movs	r5, #0
 8000b44:	f104 0619 	add.w	r6, r4, #25
 8000b48:	e7f5      	b.n	8000b36 <_printf_i+0x22e>
 8000b4a:	bf00      	nop
 8000b4c:	080015ad 	.word	0x080015ad
 8000b50:	080015be 	.word	0x080015be

08000b54 <iprintf>:
 8000b54:	b40f      	push	{r0, r1, r2, r3}
 8000b56:	4b0a      	ldr	r3, [pc, #40]	; (8000b80 <iprintf+0x2c>)
 8000b58:	b513      	push	{r0, r1, r4, lr}
 8000b5a:	681c      	ldr	r4, [r3, #0]
 8000b5c:	b124      	cbz	r4, 8000b68 <iprintf+0x14>
 8000b5e:	69a3      	ldr	r3, [r4, #24]
 8000b60:	b913      	cbnz	r3, 8000b68 <iprintf+0x14>
 8000b62:	4620      	mov	r0, r4
 8000b64:	f000 f9fe 	bl	8000f64 <__sinit>
 8000b68:	ab05      	add	r3, sp, #20
 8000b6a:	9a04      	ldr	r2, [sp, #16]
 8000b6c:	68a1      	ldr	r1, [r4, #8]
 8000b6e:	9301      	str	r3, [sp, #4]
 8000b70:	4620      	mov	r0, r4
 8000b72:	f7ff fd21 	bl	80005b8 <_vfiprintf_r>
 8000b76:	b002      	add	sp, #8
 8000b78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b7c:	b004      	add	sp, #16
 8000b7e:	4770      	bx	lr
 8000b80:	20000000 	.word	0x20000000

08000b84 <putchar>:
 8000b84:	4b09      	ldr	r3, [pc, #36]	; (8000bac <putchar+0x28>)
 8000b86:	b513      	push	{r0, r1, r4, lr}
 8000b88:	681c      	ldr	r4, [r3, #0]
 8000b8a:	4601      	mov	r1, r0
 8000b8c:	b134      	cbz	r4, 8000b9c <putchar+0x18>
 8000b8e:	69a3      	ldr	r3, [r4, #24]
 8000b90:	b923      	cbnz	r3, 8000b9c <putchar+0x18>
 8000b92:	9001      	str	r0, [sp, #4]
 8000b94:	4620      	mov	r0, r4
 8000b96:	f000 f9e5 	bl	8000f64 <__sinit>
 8000b9a:	9901      	ldr	r1, [sp, #4]
 8000b9c:	68a2      	ldr	r2, [r4, #8]
 8000b9e:	4620      	mov	r0, r4
 8000ba0:	b002      	add	sp, #8
 8000ba2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000ba6:	f000 bb8b 	b.w	80012c0 <_putc_r>
 8000baa:	bf00      	nop
 8000bac:	20000000 	.word	0x20000000

08000bb0 <__swbuf_r>:
 8000bb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bb2:	460e      	mov	r6, r1
 8000bb4:	4614      	mov	r4, r2
 8000bb6:	4605      	mov	r5, r0
 8000bb8:	b118      	cbz	r0, 8000bc2 <__swbuf_r+0x12>
 8000bba:	6983      	ldr	r3, [r0, #24]
 8000bbc:	b90b      	cbnz	r3, 8000bc2 <__swbuf_r+0x12>
 8000bbe:	f000 f9d1 	bl	8000f64 <__sinit>
 8000bc2:	4b21      	ldr	r3, [pc, #132]	; (8000c48 <__swbuf_r+0x98>)
 8000bc4:	429c      	cmp	r4, r3
 8000bc6:	d12b      	bne.n	8000c20 <__swbuf_r+0x70>
 8000bc8:	686c      	ldr	r4, [r5, #4]
 8000bca:	69a3      	ldr	r3, [r4, #24]
 8000bcc:	60a3      	str	r3, [r4, #8]
 8000bce:	89a3      	ldrh	r3, [r4, #12]
 8000bd0:	071a      	lsls	r2, r3, #28
 8000bd2:	d52f      	bpl.n	8000c34 <__swbuf_r+0x84>
 8000bd4:	6923      	ldr	r3, [r4, #16]
 8000bd6:	b36b      	cbz	r3, 8000c34 <__swbuf_r+0x84>
 8000bd8:	6923      	ldr	r3, [r4, #16]
 8000bda:	6820      	ldr	r0, [r4, #0]
 8000bdc:	1ac0      	subs	r0, r0, r3
 8000bde:	6963      	ldr	r3, [r4, #20]
 8000be0:	b2f6      	uxtb	r6, r6
 8000be2:	4283      	cmp	r3, r0
 8000be4:	4637      	mov	r7, r6
 8000be6:	dc04      	bgt.n	8000bf2 <__swbuf_r+0x42>
 8000be8:	4621      	mov	r1, r4
 8000bea:	4628      	mov	r0, r5
 8000bec:	f000 f926 	bl	8000e3c <_fflush_r>
 8000bf0:	bb30      	cbnz	r0, 8000c40 <__swbuf_r+0x90>
 8000bf2:	68a3      	ldr	r3, [r4, #8]
 8000bf4:	3b01      	subs	r3, #1
 8000bf6:	60a3      	str	r3, [r4, #8]
 8000bf8:	6823      	ldr	r3, [r4, #0]
 8000bfa:	1c5a      	adds	r2, r3, #1
 8000bfc:	6022      	str	r2, [r4, #0]
 8000bfe:	701e      	strb	r6, [r3, #0]
 8000c00:	6963      	ldr	r3, [r4, #20]
 8000c02:	3001      	adds	r0, #1
 8000c04:	4283      	cmp	r3, r0
 8000c06:	d004      	beq.n	8000c12 <__swbuf_r+0x62>
 8000c08:	89a3      	ldrh	r3, [r4, #12]
 8000c0a:	07db      	lsls	r3, r3, #31
 8000c0c:	d506      	bpl.n	8000c1c <__swbuf_r+0x6c>
 8000c0e:	2e0a      	cmp	r6, #10
 8000c10:	d104      	bne.n	8000c1c <__swbuf_r+0x6c>
 8000c12:	4621      	mov	r1, r4
 8000c14:	4628      	mov	r0, r5
 8000c16:	f000 f911 	bl	8000e3c <_fflush_r>
 8000c1a:	b988      	cbnz	r0, 8000c40 <__swbuf_r+0x90>
 8000c1c:	4638      	mov	r0, r7
 8000c1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c20:	4b0a      	ldr	r3, [pc, #40]	; (8000c4c <__swbuf_r+0x9c>)
 8000c22:	429c      	cmp	r4, r3
 8000c24:	d101      	bne.n	8000c2a <__swbuf_r+0x7a>
 8000c26:	68ac      	ldr	r4, [r5, #8]
 8000c28:	e7cf      	b.n	8000bca <__swbuf_r+0x1a>
 8000c2a:	4b09      	ldr	r3, [pc, #36]	; (8000c50 <__swbuf_r+0xa0>)
 8000c2c:	429c      	cmp	r4, r3
 8000c2e:	bf08      	it	eq
 8000c30:	68ec      	ldreq	r4, [r5, #12]
 8000c32:	e7ca      	b.n	8000bca <__swbuf_r+0x1a>
 8000c34:	4621      	mov	r1, r4
 8000c36:	4628      	mov	r0, r5
 8000c38:	f000 f80c 	bl	8000c54 <__swsetup_r>
 8000c3c:	2800      	cmp	r0, #0
 8000c3e:	d0cb      	beq.n	8000bd8 <__swbuf_r+0x28>
 8000c40:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000c44:	e7ea      	b.n	8000c1c <__swbuf_r+0x6c>
 8000c46:	bf00      	nop
 8000c48:	080015f0 	.word	0x080015f0
 8000c4c:	08001610 	.word	0x08001610
 8000c50:	080015d0 	.word	0x080015d0

08000c54 <__swsetup_r>:
 8000c54:	4b32      	ldr	r3, [pc, #200]	; (8000d20 <__swsetup_r+0xcc>)
 8000c56:	b570      	push	{r4, r5, r6, lr}
 8000c58:	681d      	ldr	r5, [r3, #0]
 8000c5a:	4606      	mov	r6, r0
 8000c5c:	460c      	mov	r4, r1
 8000c5e:	b125      	cbz	r5, 8000c6a <__swsetup_r+0x16>
 8000c60:	69ab      	ldr	r3, [r5, #24]
 8000c62:	b913      	cbnz	r3, 8000c6a <__swsetup_r+0x16>
 8000c64:	4628      	mov	r0, r5
 8000c66:	f000 f97d 	bl	8000f64 <__sinit>
 8000c6a:	4b2e      	ldr	r3, [pc, #184]	; (8000d24 <__swsetup_r+0xd0>)
 8000c6c:	429c      	cmp	r4, r3
 8000c6e:	d10f      	bne.n	8000c90 <__swsetup_r+0x3c>
 8000c70:	686c      	ldr	r4, [r5, #4]
 8000c72:	89a3      	ldrh	r3, [r4, #12]
 8000c74:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000c78:	0719      	lsls	r1, r3, #28
 8000c7a:	d42c      	bmi.n	8000cd6 <__swsetup_r+0x82>
 8000c7c:	06dd      	lsls	r5, r3, #27
 8000c7e:	d411      	bmi.n	8000ca4 <__swsetup_r+0x50>
 8000c80:	2309      	movs	r3, #9
 8000c82:	6033      	str	r3, [r6, #0]
 8000c84:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000c88:	81a3      	strh	r3, [r4, #12]
 8000c8a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c8e:	e03e      	b.n	8000d0e <__swsetup_r+0xba>
 8000c90:	4b25      	ldr	r3, [pc, #148]	; (8000d28 <__swsetup_r+0xd4>)
 8000c92:	429c      	cmp	r4, r3
 8000c94:	d101      	bne.n	8000c9a <__swsetup_r+0x46>
 8000c96:	68ac      	ldr	r4, [r5, #8]
 8000c98:	e7eb      	b.n	8000c72 <__swsetup_r+0x1e>
 8000c9a:	4b24      	ldr	r3, [pc, #144]	; (8000d2c <__swsetup_r+0xd8>)
 8000c9c:	429c      	cmp	r4, r3
 8000c9e:	bf08      	it	eq
 8000ca0:	68ec      	ldreq	r4, [r5, #12]
 8000ca2:	e7e6      	b.n	8000c72 <__swsetup_r+0x1e>
 8000ca4:	0758      	lsls	r0, r3, #29
 8000ca6:	d512      	bpl.n	8000cce <__swsetup_r+0x7a>
 8000ca8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000caa:	b141      	cbz	r1, 8000cbe <__swsetup_r+0x6a>
 8000cac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000cb0:	4299      	cmp	r1, r3
 8000cb2:	d002      	beq.n	8000cba <__swsetup_r+0x66>
 8000cb4:	4630      	mov	r0, r6
 8000cb6:	f000 fa59 	bl	800116c <_free_r>
 8000cba:	2300      	movs	r3, #0
 8000cbc:	6363      	str	r3, [r4, #52]	; 0x34
 8000cbe:	89a3      	ldrh	r3, [r4, #12]
 8000cc0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000cc4:	81a3      	strh	r3, [r4, #12]
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	6063      	str	r3, [r4, #4]
 8000cca:	6923      	ldr	r3, [r4, #16]
 8000ccc:	6023      	str	r3, [r4, #0]
 8000cce:	89a3      	ldrh	r3, [r4, #12]
 8000cd0:	f043 0308 	orr.w	r3, r3, #8
 8000cd4:	81a3      	strh	r3, [r4, #12]
 8000cd6:	6923      	ldr	r3, [r4, #16]
 8000cd8:	b94b      	cbnz	r3, 8000cee <__swsetup_r+0x9a>
 8000cda:	89a3      	ldrh	r3, [r4, #12]
 8000cdc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000ce0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000ce4:	d003      	beq.n	8000cee <__swsetup_r+0x9a>
 8000ce6:	4621      	mov	r1, r4
 8000ce8:	4630      	mov	r0, r6
 8000cea:	f000 f9ff 	bl	80010ec <__smakebuf_r>
 8000cee:	89a0      	ldrh	r0, [r4, #12]
 8000cf0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000cf4:	f010 0301 	ands.w	r3, r0, #1
 8000cf8:	d00a      	beq.n	8000d10 <__swsetup_r+0xbc>
 8000cfa:	2300      	movs	r3, #0
 8000cfc:	60a3      	str	r3, [r4, #8]
 8000cfe:	6963      	ldr	r3, [r4, #20]
 8000d00:	425b      	negs	r3, r3
 8000d02:	61a3      	str	r3, [r4, #24]
 8000d04:	6923      	ldr	r3, [r4, #16]
 8000d06:	b943      	cbnz	r3, 8000d1a <__swsetup_r+0xc6>
 8000d08:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000d0c:	d1ba      	bne.n	8000c84 <__swsetup_r+0x30>
 8000d0e:	bd70      	pop	{r4, r5, r6, pc}
 8000d10:	0781      	lsls	r1, r0, #30
 8000d12:	bf58      	it	pl
 8000d14:	6963      	ldrpl	r3, [r4, #20]
 8000d16:	60a3      	str	r3, [r4, #8]
 8000d18:	e7f4      	b.n	8000d04 <__swsetup_r+0xb0>
 8000d1a:	2000      	movs	r0, #0
 8000d1c:	e7f7      	b.n	8000d0e <__swsetup_r+0xba>
 8000d1e:	bf00      	nop
 8000d20:	20000000 	.word	0x20000000
 8000d24:	080015f0 	.word	0x080015f0
 8000d28:	08001610 	.word	0x08001610
 8000d2c:	080015d0 	.word	0x080015d0

08000d30 <__sflush_r>:
 8000d30:	898a      	ldrh	r2, [r1, #12]
 8000d32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d36:	4605      	mov	r5, r0
 8000d38:	0710      	lsls	r0, r2, #28
 8000d3a:	460c      	mov	r4, r1
 8000d3c:	d458      	bmi.n	8000df0 <__sflush_r+0xc0>
 8000d3e:	684b      	ldr	r3, [r1, #4]
 8000d40:	2b00      	cmp	r3, #0
 8000d42:	dc05      	bgt.n	8000d50 <__sflush_r+0x20>
 8000d44:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000d46:	2b00      	cmp	r3, #0
 8000d48:	dc02      	bgt.n	8000d50 <__sflush_r+0x20>
 8000d4a:	2000      	movs	r0, #0
 8000d4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000d50:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000d52:	2e00      	cmp	r6, #0
 8000d54:	d0f9      	beq.n	8000d4a <__sflush_r+0x1a>
 8000d56:	2300      	movs	r3, #0
 8000d58:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000d5c:	682f      	ldr	r7, [r5, #0]
 8000d5e:	602b      	str	r3, [r5, #0]
 8000d60:	d032      	beq.n	8000dc8 <__sflush_r+0x98>
 8000d62:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000d64:	89a3      	ldrh	r3, [r4, #12]
 8000d66:	075a      	lsls	r2, r3, #29
 8000d68:	d505      	bpl.n	8000d76 <__sflush_r+0x46>
 8000d6a:	6863      	ldr	r3, [r4, #4]
 8000d6c:	1ac0      	subs	r0, r0, r3
 8000d6e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000d70:	b10b      	cbz	r3, 8000d76 <__sflush_r+0x46>
 8000d72:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000d74:	1ac0      	subs	r0, r0, r3
 8000d76:	2300      	movs	r3, #0
 8000d78:	4602      	mov	r2, r0
 8000d7a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000d7c:	6a21      	ldr	r1, [r4, #32]
 8000d7e:	4628      	mov	r0, r5
 8000d80:	47b0      	blx	r6
 8000d82:	1c43      	adds	r3, r0, #1
 8000d84:	89a3      	ldrh	r3, [r4, #12]
 8000d86:	d106      	bne.n	8000d96 <__sflush_r+0x66>
 8000d88:	6829      	ldr	r1, [r5, #0]
 8000d8a:	291d      	cmp	r1, #29
 8000d8c:	d82c      	bhi.n	8000de8 <__sflush_r+0xb8>
 8000d8e:	4a2a      	ldr	r2, [pc, #168]	; (8000e38 <__sflush_r+0x108>)
 8000d90:	40ca      	lsrs	r2, r1
 8000d92:	07d6      	lsls	r6, r2, #31
 8000d94:	d528      	bpl.n	8000de8 <__sflush_r+0xb8>
 8000d96:	2200      	movs	r2, #0
 8000d98:	6062      	str	r2, [r4, #4]
 8000d9a:	04d9      	lsls	r1, r3, #19
 8000d9c:	6922      	ldr	r2, [r4, #16]
 8000d9e:	6022      	str	r2, [r4, #0]
 8000da0:	d504      	bpl.n	8000dac <__sflush_r+0x7c>
 8000da2:	1c42      	adds	r2, r0, #1
 8000da4:	d101      	bne.n	8000daa <__sflush_r+0x7a>
 8000da6:	682b      	ldr	r3, [r5, #0]
 8000da8:	b903      	cbnz	r3, 8000dac <__sflush_r+0x7c>
 8000daa:	6560      	str	r0, [r4, #84]	; 0x54
 8000dac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000dae:	602f      	str	r7, [r5, #0]
 8000db0:	2900      	cmp	r1, #0
 8000db2:	d0ca      	beq.n	8000d4a <__sflush_r+0x1a>
 8000db4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000db8:	4299      	cmp	r1, r3
 8000dba:	d002      	beq.n	8000dc2 <__sflush_r+0x92>
 8000dbc:	4628      	mov	r0, r5
 8000dbe:	f000 f9d5 	bl	800116c <_free_r>
 8000dc2:	2000      	movs	r0, #0
 8000dc4:	6360      	str	r0, [r4, #52]	; 0x34
 8000dc6:	e7c1      	b.n	8000d4c <__sflush_r+0x1c>
 8000dc8:	6a21      	ldr	r1, [r4, #32]
 8000dca:	2301      	movs	r3, #1
 8000dcc:	4628      	mov	r0, r5
 8000dce:	47b0      	blx	r6
 8000dd0:	1c41      	adds	r1, r0, #1
 8000dd2:	d1c7      	bne.n	8000d64 <__sflush_r+0x34>
 8000dd4:	682b      	ldr	r3, [r5, #0]
 8000dd6:	2b00      	cmp	r3, #0
 8000dd8:	d0c4      	beq.n	8000d64 <__sflush_r+0x34>
 8000dda:	2b1d      	cmp	r3, #29
 8000ddc:	d001      	beq.n	8000de2 <__sflush_r+0xb2>
 8000dde:	2b16      	cmp	r3, #22
 8000de0:	d101      	bne.n	8000de6 <__sflush_r+0xb6>
 8000de2:	602f      	str	r7, [r5, #0]
 8000de4:	e7b1      	b.n	8000d4a <__sflush_r+0x1a>
 8000de6:	89a3      	ldrh	r3, [r4, #12]
 8000de8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000dec:	81a3      	strh	r3, [r4, #12]
 8000dee:	e7ad      	b.n	8000d4c <__sflush_r+0x1c>
 8000df0:	690f      	ldr	r7, [r1, #16]
 8000df2:	2f00      	cmp	r7, #0
 8000df4:	d0a9      	beq.n	8000d4a <__sflush_r+0x1a>
 8000df6:	0793      	lsls	r3, r2, #30
 8000df8:	680e      	ldr	r6, [r1, #0]
 8000dfa:	bf08      	it	eq
 8000dfc:	694b      	ldreq	r3, [r1, #20]
 8000dfe:	600f      	str	r7, [r1, #0]
 8000e00:	bf18      	it	ne
 8000e02:	2300      	movne	r3, #0
 8000e04:	eba6 0807 	sub.w	r8, r6, r7
 8000e08:	608b      	str	r3, [r1, #8]
 8000e0a:	f1b8 0f00 	cmp.w	r8, #0
 8000e0e:	dd9c      	ble.n	8000d4a <__sflush_r+0x1a>
 8000e10:	6a21      	ldr	r1, [r4, #32]
 8000e12:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000e14:	4643      	mov	r3, r8
 8000e16:	463a      	mov	r2, r7
 8000e18:	4628      	mov	r0, r5
 8000e1a:	47b0      	blx	r6
 8000e1c:	2800      	cmp	r0, #0
 8000e1e:	dc06      	bgt.n	8000e2e <__sflush_r+0xfe>
 8000e20:	89a3      	ldrh	r3, [r4, #12]
 8000e22:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e26:	81a3      	strh	r3, [r4, #12]
 8000e28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e2c:	e78e      	b.n	8000d4c <__sflush_r+0x1c>
 8000e2e:	4407      	add	r7, r0
 8000e30:	eba8 0800 	sub.w	r8, r8, r0
 8000e34:	e7e9      	b.n	8000e0a <__sflush_r+0xda>
 8000e36:	bf00      	nop
 8000e38:	20400001 	.word	0x20400001

08000e3c <_fflush_r>:
 8000e3c:	b538      	push	{r3, r4, r5, lr}
 8000e3e:	690b      	ldr	r3, [r1, #16]
 8000e40:	4605      	mov	r5, r0
 8000e42:	460c      	mov	r4, r1
 8000e44:	b913      	cbnz	r3, 8000e4c <_fflush_r+0x10>
 8000e46:	2500      	movs	r5, #0
 8000e48:	4628      	mov	r0, r5
 8000e4a:	bd38      	pop	{r3, r4, r5, pc}
 8000e4c:	b118      	cbz	r0, 8000e56 <_fflush_r+0x1a>
 8000e4e:	6983      	ldr	r3, [r0, #24]
 8000e50:	b90b      	cbnz	r3, 8000e56 <_fflush_r+0x1a>
 8000e52:	f000 f887 	bl	8000f64 <__sinit>
 8000e56:	4b14      	ldr	r3, [pc, #80]	; (8000ea8 <_fflush_r+0x6c>)
 8000e58:	429c      	cmp	r4, r3
 8000e5a:	d11b      	bne.n	8000e94 <_fflush_r+0x58>
 8000e5c:	686c      	ldr	r4, [r5, #4]
 8000e5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000e62:	2b00      	cmp	r3, #0
 8000e64:	d0ef      	beq.n	8000e46 <_fflush_r+0xa>
 8000e66:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000e68:	07d0      	lsls	r0, r2, #31
 8000e6a:	d404      	bmi.n	8000e76 <_fflush_r+0x3a>
 8000e6c:	0599      	lsls	r1, r3, #22
 8000e6e:	d402      	bmi.n	8000e76 <_fflush_r+0x3a>
 8000e70:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000e72:	f000 f915 	bl	80010a0 <__retarget_lock_acquire_recursive>
 8000e76:	4628      	mov	r0, r5
 8000e78:	4621      	mov	r1, r4
 8000e7a:	f7ff ff59 	bl	8000d30 <__sflush_r>
 8000e7e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000e80:	07da      	lsls	r2, r3, #31
 8000e82:	4605      	mov	r5, r0
 8000e84:	d4e0      	bmi.n	8000e48 <_fflush_r+0xc>
 8000e86:	89a3      	ldrh	r3, [r4, #12]
 8000e88:	059b      	lsls	r3, r3, #22
 8000e8a:	d4dd      	bmi.n	8000e48 <_fflush_r+0xc>
 8000e8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000e8e:	f000 f908 	bl	80010a2 <__retarget_lock_release_recursive>
 8000e92:	e7d9      	b.n	8000e48 <_fflush_r+0xc>
 8000e94:	4b05      	ldr	r3, [pc, #20]	; (8000eac <_fflush_r+0x70>)
 8000e96:	429c      	cmp	r4, r3
 8000e98:	d101      	bne.n	8000e9e <_fflush_r+0x62>
 8000e9a:	68ac      	ldr	r4, [r5, #8]
 8000e9c:	e7df      	b.n	8000e5e <_fflush_r+0x22>
 8000e9e:	4b04      	ldr	r3, [pc, #16]	; (8000eb0 <_fflush_r+0x74>)
 8000ea0:	429c      	cmp	r4, r3
 8000ea2:	bf08      	it	eq
 8000ea4:	68ec      	ldreq	r4, [r5, #12]
 8000ea6:	e7da      	b.n	8000e5e <_fflush_r+0x22>
 8000ea8:	080015f0 	.word	0x080015f0
 8000eac:	08001610 	.word	0x08001610
 8000eb0:	080015d0 	.word	0x080015d0

08000eb4 <std>:
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	b510      	push	{r4, lr}
 8000eb8:	4604      	mov	r4, r0
 8000eba:	e9c0 3300 	strd	r3, r3, [r0]
 8000ebe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ec2:	6083      	str	r3, [r0, #8]
 8000ec4:	8181      	strh	r1, [r0, #12]
 8000ec6:	6643      	str	r3, [r0, #100]	; 0x64
 8000ec8:	81c2      	strh	r2, [r0, #14]
 8000eca:	6183      	str	r3, [r0, #24]
 8000ecc:	4619      	mov	r1, r3
 8000ece:	2208      	movs	r2, #8
 8000ed0:	305c      	adds	r0, #92	; 0x5c
 8000ed2:	f7ff fb3f 	bl	8000554 <memset>
 8000ed6:	4b05      	ldr	r3, [pc, #20]	; (8000eec <std+0x38>)
 8000ed8:	6263      	str	r3, [r4, #36]	; 0x24
 8000eda:	4b05      	ldr	r3, [pc, #20]	; (8000ef0 <std+0x3c>)
 8000edc:	62a3      	str	r3, [r4, #40]	; 0x28
 8000ede:	4b05      	ldr	r3, [pc, #20]	; (8000ef4 <std+0x40>)
 8000ee0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ee2:	4b05      	ldr	r3, [pc, #20]	; (8000ef8 <std+0x44>)
 8000ee4:	6224      	str	r4, [r4, #32]
 8000ee6:	6323      	str	r3, [r4, #48]	; 0x30
 8000ee8:	bd10      	pop	{r4, pc}
 8000eea:	bf00      	nop
 8000eec:	08001371 	.word	0x08001371
 8000ef0:	08001393 	.word	0x08001393
 8000ef4:	080013cb 	.word	0x080013cb
 8000ef8:	080013ef 	.word	0x080013ef

08000efc <_cleanup_r>:
 8000efc:	4901      	ldr	r1, [pc, #4]	; (8000f04 <_cleanup_r+0x8>)
 8000efe:	f000 b8af 	b.w	8001060 <_fwalk_reent>
 8000f02:	bf00      	nop
 8000f04:	08000e3d 	.word	0x08000e3d

08000f08 <__sfmoreglue>:
 8000f08:	b570      	push	{r4, r5, r6, lr}
 8000f0a:	1e4a      	subs	r2, r1, #1
 8000f0c:	2568      	movs	r5, #104	; 0x68
 8000f0e:	4355      	muls	r5, r2
 8000f10:	460e      	mov	r6, r1
 8000f12:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000f16:	f000 f979 	bl	800120c <_malloc_r>
 8000f1a:	4604      	mov	r4, r0
 8000f1c:	b140      	cbz	r0, 8000f30 <__sfmoreglue+0x28>
 8000f1e:	2100      	movs	r1, #0
 8000f20:	e9c0 1600 	strd	r1, r6, [r0]
 8000f24:	300c      	adds	r0, #12
 8000f26:	60a0      	str	r0, [r4, #8]
 8000f28:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000f2c:	f7ff fb12 	bl	8000554 <memset>
 8000f30:	4620      	mov	r0, r4
 8000f32:	bd70      	pop	{r4, r5, r6, pc}

08000f34 <__sfp_lock_acquire>:
 8000f34:	4801      	ldr	r0, [pc, #4]	; (8000f3c <__sfp_lock_acquire+0x8>)
 8000f36:	f000 b8b3 	b.w	80010a0 <__retarget_lock_acquire_recursive>
 8000f3a:	bf00      	nop
 8000f3c:	20000094 	.word	0x20000094

08000f40 <__sfp_lock_release>:
 8000f40:	4801      	ldr	r0, [pc, #4]	; (8000f48 <__sfp_lock_release+0x8>)
 8000f42:	f000 b8ae 	b.w	80010a2 <__retarget_lock_release_recursive>
 8000f46:	bf00      	nop
 8000f48:	20000094 	.word	0x20000094

08000f4c <__sinit_lock_acquire>:
 8000f4c:	4801      	ldr	r0, [pc, #4]	; (8000f54 <__sinit_lock_acquire+0x8>)
 8000f4e:	f000 b8a7 	b.w	80010a0 <__retarget_lock_acquire_recursive>
 8000f52:	bf00      	nop
 8000f54:	2000008f 	.word	0x2000008f

08000f58 <__sinit_lock_release>:
 8000f58:	4801      	ldr	r0, [pc, #4]	; (8000f60 <__sinit_lock_release+0x8>)
 8000f5a:	f000 b8a2 	b.w	80010a2 <__retarget_lock_release_recursive>
 8000f5e:	bf00      	nop
 8000f60:	2000008f 	.word	0x2000008f

08000f64 <__sinit>:
 8000f64:	b510      	push	{r4, lr}
 8000f66:	4604      	mov	r4, r0
 8000f68:	f7ff fff0 	bl	8000f4c <__sinit_lock_acquire>
 8000f6c:	69a3      	ldr	r3, [r4, #24]
 8000f6e:	b11b      	cbz	r3, 8000f78 <__sinit+0x14>
 8000f70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000f74:	f7ff bff0 	b.w	8000f58 <__sinit_lock_release>
 8000f78:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000f7c:	6523      	str	r3, [r4, #80]	; 0x50
 8000f7e:	4b13      	ldr	r3, [pc, #76]	; (8000fcc <__sinit+0x68>)
 8000f80:	4a13      	ldr	r2, [pc, #76]	; (8000fd0 <__sinit+0x6c>)
 8000f82:	681b      	ldr	r3, [r3, #0]
 8000f84:	62a2      	str	r2, [r4, #40]	; 0x28
 8000f86:	42a3      	cmp	r3, r4
 8000f88:	bf04      	itt	eq
 8000f8a:	2301      	moveq	r3, #1
 8000f8c:	61a3      	streq	r3, [r4, #24]
 8000f8e:	4620      	mov	r0, r4
 8000f90:	f000 f820 	bl	8000fd4 <__sfp>
 8000f94:	6060      	str	r0, [r4, #4]
 8000f96:	4620      	mov	r0, r4
 8000f98:	f000 f81c 	bl	8000fd4 <__sfp>
 8000f9c:	60a0      	str	r0, [r4, #8]
 8000f9e:	4620      	mov	r0, r4
 8000fa0:	f000 f818 	bl	8000fd4 <__sfp>
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	60e0      	str	r0, [r4, #12]
 8000fa8:	2104      	movs	r1, #4
 8000faa:	6860      	ldr	r0, [r4, #4]
 8000fac:	f7ff ff82 	bl	8000eb4 <std>
 8000fb0:	68a0      	ldr	r0, [r4, #8]
 8000fb2:	2201      	movs	r2, #1
 8000fb4:	2109      	movs	r1, #9
 8000fb6:	f7ff ff7d 	bl	8000eb4 <std>
 8000fba:	68e0      	ldr	r0, [r4, #12]
 8000fbc:	2202      	movs	r2, #2
 8000fbe:	2112      	movs	r1, #18
 8000fc0:	f7ff ff78 	bl	8000eb4 <std>
 8000fc4:	2301      	movs	r3, #1
 8000fc6:	61a3      	str	r3, [r4, #24]
 8000fc8:	e7d2      	b.n	8000f70 <__sinit+0xc>
 8000fca:	bf00      	nop
 8000fcc:	08001598 	.word	0x08001598
 8000fd0:	08000efd 	.word	0x08000efd

08000fd4 <__sfp>:
 8000fd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fd6:	4607      	mov	r7, r0
 8000fd8:	f7ff ffac 	bl	8000f34 <__sfp_lock_acquire>
 8000fdc:	4b1e      	ldr	r3, [pc, #120]	; (8001058 <__sfp+0x84>)
 8000fde:	681e      	ldr	r6, [r3, #0]
 8000fe0:	69b3      	ldr	r3, [r6, #24]
 8000fe2:	b913      	cbnz	r3, 8000fea <__sfp+0x16>
 8000fe4:	4630      	mov	r0, r6
 8000fe6:	f7ff ffbd 	bl	8000f64 <__sinit>
 8000fea:	3648      	adds	r6, #72	; 0x48
 8000fec:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000ff0:	3b01      	subs	r3, #1
 8000ff2:	d503      	bpl.n	8000ffc <__sfp+0x28>
 8000ff4:	6833      	ldr	r3, [r6, #0]
 8000ff6:	b30b      	cbz	r3, 800103c <__sfp+0x68>
 8000ff8:	6836      	ldr	r6, [r6, #0]
 8000ffa:	e7f7      	b.n	8000fec <__sfp+0x18>
 8000ffc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001000:	b9d5      	cbnz	r5, 8001038 <__sfp+0x64>
 8001002:	4b16      	ldr	r3, [pc, #88]	; (800105c <__sfp+0x88>)
 8001004:	60e3      	str	r3, [r4, #12]
 8001006:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800100a:	6665      	str	r5, [r4, #100]	; 0x64
 800100c:	f000 f847 	bl	800109e <__retarget_lock_init_recursive>
 8001010:	f7ff ff96 	bl	8000f40 <__sfp_lock_release>
 8001014:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8001018:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800101c:	6025      	str	r5, [r4, #0]
 800101e:	61a5      	str	r5, [r4, #24]
 8001020:	2208      	movs	r2, #8
 8001022:	4629      	mov	r1, r5
 8001024:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001028:	f7ff fa94 	bl	8000554 <memset>
 800102c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001030:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8001034:	4620      	mov	r0, r4
 8001036:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001038:	3468      	adds	r4, #104	; 0x68
 800103a:	e7d9      	b.n	8000ff0 <__sfp+0x1c>
 800103c:	2104      	movs	r1, #4
 800103e:	4638      	mov	r0, r7
 8001040:	f7ff ff62 	bl	8000f08 <__sfmoreglue>
 8001044:	4604      	mov	r4, r0
 8001046:	6030      	str	r0, [r6, #0]
 8001048:	2800      	cmp	r0, #0
 800104a:	d1d5      	bne.n	8000ff8 <__sfp+0x24>
 800104c:	f7ff ff78 	bl	8000f40 <__sfp_lock_release>
 8001050:	230c      	movs	r3, #12
 8001052:	603b      	str	r3, [r7, #0]
 8001054:	e7ee      	b.n	8001034 <__sfp+0x60>
 8001056:	bf00      	nop
 8001058:	08001598 	.word	0x08001598
 800105c:	ffff0001 	.word	0xffff0001

08001060 <_fwalk_reent>:
 8001060:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001064:	4606      	mov	r6, r0
 8001066:	4688      	mov	r8, r1
 8001068:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800106c:	2700      	movs	r7, #0
 800106e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001072:	f1b9 0901 	subs.w	r9, r9, #1
 8001076:	d505      	bpl.n	8001084 <_fwalk_reent+0x24>
 8001078:	6824      	ldr	r4, [r4, #0]
 800107a:	2c00      	cmp	r4, #0
 800107c:	d1f7      	bne.n	800106e <_fwalk_reent+0xe>
 800107e:	4638      	mov	r0, r7
 8001080:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001084:	89ab      	ldrh	r3, [r5, #12]
 8001086:	2b01      	cmp	r3, #1
 8001088:	d907      	bls.n	800109a <_fwalk_reent+0x3a>
 800108a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800108e:	3301      	adds	r3, #1
 8001090:	d003      	beq.n	800109a <_fwalk_reent+0x3a>
 8001092:	4629      	mov	r1, r5
 8001094:	4630      	mov	r0, r6
 8001096:	47c0      	blx	r8
 8001098:	4307      	orrs	r7, r0
 800109a:	3568      	adds	r5, #104	; 0x68
 800109c:	e7e9      	b.n	8001072 <_fwalk_reent+0x12>

0800109e <__retarget_lock_init_recursive>:
 800109e:	4770      	bx	lr

080010a0 <__retarget_lock_acquire_recursive>:
 80010a0:	4770      	bx	lr

080010a2 <__retarget_lock_release_recursive>:
 80010a2:	4770      	bx	lr

080010a4 <__swhatbuf_r>:
 80010a4:	b570      	push	{r4, r5, r6, lr}
 80010a6:	460e      	mov	r6, r1
 80010a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010ac:	2900      	cmp	r1, #0
 80010ae:	b096      	sub	sp, #88	; 0x58
 80010b0:	4614      	mov	r4, r2
 80010b2:	461d      	mov	r5, r3
 80010b4:	da07      	bge.n	80010c6 <__swhatbuf_r+0x22>
 80010b6:	2300      	movs	r3, #0
 80010b8:	602b      	str	r3, [r5, #0]
 80010ba:	89b3      	ldrh	r3, [r6, #12]
 80010bc:	061a      	lsls	r2, r3, #24
 80010be:	d410      	bmi.n	80010e2 <__swhatbuf_r+0x3e>
 80010c0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80010c4:	e00e      	b.n	80010e4 <__swhatbuf_r+0x40>
 80010c6:	466a      	mov	r2, sp
 80010c8:	f000 f9b8 	bl	800143c <_fstat_r>
 80010cc:	2800      	cmp	r0, #0
 80010ce:	dbf2      	blt.n	80010b6 <__swhatbuf_r+0x12>
 80010d0:	9a01      	ldr	r2, [sp, #4]
 80010d2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80010d6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80010da:	425a      	negs	r2, r3
 80010dc:	415a      	adcs	r2, r3
 80010de:	602a      	str	r2, [r5, #0]
 80010e0:	e7ee      	b.n	80010c0 <__swhatbuf_r+0x1c>
 80010e2:	2340      	movs	r3, #64	; 0x40
 80010e4:	2000      	movs	r0, #0
 80010e6:	6023      	str	r3, [r4, #0]
 80010e8:	b016      	add	sp, #88	; 0x58
 80010ea:	bd70      	pop	{r4, r5, r6, pc}

080010ec <__smakebuf_r>:
 80010ec:	898b      	ldrh	r3, [r1, #12]
 80010ee:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80010f0:	079d      	lsls	r5, r3, #30
 80010f2:	4606      	mov	r6, r0
 80010f4:	460c      	mov	r4, r1
 80010f6:	d507      	bpl.n	8001108 <__smakebuf_r+0x1c>
 80010f8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80010fc:	6023      	str	r3, [r4, #0]
 80010fe:	6123      	str	r3, [r4, #16]
 8001100:	2301      	movs	r3, #1
 8001102:	6163      	str	r3, [r4, #20]
 8001104:	b002      	add	sp, #8
 8001106:	bd70      	pop	{r4, r5, r6, pc}
 8001108:	ab01      	add	r3, sp, #4
 800110a:	466a      	mov	r2, sp
 800110c:	f7ff ffca 	bl	80010a4 <__swhatbuf_r>
 8001110:	9900      	ldr	r1, [sp, #0]
 8001112:	4605      	mov	r5, r0
 8001114:	4630      	mov	r0, r6
 8001116:	f000 f879 	bl	800120c <_malloc_r>
 800111a:	b948      	cbnz	r0, 8001130 <__smakebuf_r+0x44>
 800111c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001120:	059a      	lsls	r2, r3, #22
 8001122:	d4ef      	bmi.n	8001104 <__smakebuf_r+0x18>
 8001124:	f023 0303 	bic.w	r3, r3, #3
 8001128:	f043 0302 	orr.w	r3, r3, #2
 800112c:	81a3      	strh	r3, [r4, #12]
 800112e:	e7e3      	b.n	80010f8 <__smakebuf_r+0xc>
 8001130:	4b0d      	ldr	r3, [pc, #52]	; (8001168 <__smakebuf_r+0x7c>)
 8001132:	62b3      	str	r3, [r6, #40]	; 0x28
 8001134:	89a3      	ldrh	r3, [r4, #12]
 8001136:	6020      	str	r0, [r4, #0]
 8001138:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800113c:	81a3      	strh	r3, [r4, #12]
 800113e:	9b00      	ldr	r3, [sp, #0]
 8001140:	6163      	str	r3, [r4, #20]
 8001142:	9b01      	ldr	r3, [sp, #4]
 8001144:	6120      	str	r0, [r4, #16]
 8001146:	b15b      	cbz	r3, 8001160 <__smakebuf_r+0x74>
 8001148:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800114c:	4630      	mov	r0, r6
 800114e:	f000 f987 	bl	8001460 <_isatty_r>
 8001152:	b128      	cbz	r0, 8001160 <__smakebuf_r+0x74>
 8001154:	89a3      	ldrh	r3, [r4, #12]
 8001156:	f023 0303 	bic.w	r3, r3, #3
 800115a:	f043 0301 	orr.w	r3, r3, #1
 800115e:	81a3      	strh	r3, [r4, #12]
 8001160:	89a0      	ldrh	r0, [r4, #12]
 8001162:	4305      	orrs	r5, r0
 8001164:	81a5      	strh	r5, [r4, #12]
 8001166:	e7cd      	b.n	8001104 <__smakebuf_r+0x18>
 8001168:	08000efd 	.word	0x08000efd

0800116c <_free_r>:
 800116c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800116e:	2900      	cmp	r1, #0
 8001170:	d048      	beq.n	8001204 <_free_r+0x98>
 8001172:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001176:	9001      	str	r0, [sp, #4]
 8001178:	2b00      	cmp	r3, #0
 800117a:	f1a1 0404 	sub.w	r4, r1, #4
 800117e:	bfb8      	it	lt
 8001180:	18e4      	addlt	r4, r4, r3
 8001182:	f000 f98f 	bl	80014a4 <__malloc_lock>
 8001186:	4a20      	ldr	r2, [pc, #128]	; (8001208 <_free_r+0x9c>)
 8001188:	9801      	ldr	r0, [sp, #4]
 800118a:	6813      	ldr	r3, [r2, #0]
 800118c:	4615      	mov	r5, r2
 800118e:	b933      	cbnz	r3, 800119e <_free_r+0x32>
 8001190:	6063      	str	r3, [r4, #4]
 8001192:	6014      	str	r4, [r2, #0]
 8001194:	b003      	add	sp, #12
 8001196:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800119a:	f000 b989 	b.w	80014b0 <__malloc_unlock>
 800119e:	42a3      	cmp	r3, r4
 80011a0:	d90b      	bls.n	80011ba <_free_r+0x4e>
 80011a2:	6821      	ldr	r1, [r4, #0]
 80011a4:	1862      	adds	r2, r4, r1
 80011a6:	4293      	cmp	r3, r2
 80011a8:	bf04      	itt	eq
 80011aa:	681a      	ldreq	r2, [r3, #0]
 80011ac:	685b      	ldreq	r3, [r3, #4]
 80011ae:	6063      	str	r3, [r4, #4]
 80011b0:	bf04      	itt	eq
 80011b2:	1852      	addeq	r2, r2, r1
 80011b4:	6022      	streq	r2, [r4, #0]
 80011b6:	602c      	str	r4, [r5, #0]
 80011b8:	e7ec      	b.n	8001194 <_free_r+0x28>
 80011ba:	461a      	mov	r2, r3
 80011bc:	685b      	ldr	r3, [r3, #4]
 80011be:	b10b      	cbz	r3, 80011c4 <_free_r+0x58>
 80011c0:	42a3      	cmp	r3, r4
 80011c2:	d9fa      	bls.n	80011ba <_free_r+0x4e>
 80011c4:	6811      	ldr	r1, [r2, #0]
 80011c6:	1855      	adds	r5, r2, r1
 80011c8:	42a5      	cmp	r5, r4
 80011ca:	d10b      	bne.n	80011e4 <_free_r+0x78>
 80011cc:	6824      	ldr	r4, [r4, #0]
 80011ce:	4421      	add	r1, r4
 80011d0:	1854      	adds	r4, r2, r1
 80011d2:	42a3      	cmp	r3, r4
 80011d4:	6011      	str	r1, [r2, #0]
 80011d6:	d1dd      	bne.n	8001194 <_free_r+0x28>
 80011d8:	681c      	ldr	r4, [r3, #0]
 80011da:	685b      	ldr	r3, [r3, #4]
 80011dc:	6053      	str	r3, [r2, #4]
 80011de:	4421      	add	r1, r4
 80011e0:	6011      	str	r1, [r2, #0]
 80011e2:	e7d7      	b.n	8001194 <_free_r+0x28>
 80011e4:	d902      	bls.n	80011ec <_free_r+0x80>
 80011e6:	230c      	movs	r3, #12
 80011e8:	6003      	str	r3, [r0, #0]
 80011ea:	e7d3      	b.n	8001194 <_free_r+0x28>
 80011ec:	6825      	ldr	r5, [r4, #0]
 80011ee:	1961      	adds	r1, r4, r5
 80011f0:	428b      	cmp	r3, r1
 80011f2:	bf04      	itt	eq
 80011f4:	6819      	ldreq	r1, [r3, #0]
 80011f6:	685b      	ldreq	r3, [r3, #4]
 80011f8:	6063      	str	r3, [r4, #4]
 80011fa:	bf04      	itt	eq
 80011fc:	1949      	addeq	r1, r1, r5
 80011fe:	6021      	streq	r1, [r4, #0]
 8001200:	6054      	str	r4, [r2, #4]
 8001202:	e7c7      	b.n	8001194 <_free_r+0x28>
 8001204:	b003      	add	sp, #12
 8001206:	bd30      	pop	{r4, r5, pc}
 8001208:	20000080 	.word	0x20000080

0800120c <_malloc_r>:
 800120c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800120e:	1ccd      	adds	r5, r1, #3
 8001210:	f025 0503 	bic.w	r5, r5, #3
 8001214:	3508      	adds	r5, #8
 8001216:	2d0c      	cmp	r5, #12
 8001218:	bf38      	it	cc
 800121a:	250c      	movcc	r5, #12
 800121c:	2d00      	cmp	r5, #0
 800121e:	4606      	mov	r6, r0
 8001220:	db01      	blt.n	8001226 <_malloc_r+0x1a>
 8001222:	42a9      	cmp	r1, r5
 8001224:	d903      	bls.n	800122e <_malloc_r+0x22>
 8001226:	230c      	movs	r3, #12
 8001228:	6033      	str	r3, [r6, #0]
 800122a:	2000      	movs	r0, #0
 800122c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800122e:	f000 f939 	bl	80014a4 <__malloc_lock>
 8001232:	4921      	ldr	r1, [pc, #132]	; (80012b8 <_malloc_r+0xac>)
 8001234:	680a      	ldr	r2, [r1, #0]
 8001236:	4614      	mov	r4, r2
 8001238:	b99c      	cbnz	r4, 8001262 <_malloc_r+0x56>
 800123a:	4f20      	ldr	r7, [pc, #128]	; (80012bc <_malloc_r+0xb0>)
 800123c:	683b      	ldr	r3, [r7, #0]
 800123e:	b923      	cbnz	r3, 800124a <_malloc_r+0x3e>
 8001240:	4621      	mov	r1, r4
 8001242:	4630      	mov	r0, r6
 8001244:	f000 f884 	bl	8001350 <_sbrk_r>
 8001248:	6038      	str	r0, [r7, #0]
 800124a:	4629      	mov	r1, r5
 800124c:	4630      	mov	r0, r6
 800124e:	f000 f87f 	bl	8001350 <_sbrk_r>
 8001252:	1c43      	adds	r3, r0, #1
 8001254:	d123      	bne.n	800129e <_malloc_r+0x92>
 8001256:	230c      	movs	r3, #12
 8001258:	6033      	str	r3, [r6, #0]
 800125a:	4630      	mov	r0, r6
 800125c:	f000 f928 	bl	80014b0 <__malloc_unlock>
 8001260:	e7e3      	b.n	800122a <_malloc_r+0x1e>
 8001262:	6823      	ldr	r3, [r4, #0]
 8001264:	1b5b      	subs	r3, r3, r5
 8001266:	d417      	bmi.n	8001298 <_malloc_r+0x8c>
 8001268:	2b0b      	cmp	r3, #11
 800126a:	d903      	bls.n	8001274 <_malloc_r+0x68>
 800126c:	6023      	str	r3, [r4, #0]
 800126e:	441c      	add	r4, r3
 8001270:	6025      	str	r5, [r4, #0]
 8001272:	e004      	b.n	800127e <_malloc_r+0x72>
 8001274:	6863      	ldr	r3, [r4, #4]
 8001276:	42a2      	cmp	r2, r4
 8001278:	bf0c      	ite	eq
 800127a:	600b      	streq	r3, [r1, #0]
 800127c:	6053      	strne	r3, [r2, #4]
 800127e:	4630      	mov	r0, r6
 8001280:	f000 f916 	bl	80014b0 <__malloc_unlock>
 8001284:	f104 000b 	add.w	r0, r4, #11
 8001288:	1d23      	adds	r3, r4, #4
 800128a:	f020 0007 	bic.w	r0, r0, #7
 800128e:	1ac2      	subs	r2, r0, r3
 8001290:	d0cc      	beq.n	800122c <_malloc_r+0x20>
 8001292:	1a1b      	subs	r3, r3, r0
 8001294:	50a3      	str	r3, [r4, r2]
 8001296:	e7c9      	b.n	800122c <_malloc_r+0x20>
 8001298:	4622      	mov	r2, r4
 800129a:	6864      	ldr	r4, [r4, #4]
 800129c:	e7cc      	b.n	8001238 <_malloc_r+0x2c>
 800129e:	1cc4      	adds	r4, r0, #3
 80012a0:	f024 0403 	bic.w	r4, r4, #3
 80012a4:	42a0      	cmp	r0, r4
 80012a6:	d0e3      	beq.n	8001270 <_malloc_r+0x64>
 80012a8:	1a21      	subs	r1, r4, r0
 80012aa:	4630      	mov	r0, r6
 80012ac:	f000 f850 	bl	8001350 <_sbrk_r>
 80012b0:	3001      	adds	r0, #1
 80012b2:	d1dd      	bne.n	8001270 <_malloc_r+0x64>
 80012b4:	e7cf      	b.n	8001256 <_malloc_r+0x4a>
 80012b6:	bf00      	nop
 80012b8:	20000080 	.word	0x20000080
 80012bc:	20000084 	.word	0x20000084

080012c0 <_putc_r>:
 80012c0:	b570      	push	{r4, r5, r6, lr}
 80012c2:	460d      	mov	r5, r1
 80012c4:	4614      	mov	r4, r2
 80012c6:	4606      	mov	r6, r0
 80012c8:	b118      	cbz	r0, 80012d2 <_putc_r+0x12>
 80012ca:	6983      	ldr	r3, [r0, #24]
 80012cc:	b90b      	cbnz	r3, 80012d2 <_putc_r+0x12>
 80012ce:	f7ff fe49 	bl	8000f64 <__sinit>
 80012d2:	4b1c      	ldr	r3, [pc, #112]	; (8001344 <_putc_r+0x84>)
 80012d4:	429c      	cmp	r4, r3
 80012d6:	d124      	bne.n	8001322 <_putc_r+0x62>
 80012d8:	6874      	ldr	r4, [r6, #4]
 80012da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012dc:	07d8      	lsls	r0, r3, #31
 80012de:	d405      	bmi.n	80012ec <_putc_r+0x2c>
 80012e0:	89a3      	ldrh	r3, [r4, #12]
 80012e2:	0599      	lsls	r1, r3, #22
 80012e4:	d402      	bmi.n	80012ec <_putc_r+0x2c>
 80012e6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012e8:	f7ff feda 	bl	80010a0 <__retarget_lock_acquire_recursive>
 80012ec:	68a3      	ldr	r3, [r4, #8]
 80012ee:	3b01      	subs	r3, #1
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	60a3      	str	r3, [r4, #8]
 80012f4:	da05      	bge.n	8001302 <_putc_r+0x42>
 80012f6:	69a2      	ldr	r2, [r4, #24]
 80012f8:	4293      	cmp	r3, r2
 80012fa:	db1c      	blt.n	8001336 <_putc_r+0x76>
 80012fc:	b2eb      	uxtb	r3, r5
 80012fe:	2b0a      	cmp	r3, #10
 8001300:	d019      	beq.n	8001336 <_putc_r+0x76>
 8001302:	6823      	ldr	r3, [r4, #0]
 8001304:	1c5a      	adds	r2, r3, #1
 8001306:	6022      	str	r2, [r4, #0]
 8001308:	701d      	strb	r5, [r3, #0]
 800130a:	b2ed      	uxtb	r5, r5
 800130c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800130e:	07da      	lsls	r2, r3, #31
 8001310:	d405      	bmi.n	800131e <_putc_r+0x5e>
 8001312:	89a3      	ldrh	r3, [r4, #12]
 8001314:	059b      	lsls	r3, r3, #22
 8001316:	d402      	bmi.n	800131e <_putc_r+0x5e>
 8001318:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800131a:	f7ff fec2 	bl	80010a2 <__retarget_lock_release_recursive>
 800131e:	4628      	mov	r0, r5
 8001320:	bd70      	pop	{r4, r5, r6, pc}
 8001322:	4b09      	ldr	r3, [pc, #36]	; (8001348 <_putc_r+0x88>)
 8001324:	429c      	cmp	r4, r3
 8001326:	d101      	bne.n	800132c <_putc_r+0x6c>
 8001328:	68b4      	ldr	r4, [r6, #8]
 800132a:	e7d6      	b.n	80012da <_putc_r+0x1a>
 800132c:	4b07      	ldr	r3, [pc, #28]	; (800134c <_putc_r+0x8c>)
 800132e:	429c      	cmp	r4, r3
 8001330:	bf08      	it	eq
 8001332:	68f4      	ldreq	r4, [r6, #12]
 8001334:	e7d1      	b.n	80012da <_putc_r+0x1a>
 8001336:	4629      	mov	r1, r5
 8001338:	4622      	mov	r2, r4
 800133a:	4630      	mov	r0, r6
 800133c:	f7ff fc38 	bl	8000bb0 <__swbuf_r>
 8001340:	4605      	mov	r5, r0
 8001342:	e7e3      	b.n	800130c <_putc_r+0x4c>
 8001344:	080015f0 	.word	0x080015f0
 8001348:	08001610 	.word	0x08001610
 800134c:	080015d0 	.word	0x080015d0

08001350 <_sbrk_r>:
 8001350:	b538      	push	{r3, r4, r5, lr}
 8001352:	4d06      	ldr	r5, [pc, #24]	; (800136c <_sbrk_r+0x1c>)
 8001354:	2300      	movs	r3, #0
 8001356:	4604      	mov	r4, r0
 8001358:	4608      	mov	r0, r1
 800135a:	602b      	str	r3, [r5, #0]
 800135c:	f000 f8e8 	bl	8001530 <_sbrk>
 8001360:	1c43      	adds	r3, r0, #1
 8001362:	d102      	bne.n	800136a <_sbrk_r+0x1a>
 8001364:	682b      	ldr	r3, [r5, #0]
 8001366:	b103      	cbz	r3, 800136a <_sbrk_r+0x1a>
 8001368:	6023      	str	r3, [r4, #0]
 800136a:	bd38      	pop	{r3, r4, r5, pc}
 800136c:	20000098 	.word	0x20000098

08001370 <__sread>:
 8001370:	b510      	push	{r4, lr}
 8001372:	460c      	mov	r4, r1
 8001374:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001378:	f000 f8a0 	bl	80014bc <_read_r>
 800137c:	2800      	cmp	r0, #0
 800137e:	bfab      	itete	ge
 8001380:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001382:	89a3      	ldrhlt	r3, [r4, #12]
 8001384:	181b      	addge	r3, r3, r0
 8001386:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800138a:	bfac      	ite	ge
 800138c:	6563      	strge	r3, [r4, #84]	; 0x54
 800138e:	81a3      	strhlt	r3, [r4, #12]
 8001390:	bd10      	pop	{r4, pc}

08001392 <__swrite>:
 8001392:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001396:	461f      	mov	r7, r3
 8001398:	898b      	ldrh	r3, [r1, #12]
 800139a:	05db      	lsls	r3, r3, #23
 800139c:	4605      	mov	r5, r0
 800139e:	460c      	mov	r4, r1
 80013a0:	4616      	mov	r6, r2
 80013a2:	d505      	bpl.n	80013b0 <__swrite+0x1e>
 80013a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013a8:	2302      	movs	r3, #2
 80013aa:	2200      	movs	r2, #0
 80013ac:	f000 f868 	bl	8001480 <_lseek_r>
 80013b0:	89a3      	ldrh	r3, [r4, #12]
 80013b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013b6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013ba:	81a3      	strh	r3, [r4, #12]
 80013bc:	4632      	mov	r2, r6
 80013be:	463b      	mov	r3, r7
 80013c0:	4628      	mov	r0, r5
 80013c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013c6:	f000 b817 	b.w	80013f8 <_write_r>

080013ca <__sseek>:
 80013ca:	b510      	push	{r4, lr}
 80013cc:	460c      	mov	r4, r1
 80013ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013d2:	f000 f855 	bl	8001480 <_lseek_r>
 80013d6:	1c43      	adds	r3, r0, #1
 80013d8:	89a3      	ldrh	r3, [r4, #12]
 80013da:	bf15      	itete	ne
 80013dc:	6560      	strne	r0, [r4, #84]	; 0x54
 80013de:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013e2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013e6:	81a3      	strheq	r3, [r4, #12]
 80013e8:	bf18      	it	ne
 80013ea:	81a3      	strhne	r3, [r4, #12]
 80013ec:	bd10      	pop	{r4, pc}

080013ee <__sclose>:
 80013ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013f2:	f000 b813 	b.w	800141c <_close_r>
	...

080013f8 <_write_r>:
 80013f8:	b538      	push	{r3, r4, r5, lr}
 80013fa:	4d07      	ldr	r5, [pc, #28]	; (8001418 <_write_r+0x20>)
 80013fc:	4604      	mov	r4, r0
 80013fe:	4608      	mov	r0, r1
 8001400:	4611      	mov	r1, r2
 8001402:	2200      	movs	r2, #0
 8001404:	602a      	str	r2, [r5, #0]
 8001406:	461a      	mov	r2, r3
 8001408:	f7fe ff69 	bl	80002de <_write>
 800140c:	1c43      	adds	r3, r0, #1
 800140e:	d102      	bne.n	8001416 <_write_r+0x1e>
 8001410:	682b      	ldr	r3, [r5, #0]
 8001412:	b103      	cbz	r3, 8001416 <_write_r+0x1e>
 8001414:	6023      	str	r3, [r4, #0]
 8001416:	bd38      	pop	{r3, r4, r5, pc}
 8001418:	20000098 	.word	0x20000098

0800141c <_close_r>:
 800141c:	b538      	push	{r3, r4, r5, lr}
 800141e:	4d06      	ldr	r5, [pc, #24]	; (8001438 <_close_r+0x1c>)
 8001420:	2300      	movs	r3, #0
 8001422:	4604      	mov	r4, r0
 8001424:	4608      	mov	r0, r1
 8001426:	602b      	str	r3, [r5, #0]
 8001428:	f000 f85a 	bl	80014e0 <_close>
 800142c:	1c43      	adds	r3, r0, #1
 800142e:	d102      	bne.n	8001436 <_close_r+0x1a>
 8001430:	682b      	ldr	r3, [r5, #0]
 8001432:	b103      	cbz	r3, 8001436 <_close_r+0x1a>
 8001434:	6023      	str	r3, [r4, #0]
 8001436:	bd38      	pop	{r3, r4, r5, pc}
 8001438:	20000098 	.word	0x20000098

0800143c <_fstat_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4d07      	ldr	r5, [pc, #28]	; (800145c <_fstat_r+0x20>)
 8001440:	2300      	movs	r3, #0
 8001442:	4604      	mov	r4, r0
 8001444:	4608      	mov	r0, r1
 8001446:	4611      	mov	r1, r2
 8001448:	602b      	str	r3, [r5, #0]
 800144a:	f000 f851 	bl	80014f0 <_fstat>
 800144e:	1c43      	adds	r3, r0, #1
 8001450:	d102      	bne.n	8001458 <_fstat_r+0x1c>
 8001452:	682b      	ldr	r3, [r5, #0]
 8001454:	b103      	cbz	r3, 8001458 <_fstat_r+0x1c>
 8001456:	6023      	str	r3, [r4, #0]
 8001458:	bd38      	pop	{r3, r4, r5, pc}
 800145a:	bf00      	nop
 800145c:	20000098 	.word	0x20000098

08001460 <_isatty_r>:
 8001460:	b538      	push	{r3, r4, r5, lr}
 8001462:	4d06      	ldr	r5, [pc, #24]	; (800147c <_isatty_r+0x1c>)
 8001464:	2300      	movs	r3, #0
 8001466:	4604      	mov	r4, r0
 8001468:	4608      	mov	r0, r1
 800146a:	602b      	str	r3, [r5, #0]
 800146c:	f000 f848 	bl	8001500 <_isatty>
 8001470:	1c43      	adds	r3, r0, #1
 8001472:	d102      	bne.n	800147a <_isatty_r+0x1a>
 8001474:	682b      	ldr	r3, [r5, #0]
 8001476:	b103      	cbz	r3, 800147a <_isatty_r+0x1a>
 8001478:	6023      	str	r3, [r4, #0]
 800147a:	bd38      	pop	{r3, r4, r5, pc}
 800147c:	20000098 	.word	0x20000098

08001480 <_lseek_r>:
 8001480:	b538      	push	{r3, r4, r5, lr}
 8001482:	4d07      	ldr	r5, [pc, #28]	; (80014a0 <_lseek_r+0x20>)
 8001484:	4604      	mov	r4, r0
 8001486:	4608      	mov	r0, r1
 8001488:	4611      	mov	r1, r2
 800148a:	2200      	movs	r2, #0
 800148c:	602a      	str	r2, [r5, #0]
 800148e:	461a      	mov	r2, r3
 8001490:	f000 f83e 	bl	8001510 <_lseek>
 8001494:	1c43      	adds	r3, r0, #1
 8001496:	d102      	bne.n	800149e <_lseek_r+0x1e>
 8001498:	682b      	ldr	r3, [r5, #0]
 800149a:	b103      	cbz	r3, 800149e <_lseek_r+0x1e>
 800149c:	6023      	str	r3, [r4, #0]
 800149e:	bd38      	pop	{r3, r4, r5, pc}
 80014a0:	20000098 	.word	0x20000098

080014a4 <__malloc_lock>:
 80014a4:	4801      	ldr	r0, [pc, #4]	; (80014ac <__malloc_lock+0x8>)
 80014a6:	f7ff bdfb 	b.w	80010a0 <__retarget_lock_acquire_recursive>
 80014aa:	bf00      	nop
 80014ac:	20000090 	.word	0x20000090

080014b0 <__malloc_unlock>:
 80014b0:	4801      	ldr	r0, [pc, #4]	; (80014b8 <__malloc_unlock+0x8>)
 80014b2:	f7ff bdf6 	b.w	80010a2 <__retarget_lock_release_recursive>
 80014b6:	bf00      	nop
 80014b8:	20000090 	.word	0x20000090

080014bc <_read_r>:
 80014bc:	b538      	push	{r3, r4, r5, lr}
 80014be:	4d07      	ldr	r5, [pc, #28]	; (80014dc <_read_r+0x20>)
 80014c0:	4604      	mov	r4, r0
 80014c2:	4608      	mov	r0, r1
 80014c4:	4611      	mov	r1, r2
 80014c6:	2200      	movs	r2, #0
 80014c8:	602a      	str	r2, [r5, #0]
 80014ca:	461a      	mov	r2, r3
 80014cc:	f000 f828 	bl	8001520 <_read>
 80014d0:	1c43      	adds	r3, r0, #1
 80014d2:	d102      	bne.n	80014da <_read_r+0x1e>
 80014d4:	682b      	ldr	r3, [r5, #0]
 80014d6:	b103      	cbz	r3, 80014da <_read_r+0x1e>
 80014d8:	6023      	str	r3, [r4, #0]
 80014da:	bd38      	pop	{r3, r4, r5, pc}
 80014dc:	20000098 	.word	0x20000098

080014e0 <_close>:
 80014e0:	4b02      	ldr	r3, [pc, #8]	; (80014ec <_close+0xc>)
 80014e2:	2258      	movs	r2, #88	; 0x58
 80014e4:	601a      	str	r2, [r3, #0]
 80014e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80014ea:	4770      	bx	lr
 80014ec:	20000098 	.word	0x20000098

080014f0 <_fstat>:
 80014f0:	4b02      	ldr	r3, [pc, #8]	; (80014fc <_fstat+0xc>)
 80014f2:	2258      	movs	r2, #88	; 0x58
 80014f4:	601a      	str	r2, [r3, #0]
 80014f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80014fa:	4770      	bx	lr
 80014fc:	20000098 	.word	0x20000098

08001500 <_isatty>:
 8001500:	4b02      	ldr	r3, [pc, #8]	; (800150c <_isatty+0xc>)
 8001502:	2258      	movs	r2, #88	; 0x58
 8001504:	601a      	str	r2, [r3, #0]
 8001506:	2000      	movs	r0, #0
 8001508:	4770      	bx	lr
 800150a:	bf00      	nop
 800150c:	20000098 	.word	0x20000098

08001510 <_lseek>:
 8001510:	4b02      	ldr	r3, [pc, #8]	; (800151c <_lseek+0xc>)
 8001512:	2258      	movs	r2, #88	; 0x58
 8001514:	601a      	str	r2, [r3, #0]
 8001516:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800151a:	4770      	bx	lr
 800151c:	20000098 	.word	0x20000098

08001520 <_read>:
 8001520:	4b02      	ldr	r3, [pc, #8]	; (800152c <_read+0xc>)
 8001522:	2258      	movs	r2, #88	; 0x58
 8001524:	601a      	str	r2, [r3, #0]
 8001526:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800152a:	4770      	bx	lr
 800152c:	20000098 	.word	0x20000098

08001530 <_sbrk>:
 8001530:	4b04      	ldr	r3, [pc, #16]	; (8001544 <_sbrk+0x14>)
 8001532:	6819      	ldr	r1, [r3, #0]
 8001534:	4602      	mov	r2, r0
 8001536:	b909      	cbnz	r1, 800153c <_sbrk+0xc>
 8001538:	4903      	ldr	r1, [pc, #12]	; (8001548 <_sbrk+0x18>)
 800153a:	6019      	str	r1, [r3, #0]
 800153c:	6818      	ldr	r0, [r3, #0]
 800153e:	4402      	add	r2, r0
 8001540:	601a      	str	r2, [r3, #0]
 8001542:	4770      	bx	lr
 8001544:	20000088 	.word	0x20000088
 8001548:	200000a0 	.word	0x200000a0

0800154c <_init>:
 800154c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800154e:	bf00      	nop
 8001550:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001552:	bc08      	pop	{r3}
 8001554:	469e      	mov	lr, r3
 8001556:	4770      	bx	lr

08001558 <_fini>:
 8001558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800155a:	bf00      	nop
 800155c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800155e:	bc08      	pop	{r3}
 8001560:	469e      	mov	lr, r3
 8001562:	4770      	bx	lr
