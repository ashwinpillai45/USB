
proj001.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000014ec  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ec  0800169c  0800169c  0001169c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001788  08001788  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001788  08001788  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001788  08001788  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001788  08001788  00011788  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800178c  0800178c  0001178c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001790  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000038  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000009c  2000009c  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002c92  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000007c6  00000000  00000000  00022d26  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000120  00000000  00000000  000234f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000c8  00000000  00000000  00023610  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001bbc9  00000000  00000000  000236d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001faa  00000000  00000000  0003f2a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00097682  00000000  00000000  0004124b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000d88cd  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000be0  00000000  00000000  000d8920  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .stab         00000084  00000000  00000000  000d9500  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .stabstr      00000117  00000000  00000000  000d9584  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001684 	.word	0x08001684

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	08001684 	.word	0x08001684

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr

080002de <_write>:
 */

#include "Helper/logger.h"

int _write(int file, char *ptr, int len)
{
 80002de:	b580      	push	{r7, lr}
 80002e0:	b086      	sub	sp, #24
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f7ff ffc7 	bl	8000290 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x16>

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
	...

0800031c <_log>:



static void _log(char const * const logType, char const * const format, va_list args)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	b084      	sub	sp, #16
 8000320:	af00      	add	r7, sp, #0
 8000322:	60f8      	str	r0, [r7, #12]
 8000324:	60b9      	str	r1, [r7, #8]
 8000326:	607a      	str	r2, [r7, #4]
	printf("[%s] : ",logType);
 8000328:	68f9      	ldr	r1, [r7, #12]
 800032a:	4809      	ldr	r0, [pc, #36]	; (8000350 <_log+0x34>)
 800032c:	f000 fcae 	bl	8000c8c <iprintf>
	vfprintf(stdout,format,args);
 8000330:	4b08      	ldr	r3, [pc, #32]	; (8000354 <_log+0x38>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	689b      	ldr	r3, [r3, #8]
 8000336:	687a      	ldr	r2, [r7, #4]
 8000338:	68b9      	ldr	r1, [r7, #8]
 800033a:	4618      	mov	r0, r3
 800033c:	f000 fb08 	bl	8000950 <vfiprintf>
	printf("\n");
 8000340:	200a      	movs	r0, #10
 8000342:	f000 fcbb 	bl	8000cbc <putchar>
}
 8000346:	bf00      	nop
 8000348:	3710      	adds	r7, #16
 800034a:	46bd      	mov	sp, r7
 800034c:	bd80      	pop	{r7, pc}
 800034e:	bf00      	nop
 8000350:	0800169c 	.word	0x0800169c
 8000354:	20000000 	.word	0x20000000

08000358 <logInfo>:
	_log("ERROR",format,args);
	va_end(args);
}

void logInfo(char const * const format, ...)
{
 8000358:	b40f      	push	{r0, r1, r2, r3}
 800035a:	b580      	push	{r7, lr}
 800035c:	b082      	sub	sp, #8
 800035e:	af00      	add	r7, sp, #0
	va_list args;
		va_start(args,format);
 8000360:	f107 0314 	add.w	r3, r7, #20
 8000364:	607b      	str	r3, [r7, #4]
		_log("INFO",format,args);
 8000366:	687a      	ldr	r2, [r7, #4]
 8000368:	6939      	ldr	r1, [r7, #16]
 800036a:	4805      	ldr	r0, [pc, #20]	; (8000380 <logInfo+0x28>)
 800036c:	f7ff ffd6 	bl	800031c <_log>
		va_end(args);
}
 8000370:	bf00      	nop
 8000372:	3708      	adds	r7, #8
 8000374:	46bd      	mov	sp, r7
 8000376:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800037a:	b004      	add	sp, #16
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	080016ac 	.word	0x080016ac

08000384 <main>:
#include "Helper/logger.h"
#include "usbFramework.h"


int main(void)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	af00      	add	r7, sp, #0
	logInfo("Program Entry Point");
 8000388:	4804      	ldr	r0, [pc, #16]	; (800039c <main+0x18>)
 800038a:	f7ff ffe5 	bl	8000358 <logInfo>
    usb_init();
 800038e:	f000 f923 	bl	80005d8 <usb_init>
    logInfo("Program finished. Entering loop");
 8000392:	4803      	ldr	r0, [pc, #12]	; (80003a0 <main+0x1c>)
 8000394:	f7ff ffe0 	bl	8000358 <logInfo>
    /* Loop forever */
	for(;;);
 8000398:	e7fe      	b.n	8000398 <main+0x14>
 800039a:	bf00      	nop
 800039c:	080016bc 	.word	0x080016bc
 80003a0:	080016d0 	.word	0x080016d0

080003a4 <clock_config>:
 *                the below mentioned values. The idea is to generate 48MHz of clock
 *                for comms.
 *                PLLM = 4 PLLN = 72 PLLP = 2 PLLQ = 3 AHBP = 1 APB1 = 2 APB2 = 1
 *
 */
static void clock_config(void) {
 80003a4:	b480      	push	{r7}
 80003a6:	af00      	add	r7, sp, #0
	//Configuring the flash latency for HCLK = 72MHz
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY,
 80003a8:	4b26      	ldr	r3, [pc, #152]	; (8000444 <clock_config+0xa0>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	f023 030f 	bic.w	r3, r3, #15
 80003b0:	4a24      	ldr	r2, [pc, #144]	; (8000444 <clock_config+0xa0>)
 80003b2:	f043 0302 	orr.w	r3, r3, #2
 80003b6:	6013      	str	r3, [r2, #0]
			_VAL2FLD(FLASH_ACR_LATENCY,FLASH_ACR_LATENCY_2WS));
	//Enabling HSE
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 80003b8:	4b23      	ldr	r3, [pc, #140]	; (8000448 <clock_config+0xa4>)
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	4a22      	ldr	r2, [pc, #136]	; (8000448 <clock_config+0xa4>)
 80003be:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80003c2:	6013      	str	r3, [r2, #0]
	//Wait till HSE is stable
	while(!(READ_BIT(RCC->CR,RCC_CR_HSERDY)));
 80003c4:	bf00      	nop
 80003c6:	4b20      	ldr	r3, [pc, #128]	; (8000448 <clock_config+0xa4>)
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d0f9      	beq.n	80003c6 <clock_config+0x22>
	//Configuring PLL
	MODIFY_REG(RCC->PLLCFGR,
 80003d2:	4b1d      	ldr	r3, [pc, #116]	; (8000448 <clock_config+0xa4>)
 80003d4:	685b      	ldr	r3, [r3, #4]
 80003d6:	4a1d      	ldr	r2, [pc, #116]	; (800044c <clock_config+0xa8>)
 80003d8:	401a      	ands	r2, r3
 80003da:	491b      	ldr	r1, [pc, #108]	; (8000448 <clock_config+0xa4>)
 80003dc:	4b1c      	ldr	r3, [pc, #112]	; (8000450 <clock_config+0xac>)
 80003de:	4313      	orrs	r3, r2
 80003e0:	604b      	str	r3, [r1, #4]
			RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLP | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLQ,
			_VAL2FLD(RCC_PLLCFGR_PLLM,4) | _VAL2FLD(RCC_PLLCFGR_PLLN,72) | _VAL2FLD(RCC_PLLCFGR_PLLP,0) | RCC_PLLCFGR_PLLSRC_HSE | RCC_PLLCFGR_PLLQ_3);

	//Activate PLL and wait till it is generated.
	SET_BIT(RCC->CR,RCC_CR_PLLON);
 80003e2:	4b19      	ldr	r3, [pc, #100]	; (8000448 <clock_config+0xa4>)
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	4a18      	ldr	r2, [pc, #96]	; (8000448 <clock_config+0xa4>)
 80003e8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003ec:	6013      	str	r3, [r2, #0]
	while(!(READ_BIT(RCC->CR,RCC_CR_PLLRDY)));
 80003ee:	bf00      	nop
 80003f0:	4b15      	ldr	r3, [pc, #84]	; (8000448 <clock_config+0xa4>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80003f8:	2b00      	cmp	r3, #0
 80003fa:	d0f9      	beq.n	80003f0 <clock_config+0x4c>
	//Configuring BUS peripheral clocks
	MODIFY_REG(RCC->CFGR,
 80003fc:	4b12      	ldr	r3, [pc, #72]	; (8000448 <clock_config+0xa4>)
 80003fe:	689b      	ldr	r3, [r3, #8]
 8000400:	f423 437c 	bic.w	r3, r3, #64512	; 0xfc00
 8000404:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000408:	4a0f      	ldr	r2, [pc, #60]	; (8000448 <clock_config+0xa4>)
 800040a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800040e:	6093      	str	r3, [r2, #8]
				RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2,
				RCC_CFGR_HPRE_DIV1 | RCC_CFGR_PPRE1_DIV2 | RCC_CFGR_PPRE2_DIV1);

	//Changing Sysclock to pll
	MODIFY_REG(RCC->CFGR,
 8000410:	4b0d      	ldr	r3, [pc, #52]	; (8000448 <clock_config+0xa4>)
 8000412:	689b      	ldr	r3, [r3, #8]
 8000414:	f023 0303 	bic.w	r3, r3, #3
 8000418:	4a0b      	ldr	r2, [pc, #44]	; (8000448 <clock_config+0xa4>)
 800041a:	f043 0302 	orr.w	r3, r3, #2
 800041e:	6093      	str	r3, [r2, #8]
					(RCC_CFGR_SW),
					RCC_CFGR_SW_PLL);

	//Wait till PLL is selected as clock source for sysclock
		while(!(READ_BIT(RCC->CFGR,RCC_CFGR_SWS_PLL)));
 8000420:	bf00      	nop
 8000422:	4b09      	ldr	r3, [pc, #36]	; (8000448 <clock_config+0xa4>)
 8000424:	689b      	ldr	r3, [r3, #8]
 8000426:	f003 0308 	and.w	r3, r3, #8
 800042a:	2b00      	cmp	r3, #0
 800042c:	d0f9      	beq.n	8000422 <clock_config+0x7e>
	//HSI OFF
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 800042e:	4b06      	ldr	r3, [pc, #24]	; (8000448 <clock_config+0xa4>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	4a05      	ldr	r2, [pc, #20]	; (8000448 <clock_config+0xa4>)
 8000434:	f023 0301 	bic.w	r3, r3, #1
 8000438:	6013      	str	r3, [r2, #0]
}
 800043a:	bf00      	nop
 800043c:	46bd      	mov	sp, r7
 800043e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000442:	4770      	bx	lr
 8000444:	40023c00 	.word	0x40023c00
 8000448:	40023800 	.word	0x40023800
 800044c:	f0bc8000 	.word	0xf0bc8000
 8000450:	03401204 	.word	0x03401204

08000454 <clock_check>:

static void clock_check(void)
{
 8000454:	b480      	push	{r7}
 8000456:	af00      	add	r7, sp, #0
	//Enable Clock to GPIOC
	SET_BIT(RCC->AHB1ENR,RCC_AHB1ENR_GPIOCEN);
 8000458:	4b15      	ldr	r3, [pc, #84]	; (80004b0 <clock_check+0x5c>)
 800045a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045c:	4a14      	ldr	r2, [pc, #80]	; (80004b0 <clock_check+0x5c>)
 800045e:	f043 0304 	orr.w	r3, r3, #4
 8000462:	6313      	str	r3, [r2, #48]	; 0x30

	//Configuring the parameters for GPIO C pin 9
	//Parameters : Alternate function : AF0, Speed : Low
	SET_BIT(GPIOC->MODER,GPIO_MODER_MODER9_1);     // GPIOC.9 is configured as alternate function
 8000464:	4b13      	ldr	r3, [pc, #76]	; (80004b4 <clock_check+0x60>)
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	4a12      	ldr	r2, [pc, #72]	; (80004b4 <clock_check+0x60>)
 800046a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800046e:	6013      	str	r3, [r2, #0]
	MODIFY_REG(GPIOC->OSPEEDR , GPIO_OSPEEDR_OSPEED9 , _VAL2FLD(GPIO_OSPEEDR_OSPEED9,0)); // Speed is set to low
 8000470:	4b10      	ldr	r3, [pc, #64]	; (80004b4 <clock_check+0x60>)
 8000472:	689b      	ldr	r3, [r3, #8]
 8000474:	4a0f      	ldr	r2, [pc, #60]	; (80004b4 <clock_check+0x60>)
 8000476:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 800047a:	6093      	str	r3, [r2, #8]
	MODIFY_REG(GPIOC->AFR[1],GPIO_AFRH_AFSEL9,_VAL2FLD(GPIO_AFRH_AFSEL9,0)); // AF0 is selected
 800047c:	4b0d      	ldr	r3, [pc, #52]	; (80004b4 <clock_check+0x60>)
 800047e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000480:	4a0c      	ldr	r2, [pc, #48]	; (80004b4 <clock_check+0x60>)
 8000482:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000486:	6253      	str	r3, [r2, #36]	; 0x24

	//Enable MCO registers
	MODIFY_REG(RCC->CFGR, RCC_CFGR_MCO2,_VAL2FLD(RCC_CFGR_MCO2,0x3));
 8000488:	4b09      	ldr	r3, [pc, #36]	; (80004b0 <clock_check+0x5c>)
 800048a:	689b      	ldr	r3, [r3, #8]
 800048c:	4a08      	ldr	r2, [pc, #32]	; (80004b0 <clock_check+0x5c>)
 800048e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8000492:	6093      	str	r3, [r2, #8]
	//Prescaler value of 2
	MODIFY_REG(RCC->CFGR, RCC_CFGR_MCO2PRE,RCC_CFGR_MCO2PRE_2);
 8000494:	4b06      	ldr	r3, [pc, #24]	; (80004b0 <clock_check+0x5c>)
 8000496:	689b      	ldr	r3, [r3, #8]
 8000498:	f023 5360 	bic.w	r3, r3, #939524096	; 0x38000000
 800049c:	4a04      	ldr	r2, [pc, #16]	; (80004b0 <clock_check+0x5c>)
 800049e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80004a2:	6093      	str	r3, [r2, #8]
}
 80004a4:	bf00      	nop
 80004a6:	46bd      	mov	sp, r7
 80004a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ac:	4770      	bx	lr
 80004ae:	bf00      	nop
 80004b0:	40023800 	.word	0x40023800
 80004b4:	40020800 	.word	0x40020800

080004b8 <SystemInit>:



void SystemInit(void) {
 80004b8:	b580      	push	{r7, lr}
 80004ba:	af00      	add	r7, sp, #0
	//logInfo("Entered System Configuration");
	clock_check();
 80004bc:	f7ff ffca 	bl	8000454 <clock_check>
	clock_config();
 80004c0:	f7ff ff70 	bl	80003a4 <clock_config>

}
 80004c4:	bf00      	nop
 80004c6:	bd80      	pop	{r7, pc}

080004c8 <usb_gpio_init>:
#include "usbDriver.h"

void usb_gpio_init(void)
{
 80004c8:	b480      	push	{r7}
 80004ca:	af00      	add	r7, sp, #0
	//enable clock to the gpio pin
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOBEN);
 80004cc:	4b0d      	ldr	r3, [pc, #52]	; (8000504 <usb_gpio_init+0x3c>)
 80004ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004d0:	4a0c      	ldr	r2, [pc, #48]	; (8000504 <usb_gpio_init+0x3c>)
 80004d2:	f043 0302 	orr.w	r3, r3, #2
 80004d6:	6313      	str	r3, [r2, #48]	; 0x30

	//configure the pb14 and pb15 as alternate mode
	MODIFY_REG(GPIOB->MODER,
 80004d8:	4b0b      	ldr	r3, [pc, #44]	; (8000508 <usb_gpio_init+0x40>)
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 80004e0:	4a09      	ldr	r2, [pc, #36]	; (8000508 <usb_gpio_init+0x40>)
 80004e2:	f043 4320 	orr.w	r3, r3, #2684354560	; 0xa0000000
 80004e6:	6013      	str	r3, [r2, #0]
			GPIO_MODER_MODER14 | GPIO_MODER_MODER15 ,
			GPIO_MODER_MODER14_1 | GPIO_MODER_MODER15_1);

	//usb pins D+ and D- are in alternate function  mode
	MODIFY_REG(GPIOB->AFR[1],
 80004e8:	4b07      	ldr	r3, [pc, #28]	; (8000508 <usb_gpio_init+0x40>)
 80004ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004ec:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80004f0:	4a05      	ldr	r2, [pc, #20]	; (8000508 <usb_gpio_init+0x40>)
 80004f2:	f043 434c 	orr.w	r3, r3, #3422552064	; 0xcc000000
 80004f6:	6253      	str	r3, [r2, #36]	; 0x24
			GPIO_AFRH_AFSEL14 | GPIO_AFRH_AFSEL15,
			_VAL2FLD(GPIO_AFRH_AFSEL14,0xCUL) | _VAL2FLD(GPIO_AFRH_AFSEL15,0xCUL));

}
 80004f8:	bf00      	nop
 80004fa:	46bd      	mov	sp, r7
 80004fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000500:	4770      	bx	lr
 8000502:	bf00      	nop
 8000504:	40023800 	.word	0x40023800
 8000508:	40020400 	.word	0x40020400

0800050c <usb_core_init>:

void usb_core_init(void)
{
 800050c:	b480      	push	{r7}
 800050e:	af00      	add	r7, sp, #0
	//Enable clock to usb otg hs module
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_OTGHSEN);
 8000510:	4b11      	ldr	r3, [pc, #68]	; (8000558 <usb_core_init+0x4c>)
 8000512:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000514:	4a10      	ldr	r2, [pc, #64]	; (8000558 <usb_core_init+0x4c>)
 8000516:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800051a:	6313      	str	r3, [r2, #48]	; 0x30

	//Unmask the Global Interrupt Line assertion to the core.
	MODIFY_REG(USB_OTG_HS_GLOBAL->GAHBCFG,
 800051c:	4b0f      	ldr	r3, [pc, #60]	; (800055c <usb_core_init+0x50>)
 800051e:	689b      	ldr	r3, [r3, #8]
 8000520:	4a0e      	ldr	r2, [pc, #56]	; (800055c <usb_core_init+0x50>)
 8000522:	f043 0301 	orr.w	r3, r3, #1
 8000526:	6093      	str	r3, [r2, #8]
			USB_OTG_GAHBCFG_GINT,
			_VAL2FLD(USB_OTG_GAHBCFG_GINT,0x1UL));

	//Selecting USB2.0 High Speed and forcing the device to peripheral mode. Also setting the trdt value as specified in the manual
	MODIFY_REG(USB_OTG_HS_GLOBAL->GUSBCFG,
 8000528:	4b0c      	ldr	r3, [pc, #48]	; (800055c <usb_core_init+0x50>)
 800052a:	68db      	ldr	r3, [r3, #12]
 800052c:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8000530:	f423 5371 	bic.w	r3, r3, #15424	; 0x3c40
 8000534:	4a09      	ldr	r2, [pc, #36]	; (800055c <usb_core_init+0x50>)
 8000536:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800053a:	f443 5311 	orr.w	r3, r3, #9280	; 0x2440
 800053e:	60d3      	str	r3, [r2, #12]
			USB_OTG_GUSBCFG_PHYSEL | USB_OTG_GUSBCFG_TRDT | USB_OTG_GUSBCFG_FDMOD,
			USB_OTG_GUSBCFG_PHYSEL | _VAL2FLD(USB_OTG_GUSBCFG_TRDT,0x9UL) | USB_OTG_GUSBCFG_FDMOD);

	//Unmasking mode mismatch, otg interrupt and rx buffer full mask
	MODIFY_REG(USB_OTG_HS_GLOBAL->GINTMSK,
 8000540:	4b06      	ldr	r3, [pc, #24]	; (800055c <usb_core_init+0x50>)
 8000542:	699b      	ldr	r3, [r3, #24]
 8000544:	4a05      	ldr	r2, [pc, #20]	; (800055c <usb_core_init+0x50>)
 8000546:	f043 0316 	orr.w	r3, r3, #22
 800054a:	6193      	str	r3, [r2, #24]
			USB_OTG_GINTMSK_MMISM | USB_OTG_GINTMSK_OTGINT | USB_OTG_GINTMSK_RXFLVLM,
			USB_OTG_GINTMSK_MMISM | USB_OTG_GINTMSK_OTGINT | USB_OTG_GINTMSK_RXFLVLM);
}
 800054c:	bf00      	nop
 800054e:	46bd      	mov	sp, r7
 8000550:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000554:	4770      	bx	lr
 8000556:	bf00      	nop
 8000558:	40023800 	.word	0x40023800
 800055c:	40040000 	.word	0x40040000

08000560 <device_core_init>:

void device_core_init()
{
 8000560:	b480      	push	{r7}
 8000562:	af00      	add	r7, sp, #0
	//Setting the device to use the internal embedded PHY layer and in Full Speed mode
	MODIFY_REG(USB_OTG_HS_DEVICE->DCFG,
 8000564:	4b0e      	ldr	r3, [pc, #56]	; (80005a0 <device_core_init+0x40>)
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	4a0d      	ldr	r2, [pc, #52]	; (80005a0 <device_core_init+0x40>)
 800056a:	f043 0303 	orr.w	r3, r3, #3
 800056e:	6013      	str	r3, [r2, #0]
			USB_OTG_DCFG_DSPD,
			_VAL2FLD(USB_OTG_DCFG_DSPD,0x3UL));

	//Clearing all the registers
		WRITE_REG(USB_OTG_HS_GLOBAL->GINTMSK,0xFFFFFFFFUL);
 8000570:	4b0c      	ldr	r3, [pc, #48]	; (80005a4 <device_core_init+0x44>)
 8000572:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000576:	619a      	str	r2, [r3, #24]

	//Unmasking the following interrupts : USB reset, Enumeration done, Early suspend, USB suspend, SOF
	MODIFY_REG(USB_OTG_HS_GLOBAL->GINTMSK,
 8000578:	4b0a      	ldr	r3, [pc, #40]	; (80005a4 <device_core_init+0x44>)
 800057a:	699b      	ldr	r3, [r3, #24]
 800057c:	4a09      	ldr	r2, [pc, #36]	; (80005a4 <device_core_init+0x44>)
 800057e:	f443 5370 	orr.w	r3, r3, #15360	; 0x3c00
 8000582:	f043 0308 	orr.w	r3, r3, #8
 8000586:	6193      	str	r3, [r2, #24]
			USB_OTG_GINTMSK_SOFM | USB_OTG_GINTMSK_ESUSPM | USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST | USB_OTG_GINTMSK_ENUMDNEM,
			USB_OTG_GINTMSK_SOFM | USB_OTG_GINTMSK_ESUSPM | USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST | USB_OTG_GINTMSK_ENUMDNEM);

	//Enabling the VBUS Sensing
	SET_BIT(USB_OTG_HS_GLOBAL->GCCFG,USB_OTG_GCCFG_VBUSASEN);
 8000588:	4b06      	ldr	r3, [pc, #24]	; (80005a4 <device_core_init+0x44>)
 800058a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800058c:	4a05      	ldr	r2, [pc, #20]	; (80005a4 <device_core_init+0x44>)
 800058e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000592:	6393      	str	r3, [r2, #56]	; 0x38


}
 8000594:	bf00      	nop
 8000596:	46bd      	mov	sp, r7
 8000598:	f85d 7b04 	ldr.w	r7, [sp], #4
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop
 80005a0:	40040800 	.word	0x40040800
 80005a4:	40040000 	.word	0x40040000

080005a8 <connect_usb>:

void connect_usb(void)
{
 80005a8:	b480      	push	{r7}
 80005aa:	af00      	add	r7, sp, #0
	//Disabling powerdown
	SET_BIT(USB_OTG_HS_GLOBAL->GCCFG,USB_OTG_GCCFG_PWRDWN);
 80005ac:	4b08      	ldr	r3, [pc, #32]	; (80005d0 <connect_usb+0x28>)
 80005ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80005b0:	4a07      	ldr	r2, [pc, #28]	; (80005d0 <connect_usb+0x28>)
 80005b2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80005b6:	6393      	str	r3, [r2, #56]	; 0x38

	//Disabling soft disconnect
	CLEAR_BIT(USB_OTG_HS_DEVICE->DCTL,USB_OTG_DCTL_SDIS);
 80005b8:	4b06      	ldr	r3, [pc, #24]	; (80005d4 <connect_usb+0x2c>)
 80005ba:	685b      	ldr	r3, [r3, #4]
 80005bc:	4a05      	ldr	r2, [pc, #20]	; (80005d4 <connect_usb+0x2c>)
 80005be:	f023 0302 	bic.w	r3, r3, #2
 80005c2:	6053      	str	r3, [r2, #4]
}
 80005c4:	bf00      	nop
 80005c6:	46bd      	mov	sp, r7
 80005c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005cc:	4770      	bx	lr
 80005ce:	bf00      	nop
 80005d0:	40040000 	.word	0x40040000
 80005d4:	40040800 	.word	0x40040800

080005d8 <usb_init>:
#include "usbFramework.h"

void usb_init(void)
{
 80005d8:	b580      	push	{r7, lr}
 80005da:	af00      	add	r7, sp, #0
	usb_gpio_init();
 80005dc:	f7ff ff74 	bl	80004c8 <usb_gpio_init>
	usb_core_init();
 80005e0:	f7ff ff94 	bl	800050c <usb_core_init>
	device_core_init();
 80005e4:	f7ff ffbc 	bl	8000560 <device_core_init>
	connect_usb();
 80005e8:	f7ff ffde 	bl	80005a8 <connect_usb>
}
 80005ec:	bf00      	nop
 80005ee:	bd80      	pop	{r7, pc}

080005f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005f0:	480d      	ldr	r0, [pc, #52]	; (8000628 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005f2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005f4:	f7ff ff60 	bl	80004b8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005f8:	480c      	ldr	r0, [pc, #48]	; (800062c <LoopForever+0x6>)
  ldr r1, =_edata
 80005fa:	490d      	ldr	r1, [pc, #52]	; (8000630 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005fc:	4a0d      	ldr	r2, [pc, #52]	; (8000634 <LoopForever+0xe>)
  movs r3, #0
 80005fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000600:	e002      	b.n	8000608 <LoopCopyDataInit>

08000602 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000602:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000604:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000606:	3304      	adds	r3, #4

08000608 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000608:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800060a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800060c:	d3f9      	bcc.n	8000602 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800060e:	4a0a      	ldr	r2, [pc, #40]	; (8000638 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000610:	4c0a      	ldr	r4, [pc, #40]	; (800063c <LoopForever+0x16>)
  movs r3, #0
 8000612:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000614:	e001      	b.n	800061a <LoopFillZerobss>

08000616 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000616:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000618:	3204      	adds	r2, #4

0800061a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800061a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800061c:	d3fb      	bcc.n	8000616 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800061e:	f000 f811 	bl	8000644 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000622:	f7ff feaf 	bl	8000384 <main>

08000626 <LoopForever>:

LoopForever:
    b LoopForever
 8000626:	e7fe      	b.n	8000626 <LoopForever>
  ldr   r0, =_estack
 8000628:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 800062c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000630:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000634:	08001790 	.word	0x08001790
  ldr r2, =_sbss
 8000638:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800063c:	2000009c 	.word	0x2000009c

08000640 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000640:	e7fe      	b.n	8000640 <ADC_IRQHandler>
	...

08000644 <__libc_init_array>:
 8000644:	b570      	push	{r4, r5, r6, lr}
 8000646:	4d0d      	ldr	r5, [pc, #52]	; (800067c <__libc_init_array+0x38>)
 8000648:	4c0d      	ldr	r4, [pc, #52]	; (8000680 <__libc_init_array+0x3c>)
 800064a:	1b64      	subs	r4, r4, r5
 800064c:	10a4      	asrs	r4, r4, #2
 800064e:	2600      	movs	r6, #0
 8000650:	42a6      	cmp	r6, r4
 8000652:	d109      	bne.n	8000668 <__libc_init_array+0x24>
 8000654:	4d0b      	ldr	r5, [pc, #44]	; (8000684 <__libc_init_array+0x40>)
 8000656:	4c0c      	ldr	r4, [pc, #48]	; (8000688 <__libc_init_array+0x44>)
 8000658:	f001 f814 	bl	8001684 <_init>
 800065c:	1b64      	subs	r4, r4, r5
 800065e:	10a4      	asrs	r4, r4, #2
 8000660:	2600      	movs	r6, #0
 8000662:	42a6      	cmp	r6, r4
 8000664:	d105      	bne.n	8000672 <__libc_init_array+0x2e>
 8000666:	bd70      	pop	{r4, r5, r6, pc}
 8000668:	f855 3b04 	ldr.w	r3, [r5], #4
 800066c:	4798      	blx	r3
 800066e:	3601      	adds	r6, #1
 8000670:	e7ee      	b.n	8000650 <__libc_init_array+0xc>
 8000672:	f855 3b04 	ldr.w	r3, [r5], #4
 8000676:	4798      	blx	r3
 8000678:	3601      	adds	r6, #1
 800067a:	e7f2      	b.n	8000662 <__libc_init_array+0x1e>
 800067c:	08001788 	.word	0x08001788
 8000680:	08001788 	.word	0x08001788
 8000684:	08001788 	.word	0x08001788
 8000688:	0800178c 	.word	0x0800178c

0800068c <memset>:
 800068c:	4402      	add	r2, r0
 800068e:	4603      	mov	r3, r0
 8000690:	4293      	cmp	r3, r2
 8000692:	d100      	bne.n	8000696 <memset+0xa>
 8000694:	4770      	bx	lr
 8000696:	f803 1b01 	strb.w	r1, [r3], #1
 800069a:	e7f9      	b.n	8000690 <memset+0x4>

0800069c <__sfputc_r>:
 800069c:	6893      	ldr	r3, [r2, #8]
 800069e:	3b01      	subs	r3, #1
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	b410      	push	{r4}
 80006a4:	6093      	str	r3, [r2, #8]
 80006a6:	da08      	bge.n	80006ba <__sfputc_r+0x1e>
 80006a8:	6994      	ldr	r4, [r2, #24]
 80006aa:	42a3      	cmp	r3, r4
 80006ac:	db01      	blt.n	80006b2 <__sfputc_r+0x16>
 80006ae:	290a      	cmp	r1, #10
 80006b0:	d103      	bne.n	80006ba <__sfputc_r+0x1e>
 80006b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80006b6:	f000 bb17 	b.w	8000ce8 <__swbuf_r>
 80006ba:	6813      	ldr	r3, [r2, #0]
 80006bc:	1c58      	adds	r0, r3, #1
 80006be:	6010      	str	r0, [r2, #0]
 80006c0:	7019      	strb	r1, [r3, #0]
 80006c2:	4608      	mov	r0, r1
 80006c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80006c8:	4770      	bx	lr

080006ca <__sfputs_r>:
 80006ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006cc:	4606      	mov	r6, r0
 80006ce:	460f      	mov	r7, r1
 80006d0:	4614      	mov	r4, r2
 80006d2:	18d5      	adds	r5, r2, r3
 80006d4:	42ac      	cmp	r4, r5
 80006d6:	d101      	bne.n	80006dc <__sfputs_r+0x12>
 80006d8:	2000      	movs	r0, #0
 80006da:	e007      	b.n	80006ec <__sfputs_r+0x22>
 80006dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006e0:	463a      	mov	r2, r7
 80006e2:	4630      	mov	r0, r6
 80006e4:	f7ff ffda 	bl	800069c <__sfputc_r>
 80006e8:	1c43      	adds	r3, r0, #1
 80006ea:	d1f3      	bne.n	80006d4 <__sfputs_r+0xa>
 80006ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080006f0 <_vfiprintf_r>:
 80006f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006f4:	460d      	mov	r5, r1
 80006f6:	b09d      	sub	sp, #116	; 0x74
 80006f8:	4614      	mov	r4, r2
 80006fa:	4698      	mov	r8, r3
 80006fc:	4606      	mov	r6, r0
 80006fe:	b118      	cbz	r0, 8000708 <_vfiprintf_r+0x18>
 8000700:	6983      	ldr	r3, [r0, #24]
 8000702:	b90b      	cbnz	r3, 8000708 <_vfiprintf_r+0x18>
 8000704:	f000 fcca 	bl	800109c <__sinit>
 8000708:	4b89      	ldr	r3, [pc, #548]	; (8000930 <_vfiprintf_r+0x240>)
 800070a:	429d      	cmp	r5, r3
 800070c:	d11b      	bne.n	8000746 <_vfiprintf_r+0x56>
 800070e:	6875      	ldr	r5, [r6, #4]
 8000710:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000712:	07d9      	lsls	r1, r3, #31
 8000714:	d405      	bmi.n	8000722 <_vfiprintf_r+0x32>
 8000716:	89ab      	ldrh	r3, [r5, #12]
 8000718:	059a      	lsls	r2, r3, #22
 800071a:	d402      	bmi.n	8000722 <_vfiprintf_r+0x32>
 800071c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800071e:	f000 fd5b 	bl	80011d8 <__retarget_lock_acquire_recursive>
 8000722:	89ab      	ldrh	r3, [r5, #12]
 8000724:	071b      	lsls	r3, r3, #28
 8000726:	d501      	bpl.n	800072c <_vfiprintf_r+0x3c>
 8000728:	692b      	ldr	r3, [r5, #16]
 800072a:	b9eb      	cbnz	r3, 8000768 <_vfiprintf_r+0x78>
 800072c:	4629      	mov	r1, r5
 800072e:	4630      	mov	r0, r6
 8000730:	f000 fb2c 	bl	8000d8c <__swsetup_r>
 8000734:	b1c0      	cbz	r0, 8000768 <_vfiprintf_r+0x78>
 8000736:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000738:	07dc      	lsls	r4, r3, #31
 800073a:	d50e      	bpl.n	800075a <_vfiprintf_r+0x6a>
 800073c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000740:	b01d      	add	sp, #116	; 0x74
 8000742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000746:	4b7b      	ldr	r3, [pc, #492]	; (8000934 <_vfiprintf_r+0x244>)
 8000748:	429d      	cmp	r5, r3
 800074a:	d101      	bne.n	8000750 <_vfiprintf_r+0x60>
 800074c:	68b5      	ldr	r5, [r6, #8]
 800074e:	e7df      	b.n	8000710 <_vfiprintf_r+0x20>
 8000750:	4b79      	ldr	r3, [pc, #484]	; (8000938 <_vfiprintf_r+0x248>)
 8000752:	429d      	cmp	r5, r3
 8000754:	bf08      	it	eq
 8000756:	68f5      	ldreq	r5, [r6, #12]
 8000758:	e7da      	b.n	8000710 <_vfiprintf_r+0x20>
 800075a:	89ab      	ldrh	r3, [r5, #12]
 800075c:	0598      	lsls	r0, r3, #22
 800075e:	d4ed      	bmi.n	800073c <_vfiprintf_r+0x4c>
 8000760:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000762:	f000 fd3a 	bl	80011da <__retarget_lock_release_recursive>
 8000766:	e7e9      	b.n	800073c <_vfiprintf_r+0x4c>
 8000768:	2300      	movs	r3, #0
 800076a:	9309      	str	r3, [sp, #36]	; 0x24
 800076c:	2320      	movs	r3, #32
 800076e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000772:	f8cd 800c 	str.w	r8, [sp, #12]
 8000776:	2330      	movs	r3, #48	; 0x30
 8000778:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800093c <_vfiprintf_r+0x24c>
 800077c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000780:	f04f 0901 	mov.w	r9, #1
 8000784:	4623      	mov	r3, r4
 8000786:	469a      	mov	sl, r3
 8000788:	f813 2b01 	ldrb.w	r2, [r3], #1
 800078c:	b10a      	cbz	r2, 8000792 <_vfiprintf_r+0xa2>
 800078e:	2a25      	cmp	r2, #37	; 0x25
 8000790:	d1f9      	bne.n	8000786 <_vfiprintf_r+0x96>
 8000792:	ebba 0b04 	subs.w	fp, sl, r4
 8000796:	d00b      	beq.n	80007b0 <_vfiprintf_r+0xc0>
 8000798:	465b      	mov	r3, fp
 800079a:	4622      	mov	r2, r4
 800079c:	4629      	mov	r1, r5
 800079e:	4630      	mov	r0, r6
 80007a0:	f7ff ff93 	bl	80006ca <__sfputs_r>
 80007a4:	3001      	adds	r0, #1
 80007a6:	f000 80aa 	beq.w	80008fe <_vfiprintf_r+0x20e>
 80007aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80007ac:	445a      	add	r2, fp
 80007ae:	9209      	str	r2, [sp, #36]	; 0x24
 80007b0:	f89a 3000 	ldrb.w	r3, [sl]
 80007b4:	2b00      	cmp	r3, #0
 80007b6:	f000 80a2 	beq.w	80008fe <_vfiprintf_r+0x20e>
 80007ba:	2300      	movs	r3, #0
 80007bc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80007c0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80007c4:	f10a 0a01 	add.w	sl, sl, #1
 80007c8:	9304      	str	r3, [sp, #16]
 80007ca:	9307      	str	r3, [sp, #28]
 80007cc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80007d0:	931a      	str	r3, [sp, #104]	; 0x68
 80007d2:	4654      	mov	r4, sl
 80007d4:	2205      	movs	r2, #5
 80007d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80007da:	4858      	ldr	r0, [pc, #352]	; (800093c <_vfiprintf_r+0x24c>)
 80007dc:	f7ff fd08 	bl	80001f0 <memchr>
 80007e0:	9a04      	ldr	r2, [sp, #16]
 80007e2:	b9d8      	cbnz	r0, 800081c <_vfiprintf_r+0x12c>
 80007e4:	06d1      	lsls	r1, r2, #27
 80007e6:	bf44      	itt	mi
 80007e8:	2320      	movmi	r3, #32
 80007ea:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80007ee:	0713      	lsls	r3, r2, #28
 80007f0:	bf44      	itt	mi
 80007f2:	232b      	movmi	r3, #43	; 0x2b
 80007f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80007f8:	f89a 3000 	ldrb.w	r3, [sl]
 80007fc:	2b2a      	cmp	r3, #42	; 0x2a
 80007fe:	d015      	beq.n	800082c <_vfiprintf_r+0x13c>
 8000800:	9a07      	ldr	r2, [sp, #28]
 8000802:	4654      	mov	r4, sl
 8000804:	2000      	movs	r0, #0
 8000806:	f04f 0c0a 	mov.w	ip, #10
 800080a:	4621      	mov	r1, r4
 800080c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000810:	3b30      	subs	r3, #48	; 0x30
 8000812:	2b09      	cmp	r3, #9
 8000814:	d94e      	bls.n	80008b4 <_vfiprintf_r+0x1c4>
 8000816:	b1b0      	cbz	r0, 8000846 <_vfiprintf_r+0x156>
 8000818:	9207      	str	r2, [sp, #28]
 800081a:	e014      	b.n	8000846 <_vfiprintf_r+0x156>
 800081c:	eba0 0308 	sub.w	r3, r0, r8
 8000820:	fa09 f303 	lsl.w	r3, r9, r3
 8000824:	4313      	orrs	r3, r2
 8000826:	9304      	str	r3, [sp, #16]
 8000828:	46a2      	mov	sl, r4
 800082a:	e7d2      	b.n	80007d2 <_vfiprintf_r+0xe2>
 800082c:	9b03      	ldr	r3, [sp, #12]
 800082e:	1d19      	adds	r1, r3, #4
 8000830:	681b      	ldr	r3, [r3, #0]
 8000832:	9103      	str	r1, [sp, #12]
 8000834:	2b00      	cmp	r3, #0
 8000836:	bfbb      	ittet	lt
 8000838:	425b      	neglt	r3, r3
 800083a:	f042 0202 	orrlt.w	r2, r2, #2
 800083e:	9307      	strge	r3, [sp, #28]
 8000840:	9307      	strlt	r3, [sp, #28]
 8000842:	bfb8      	it	lt
 8000844:	9204      	strlt	r2, [sp, #16]
 8000846:	7823      	ldrb	r3, [r4, #0]
 8000848:	2b2e      	cmp	r3, #46	; 0x2e
 800084a:	d10c      	bne.n	8000866 <_vfiprintf_r+0x176>
 800084c:	7863      	ldrb	r3, [r4, #1]
 800084e:	2b2a      	cmp	r3, #42	; 0x2a
 8000850:	d135      	bne.n	80008be <_vfiprintf_r+0x1ce>
 8000852:	9b03      	ldr	r3, [sp, #12]
 8000854:	1d1a      	adds	r2, r3, #4
 8000856:	681b      	ldr	r3, [r3, #0]
 8000858:	9203      	str	r2, [sp, #12]
 800085a:	2b00      	cmp	r3, #0
 800085c:	bfb8      	it	lt
 800085e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000862:	3402      	adds	r4, #2
 8000864:	9305      	str	r3, [sp, #20]
 8000866:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800094c <_vfiprintf_r+0x25c>
 800086a:	7821      	ldrb	r1, [r4, #0]
 800086c:	2203      	movs	r2, #3
 800086e:	4650      	mov	r0, sl
 8000870:	f7ff fcbe 	bl	80001f0 <memchr>
 8000874:	b140      	cbz	r0, 8000888 <_vfiprintf_r+0x198>
 8000876:	2340      	movs	r3, #64	; 0x40
 8000878:	eba0 000a 	sub.w	r0, r0, sl
 800087c:	fa03 f000 	lsl.w	r0, r3, r0
 8000880:	9b04      	ldr	r3, [sp, #16]
 8000882:	4303      	orrs	r3, r0
 8000884:	3401      	adds	r4, #1
 8000886:	9304      	str	r3, [sp, #16]
 8000888:	f814 1b01 	ldrb.w	r1, [r4], #1
 800088c:	482c      	ldr	r0, [pc, #176]	; (8000940 <_vfiprintf_r+0x250>)
 800088e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000892:	2206      	movs	r2, #6
 8000894:	f7ff fcac 	bl	80001f0 <memchr>
 8000898:	2800      	cmp	r0, #0
 800089a:	d03f      	beq.n	800091c <_vfiprintf_r+0x22c>
 800089c:	4b29      	ldr	r3, [pc, #164]	; (8000944 <_vfiprintf_r+0x254>)
 800089e:	bb1b      	cbnz	r3, 80008e8 <_vfiprintf_r+0x1f8>
 80008a0:	9b03      	ldr	r3, [sp, #12]
 80008a2:	3307      	adds	r3, #7
 80008a4:	f023 0307 	bic.w	r3, r3, #7
 80008a8:	3308      	adds	r3, #8
 80008aa:	9303      	str	r3, [sp, #12]
 80008ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80008ae:	443b      	add	r3, r7
 80008b0:	9309      	str	r3, [sp, #36]	; 0x24
 80008b2:	e767      	b.n	8000784 <_vfiprintf_r+0x94>
 80008b4:	fb0c 3202 	mla	r2, ip, r2, r3
 80008b8:	460c      	mov	r4, r1
 80008ba:	2001      	movs	r0, #1
 80008bc:	e7a5      	b.n	800080a <_vfiprintf_r+0x11a>
 80008be:	2300      	movs	r3, #0
 80008c0:	3401      	adds	r4, #1
 80008c2:	9305      	str	r3, [sp, #20]
 80008c4:	4619      	mov	r1, r3
 80008c6:	f04f 0c0a 	mov.w	ip, #10
 80008ca:	4620      	mov	r0, r4
 80008cc:	f810 2b01 	ldrb.w	r2, [r0], #1
 80008d0:	3a30      	subs	r2, #48	; 0x30
 80008d2:	2a09      	cmp	r2, #9
 80008d4:	d903      	bls.n	80008de <_vfiprintf_r+0x1ee>
 80008d6:	2b00      	cmp	r3, #0
 80008d8:	d0c5      	beq.n	8000866 <_vfiprintf_r+0x176>
 80008da:	9105      	str	r1, [sp, #20]
 80008dc:	e7c3      	b.n	8000866 <_vfiprintf_r+0x176>
 80008de:	fb0c 2101 	mla	r1, ip, r1, r2
 80008e2:	4604      	mov	r4, r0
 80008e4:	2301      	movs	r3, #1
 80008e6:	e7f0      	b.n	80008ca <_vfiprintf_r+0x1da>
 80008e8:	ab03      	add	r3, sp, #12
 80008ea:	9300      	str	r3, [sp, #0]
 80008ec:	462a      	mov	r2, r5
 80008ee:	4b16      	ldr	r3, [pc, #88]	; (8000948 <_vfiprintf_r+0x258>)
 80008f0:	a904      	add	r1, sp, #16
 80008f2:	4630      	mov	r0, r6
 80008f4:	f3af 8000 	nop.w
 80008f8:	4607      	mov	r7, r0
 80008fa:	1c78      	adds	r0, r7, #1
 80008fc:	d1d6      	bne.n	80008ac <_vfiprintf_r+0x1bc>
 80008fe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000900:	07d9      	lsls	r1, r3, #31
 8000902:	d405      	bmi.n	8000910 <_vfiprintf_r+0x220>
 8000904:	89ab      	ldrh	r3, [r5, #12]
 8000906:	059a      	lsls	r2, r3, #22
 8000908:	d402      	bmi.n	8000910 <_vfiprintf_r+0x220>
 800090a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800090c:	f000 fc65 	bl	80011da <__retarget_lock_release_recursive>
 8000910:	89ab      	ldrh	r3, [r5, #12]
 8000912:	065b      	lsls	r3, r3, #25
 8000914:	f53f af12 	bmi.w	800073c <_vfiprintf_r+0x4c>
 8000918:	9809      	ldr	r0, [sp, #36]	; 0x24
 800091a:	e711      	b.n	8000740 <_vfiprintf_r+0x50>
 800091c:	ab03      	add	r3, sp, #12
 800091e:	9300      	str	r3, [sp, #0]
 8000920:	462a      	mov	r2, r5
 8000922:	4b09      	ldr	r3, [pc, #36]	; (8000948 <_vfiprintf_r+0x258>)
 8000924:	a904      	add	r1, sp, #16
 8000926:	4630      	mov	r0, r6
 8000928:	f000 f88a 	bl	8000a40 <_printf_i>
 800092c:	e7e4      	b.n	80008f8 <_vfiprintf_r+0x208>
 800092e:	bf00      	nop
 8000930:	08001748 	.word	0x08001748
 8000934:	08001768 	.word	0x08001768
 8000938:	08001728 	.word	0x08001728
 800093c:	080016f4 	.word	0x080016f4
 8000940:	080016fe 	.word	0x080016fe
 8000944:	00000000 	.word	0x00000000
 8000948:	080006cb 	.word	0x080006cb
 800094c:	080016fa 	.word	0x080016fa

08000950 <vfiprintf>:
 8000950:	4613      	mov	r3, r2
 8000952:	460a      	mov	r2, r1
 8000954:	4601      	mov	r1, r0
 8000956:	4802      	ldr	r0, [pc, #8]	; (8000960 <vfiprintf+0x10>)
 8000958:	6800      	ldr	r0, [r0, #0]
 800095a:	f7ff bec9 	b.w	80006f0 <_vfiprintf_r>
 800095e:	bf00      	nop
 8000960:	20000000 	.word	0x20000000

08000964 <_printf_common>:
 8000964:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000968:	4616      	mov	r6, r2
 800096a:	4699      	mov	r9, r3
 800096c:	688a      	ldr	r2, [r1, #8]
 800096e:	690b      	ldr	r3, [r1, #16]
 8000970:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000974:	4293      	cmp	r3, r2
 8000976:	bfb8      	it	lt
 8000978:	4613      	movlt	r3, r2
 800097a:	6033      	str	r3, [r6, #0]
 800097c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000980:	4607      	mov	r7, r0
 8000982:	460c      	mov	r4, r1
 8000984:	b10a      	cbz	r2, 800098a <_printf_common+0x26>
 8000986:	3301      	adds	r3, #1
 8000988:	6033      	str	r3, [r6, #0]
 800098a:	6823      	ldr	r3, [r4, #0]
 800098c:	0699      	lsls	r1, r3, #26
 800098e:	bf42      	ittt	mi
 8000990:	6833      	ldrmi	r3, [r6, #0]
 8000992:	3302      	addmi	r3, #2
 8000994:	6033      	strmi	r3, [r6, #0]
 8000996:	6825      	ldr	r5, [r4, #0]
 8000998:	f015 0506 	ands.w	r5, r5, #6
 800099c:	d106      	bne.n	80009ac <_printf_common+0x48>
 800099e:	f104 0a19 	add.w	sl, r4, #25
 80009a2:	68e3      	ldr	r3, [r4, #12]
 80009a4:	6832      	ldr	r2, [r6, #0]
 80009a6:	1a9b      	subs	r3, r3, r2
 80009a8:	42ab      	cmp	r3, r5
 80009aa:	dc26      	bgt.n	80009fa <_printf_common+0x96>
 80009ac:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80009b0:	1e13      	subs	r3, r2, #0
 80009b2:	6822      	ldr	r2, [r4, #0]
 80009b4:	bf18      	it	ne
 80009b6:	2301      	movne	r3, #1
 80009b8:	0692      	lsls	r2, r2, #26
 80009ba:	d42b      	bmi.n	8000a14 <_printf_common+0xb0>
 80009bc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80009c0:	4649      	mov	r1, r9
 80009c2:	4638      	mov	r0, r7
 80009c4:	47c0      	blx	r8
 80009c6:	3001      	adds	r0, #1
 80009c8:	d01e      	beq.n	8000a08 <_printf_common+0xa4>
 80009ca:	6823      	ldr	r3, [r4, #0]
 80009cc:	68e5      	ldr	r5, [r4, #12]
 80009ce:	6832      	ldr	r2, [r6, #0]
 80009d0:	f003 0306 	and.w	r3, r3, #6
 80009d4:	2b04      	cmp	r3, #4
 80009d6:	bf08      	it	eq
 80009d8:	1aad      	subeq	r5, r5, r2
 80009da:	68a3      	ldr	r3, [r4, #8]
 80009dc:	6922      	ldr	r2, [r4, #16]
 80009de:	bf0c      	ite	eq
 80009e0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80009e4:	2500      	movne	r5, #0
 80009e6:	4293      	cmp	r3, r2
 80009e8:	bfc4      	itt	gt
 80009ea:	1a9b      	subgt	r3, r3, r2
 80009ec:	18ed      	addgt	r5, r5, r3
 80009ee:	2600      	movs	r6, #0
 80009f0:	341a      	adds	r4, #26
 80009f2:	42b5      	cmp	r5, r6
 80009f4:	d11a      	bne.n	8000a2c <_printf_common+0xc8>
 80009f6:	2000      	movs	r0, #0
 80009f8:	e008      	b.n	8000a0c <_printf_common+0xa8>
 80009fa:	2301      	movs	r3, #1
 80009fc:	4652      	mov	r2, sl
 80009fe:	4649      	mov	r1, r9
 8000a00:	4638      	mov	r0, r7
 8000a02:	47c0      	blx	r8
 8000a04:	3001      	adds	r0, #1
 8000a06:	d103      	bne.n	8000a10 <_printf_common+0xac>
 8000a08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000a0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a10:	3501      	adds	r5, #1
 8000a12:	e7c6      	b.n	80009a2 <_printf_common+0x3e>
 8000a14:	18e1      	adds	r1, r4, r3
 8000a16:	1c5a      	adds	r2, r3, #1
 8000a18:	2030      	movs	r0, #48	; 0x30
 8000a1a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000a1e:	4422      	add	r2, r4
 8000a20:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000a24:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000a28:	3302      	adds	r3, #2
 8000a2a:	e7c7      	b.n	80009bc <_printf_common+0x58>
 8000a2c:	2301      	movs	r3, #1
 8000a2e:	4622      	mov	r2, r4
 8000a30:	4649      	mov	r1, r9
 8000a32:	4638      	mov	r0, r7
 8000a34:	47c0      	blx	r8
 8000a36:	3001      	adds	r0, #1
 8000a38:	d0e6      	beq.n	8000a08 <_printf_common+0xa4>
 8000a3a:	3601      	adds	r6, #1
 8000a3c:	e7d9      	b.n	80009f2 <_printf_common+0x8e>
	...

08000a40 <_printf_i>:
 8000a40:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000a44:	460c      	mov	r4, r1
 8000a46:	4691      	mov	r9, r2
 8000a48:	7e27      	ldrb	r7, [r4, #24]
 8000a4a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000a4c:	2f78      	cmp	r7, #120	; 0x78
 8000a4e:	4680      	mov	r8, r0
 8000a50:	469a      	mov	sl, r3
 8000a52:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000a56:	d807      	bhi.n	8000a68 <_printf_i+0x28>
 8000a58:	2f62      	cmp	r7, #98	; 0x62
 8000a5a:	d80a      	bhi.n	8000a72 <_printf_i+0x32>
 8000a5c:	2f00      	cmp	r7, #0
 8000a5e:	f000 80d8 	beq.w	8000c12 <_printf_i+0x1d2>
 8000a62:	2f58      	cmp	r7, #88	; 0x58
 8000a64:	f000 80a3 	beq.w	8000bae <_printf_i+0x16e>
 8000a68:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000a6c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000a70:	e03a      	b.n	8000ae8 <_printf_i+0xa8>
 8000a72:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000a76:	2b15      	cmp	r3, #21
 8000a78:	d8f6      	bhi.n	8000a68 <_printf_i+0x28>
 8000a7a:	a001      	add	r0, pc, #4	; (adr r0, 8000a80 <_printf_i+0x40>)
 8000a7c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000a80:	08000ad9 	.word	0x08000ad9
 8000a84:	08000aed 	.word	0x08000aed
 8000a88:	08000a69 	.word	0x08000a69
 8000a8c:	08000a69 	.word	0x08000a69
 8000a90:	08000a69 	.word	0x08000a69
 8000a94:	08000a69 	.word	0x08000a69
 8000a98:	08000aed 	.word	0x08000aed
 8000a9c:	08000a69 	.word	0x08000a69
 8000aa0:	08000a69 	.word	0x08000a69
 8000aa4:	08000a69 	.word	0x08000a69
 8000aa8:	08000a69 	.word	0x08000a69
 8000aac:	08000bf9 	.word	0x08000bf9
 8000ab0:	08000b1d 	.word	0x08000b1d
 8000ab4:	08000bdb 	.word	0x08000bdb
 8000ab8:	08000a69 	.word	0x08000a69
 8000abc:	08000a69 	.word	0x08000a69
 8000ac0:	08000c1b 	.word	0x08000c1b
 8000ac4:	08000a69 	.word	0x08000a69
 8000ac8:	08000b1d 	.word	0x08000b1d
 8000acc:	08000a69 	.word	0x08000a69
 8000ad0:	08000a69 	.word	0x08000a69
 8000ad4:	08000be3 	.word	0x08000be3
 8000ad8:	680b      	ldr	r3, [r1, #0]
 8000ada:	1d1a      	adds	r2, r3, #4
 8000adc:	681b      	ldr	r3, [r3, #0]
 8000ade:	600a      	str	r2, [r1, #0]
 8000ae0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000ae4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ae8:	2301      	movs	r3, #1
 8000aea:	e0a3      	b.n	8000c34 <_printf_i+0x1f4>
 8000aec:	6825      	ldr	r5, [r4, #0]
 8000aee:	6808      	ldr	r0, [r1, #0]
 8000af0:	062e      	lsls	r6, r5, #24
 8000af2:	f100 0304 	add.w	r3, r0, #4
 8000af6:	d50a      	bpl.n	8000b0e <_printf_i+0xce>
 8000af8:	6805      	ldr	r5, [r0, #0]
 8000afa:	600b      	str	r3, [r1, #0]
 8000afc:	2d00      	cmp	r5, #0
 8000afe:	da03      	bge.n	8000b08 <_printf_i+0xc8>
 8000b00:	232d      	movs	r3, #45	; 0x2d
 8000b02:	426d      	negs	r5, r5
 8000b04:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000b08:	485e      	ldr	r0, [pc, #376]	; (8000c84 <_printf_i+0x244>)
 8000b0a:	230a      	movs	r3, #10
 8000b0c:	e019      	b.n	8000b42 <_printf_i+0x102>
 8000b0e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000b12:	6805      	ldr	r5, [r0, #0]
 8000b14:	600b      	str	r3, [r1, #0]
 8000b16:	bf18      	it	ne
 8000b18:	b22d      	sxthne	r5, r5
 8000b1a:	e7ef      	b.n	8000afc <_printf_i+0xbc>
 8000b1c:	680b      	ldr	r3, [r1, #0]
 8000b1e:	6825      	ldr	r5, [r4, #0]
 8000b20:	1d18      	adds	r0, r3, #4
 8000b22:	6008      	str	r0, [r1, #0]
 8000b24:	0628      	lsls	r0, r5, #24
 8000b26:	d501      	bpl.n	8000b2c <_printf_i+0xec>
 8000b28:	681d      	ldr	r5, [r3, #0]
 8000b2a:	e002      	b.n	8000b32 <_printf_i+0xf2>
 8000b2c:	0669      	lsls	r1, r5, #25
 8000b2e:	d5fb      	bpl.n	8000b28 <_printf_i+0xe8>
 8000b30:	881d      	ldrh	r5, [r3, #0]
 8000b32:	4854      	ldr	r0, [pc, #336]	; (8000c84 <_printf_i+0x244>)
 8000b34:	2f6f      	cmp	r7, #111	; 0x6f
 8000b36:	bf0c      	ite	eq
 8000b38:	2308      	moveq	r3, #8
 8000b3a:	230a      	movne	r3, #10
 8000b3c:	2100      	movs	r1, #0
 8000b3e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000b42:	6866      	ldr	r6, [r4, #4]
 8000b44:	60a6      	str	r6, [r4, #8]
 8000b46:	2e00      	cmp	r6, #0
 8000b48:	bfa2      	ittt	ge
 8000b4a:	6821      	ldrge	r1, [r4, #0]
 8000b4c:	f021 0104 	bicge.w	r1, r1, #4
 8000b50:	6021      	strge	r1, [r4, #0]
 8000b52:	b90d      	cbnz	r5, 8000b58 <_printf_i+0x118>
 8000b54:	2e00      	cmp	r6, #0
 8000b56:	d04d      	beq.n	8000bf4 <_printf_i+0x1b4>
 8000b58:	4616      	mov	r6, r2
 8000b5a:	fbb5 f1f3 	udiv	r1, r5, r3
 8000b5e:	fb03 5711 	mls	r7, r3, r1, r5
 8000b62:	5dc7      	ldrb	r7, [r0, r7]
 8000b64:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000b68:	462f      	mov	r7, r5
 8000b6a:	42bb      	cmp	r3, r7
 8000b6c:	460d      	mov	r5, r1
 8000b6e:	d9f4      	bls.n	8000b5a <_printf_i+0x11a>
 8000b70:	2b08      	cmp	r3, #8
 8000b72:	d10b      	bne.n	8000b8c <_printf_i+0x14c>
 8000b74:	6823      	ldr	r3, [r4, #0]
 8000b76:	07df      	lsls	r7, r3, #31
 8000b78:	d508      	bpl.n	8000b8c <_printf_i+0x14c>
 8000b7a:	6923      	ldr	r3, [r4, #16]
 8000b7c:	6861      	ldr	r1, [r4, #4]
 8000b7e:	4299      	cmp	r1, r3
 8000b80:	bfde      	ittt	le
 8000b82:	2330      	movle	r3, #48	; 0x30
 8000b84:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000b88:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8000b8c:	1b92      	subs	r2, r2, r6
 8000b8e:	6122      	str	r2, [r4, #16]
 8000b90:	f8cd a000 	str.w	sl, [sp]
 8000b94:	464b      	mov	r3, r9
 8000b96:	aa03      	add	r2, sp, #12
 8000b98:	4621      	mov	r1, r4
 8000b9a:	4640      	mov	r0, r8
 8000b9c:	f7ff fee2 	bl	8000964 <_printf_common>
 8000ba0:	3001      	adds	r0, #1
 8000ba2:	d14c      	bne.n	8000c3e <_printf_i+0x1fe>
 8000ba4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ba8:	b004      	add	sp, #16
 8000baa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bae:	4835      	ldr	r0, [pc, #212]	; (8000c84 <_printf_i+0x244>)
 8000bb0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000bb4:	6823      	ldr	r3, [r4, #0]
 8000bb6:	680e      	ldr	r6, [r1, #0]
 8000bb8:	061f      	lsls	r7, r3, #24
 8000bba:	f856 5b04 	ldr.w	r5, [r6], #4
 8000bbe:	600e      	str	r6, [r1, #0]
 8000bc0:	d514      	bpl.n	8000bec <_printf_i+0x1ac>
 8000bc2:	07d9      	lsls	r1, r3, #31
 8000bc4:	bf44      	itt	mi
 8000bc6:	f043 0320 	orrmi.w	r3, r3, #32
 8000bca:	6023      	strmi	r3, [r4, #0]
 8000bcc:	b91d      	cbnz	r5, 8000bd6 <_printf_i+0x196>
 8000bce:	6823      	ldr	r3, [r4, #0]
 8000bd0:	f023 0320 	bic.w	r3, r3, #32
 8000bd4:	6023      	str	r3, [r4, #0]
 8000bd6:	2310      	movs	r3, #16
 8000bd8:	e7b0      	b.n	8000b3c <_printf_i+0xfc>
 8000bda:	6823      	ldr	r3, [r4, #0]
 8000bdc:	f043 0320 	orr.w	r3, r3, #32
 8000be0:	6023      	str	r3, [r4, #0]
 8000be2:	2378      	movs	r3, #120	; 0x78
 8000be4:	4828      	ldr	r0, [pc, #160]	; (8000c88 <_printf_i+0x248>)
 8000be6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000bea:	e7e3      	b.n	8000bb4 <_printf_i+0x174>
 8000bec:	065e      	lsls	r6, r3, #25
 8000bee:	bf48      	it	mi
 8000bf0:	b2ad      	uxthmi	r5, r5
 8000bf2:	e7e6      	b.n	8000bc2 <_printf_i+0x182>
 8000bf4:	4616      	mov	r6, r2
 8000bf6:	e7bb      	b.n	8000b70 <_printf_i+0x130>
 8000bf8:	680b      	ldr	r3, [r1, #0]
 8000bfa:	6826      	ldr	r6, [r4, #0]
 8000bfc:	6960      	ldr	r0, [r4, #20]
 8000bfe:	1d1d      	adds	r5, r3, #4
 8000c00:	600d      	str	r5, [r1, #0]
 8000c02:	0635      	lsls	r5, r6, #24
 8000c04:	681b      	ldr	r3, [r3, #0]
 8000c06:	d501      	bpl.n	8000c0c <_printf_i+0x1cc>
 8000c08:	6018      	str	r0, [r3, #0]
 8000c0a:	e002      	b.n	8000c12 <_printf_i+0x1d2>
 8000c0c:	0671      	lsls	r1, r6, #25
 8000c0e:	d5fb      	bpl.n	8000c08 <_printf_i+0x1c8>
 8000c10:	8018      	strh	r0, [r3, #0]
 8000c12:	2300      	movs	r3, #0
 8000c14:	6123      	str	r3, [r4, #16]
 8000c16:	4616      	mov	r6, r2
 8000c18:	e7ba      	b.n	8000b90 <_printf_i+0x150>
 8000c1a:	680b      	ldr	r3, [r1, #0]
 8000c1c:	1d1a      	adds	r2, r3, #4
 8000c1e:	600a      	str	r2, [r1, #0]
 8000c20:	681e      	ldr	r6, [r3, #0]
 8000c22:	6862      	ldr	r2, [r4, #4]
 8000c24:	2100      	movs	r1, #0
 8000c26:	4630      	mov	r0, r6
 8000c28:	f7ff fae2 	bl	80001f0 <memchr>
 8000c2c:	b108      	cbz	r0, 8000c32 <_printf_i+0x1f2>
 8000c2e:	1b80      	subs	r0, r0, r6
 8000c30:	6060      	str	r0, [r4, #4]
 8000c32:	6863      	ldr	r3, [r4, #4]
 8000c34:	6123      	str	r3, [r4, #16]
 8000c36:	2300      	movs	r3, #0
 8000c38:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000c3c:	e7a8      	b.n	8000b90 <_printf_i+0x150>
 8000c3e:	6923      	ldr	r3, [r4, #16]
 8000c40:	4632      	mov	r2, r6
 8000c42:	4649      	mov	r1, r9
 8000c44:	4640      	mov	r0, r8
 8000c46:	47d0      	blx	sl
 8000c48:	3001      	adds	r0, #1
 8000c4a:	d0ab      	beq.n	8000ba4 <_printf_i+0x164>
 8000c4c:	6823      	ldr	r3, [r4, #0]
 8000c4e:	079b      	lsls	r3, r3, #30
 8000c50:	d413      	bmi.n	8000c7a <_printf_i+0x23a>
 8000c52:	68e0      	ldr	r0, [r4, #12]
 8000c54:	9b03      	ldr	r3, [sp, #12]
 8000c56:	4298      	cmp	r0, r3
 8000c58:	bfb8      	it	lt
 8000c5a:	4618      	movlt	r0, r3
 8000c5c:	e7a4      	b.n	8000ba8 <_printf_i+0x168>
 8000c5e:	2301      	movs	r3, #1
 8000c60:	4632      	mov	r2, r6
 8000c62:	4649      	mov	r1, r9
 8000c64:	4640      	mov	r0, r8
 8000c66:	47d0      	blx	sl
 8000c68:	3001      	adds	r0, #1
 8000c6a:	d09b      	beq.n	8000ba4 <_printf_i+0x164>
 8000c6c:	3501      	adds	r5, #1
 8000c6e:	68e3      	ldr	r3, [r4, #12]
 8000c70:	9903      	ldr	r1, [sp, #12]
 8000c72:	1a5b      	subs	r3, r3, r1
 8000c74:	42ab      	cmp	r3, r5
 8000c76:	dcf2      	bgt.n	8000c5e <_printf_i+0x21e>
 8000c78:	e7eb      	b.n	8000c52 <_printf_i+0x212>
 8000c7a:	2500      	movs	r5, #0
 8000c7c:	f104 0619 	add.w	r6, r4, #25
 8000c80:	e7f5      	b.n	8000c6e <_printf_i+0x22e>
 8000c82:	bf00      	nop
 8000c84:	08001705 	.word	0x08001705
 8000c88:	08001716 	.word	0x08001716

08000c8c <iprintf>:
 8000c8c:	b40f      	push	{r0, r1, r2, r3}
 8000c8e:	4b0a      	ldr	r3, [pc, #40]	; (8000cb8 <iprintf+0x2c>)
 8000c90:	b513      	push	{r0, r1, r4, lr}
 8000c92:	681c      	ldr	r4, [r3, #0]
 8000c94:	b124      	cbz	r4, 8000ca0 <iprintf+0x14>
 8000c96:	69a3      	ldr	r3, [r4, #24]
 8000c98:	b913      	cbnz	r3, 8000ca0 <iprintf+0x14>
 8000c9a:	4620      	mov	r0, r4
 8000c9c:	f000 f9fe 	bl	800109c <__sinit>
 8000ca0:	ab05      	add	r3, sp, #20
 8000ca2:	9a04      	ldr	r2, [sp, #16]
 8000ca4:	68a1      	ldr	r1, [r4, #8]
 8000ca6:	9301      	str	r3, [sp, #4]
 8000ca8:	4620      	mov	r0, r4
 8000caa:	f7ff fd21 	bl	80006f0 <_vfiprintf_r>
 8000cae:	b002      	add	sp, #8
 8000cb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr
 8000cb8:	20000000 	.word	0x20000000

08000cbc <putchar>:
 8000cbc:	4b09      	ldr	r3, [pc, #36]	; (8000ce4 <putchar+0x28>)
 8000cbe:	b513      	push	{r0, r1, r4, lr}
 8000cc0:	681c      	ldr	r4, [r3, #0]
 8000cc2:	4601      	mov	r1, r0
 8000cc4:	b134      	cbz	r4, 8000cd4 <putchar+0x18>
 8000cc6:	69a3      	ldr	r3, [r4, #24]
 8000cc8:	b923      	cbnz	r3, 8000cd4 <putchar+0x18>
 8000cca:	9001      	str	r0, [sp, #4]
 8000ccc:	4620      	mov	r0, r4
 8000cce:	f000 f9e5 	bl	800109c <__sinit>
 8000cd2:	9901      	ldr	r1, [sp, #4]
 8000cd4:	68a2      	ldr	r2, [r4, #8]
 8000cd6:	4620      	mov	r0, r4
 8000cd8:	b002      	add	sp, #8
 8000cda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000cde:	f000 bb8b 	b.w	80013f8 <_putc_r>
 8000ce2:	bf00      	nop
 8000ce4:	20000000 	.word	0x20000000

08000ce8 <__swbuf_r>:
 8000ce8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cea:	460e      	mov	r6, r1
 8000cec:	4614      	mov	r4, r2
 8000cee:	4605      	mov	r5, r0
 8000cf0:	b118      	cbz	r0, 8000cfa <__swbuf_r+0x12>
 8000cf2:	6983      	ldr	r3, [r0, #24]
 8000cf4:	b90b      	cbnz	r3, 8000cfa <__swbuf_r+0x12>
 8000cf6:	f000 f9d1 	bl	800109c <__sinit>
 8000cfa:	4b21      	ldr	r3, [pc, #132]	; (8000d80 <__swbuf_r+0x98>)
 8000cfc:	429c      	cmp	r4, r3
 8000cfe:	d12b      	bne.n	8000d58 <__swbuf_r+0x70>
 8000d00:	686c      	ldr	r4, [r5, #4]
 8000d02:	69a3      	ldr	r3, [r4, #24]
 8000d04:	60a3      	str	r3, [r4, #8]
 8000d06:	89a3      	ldrh	r3, [r4, #12]
 8000d08:	071a      	lsls	r2, r3, #28
 8000d0a:	d52f      	bpl.n	8000d6c <__swbuf_r+0x84>
 8000d0c:	6923      	ldr	r3, [r4, #16]
 8000d0e:	b36b      	cbz	r3, 8000d6c <__swbuf_r+0x84>
 8000d10:	6923      	ldr	r3, [r4, #16]
 8000d12:	6820      	ldr	r0, [r4, #0]
 8000d14:	1ac0      	subs	r0, r0, r3
 8000d16:	6963      	ldr	r3, [r4, #20]
 8000d18:	b2f6      	uxtb	r6, r6
 8000d1a:	4283      	cmp	r3, r0
 8000d1c:	4637      	mov	r7, r6
 8000d1e:	dc04      	bgt.n	8000d2a <__swbuf_r+0x42>
 8000d20:	4621      	mov	r1, r4
 8000d22:	4628      	mov	r0, r5
 8000d24:	f000 f926 	bl	8000f74 <_fflush_r>
 8000d28:	bb30      	cbnz	r0, 8000d78 <__swbuf_r+0x90>
 8000d2a:	68a3      	ldr	r3, [r4, #8]
 8000d2c:	3b01      	subs	r3, #1
 8000d2e:	60a3      	str	r3, [r4, #8]
 8000d30:	6823      	ldr	r3, [r4, #0]
 8000d32:	1c5a      	adds	r2, r3, #1
 8000d34:	6022      	str	r2, [r4, #0]
 8000d36:	701e      	strb	r6, [r3, #0]
 8000d38:	6963      	ldr	r3, [r4, #20]
 8000d3a:	3001      	adds	r0, #1
 8000d3c:	4283      	cmp	r3, r0
 8000d3e:	d004      	beq.n	8000d4a <__swbuf_r+0x62>
 8000d40:	89a3      	ldrh	r3, [r4, #12]
 8000d42:	07db      	lsls	r3, r3, #31
 8000d44:	d506      	bpl.n	8000d54 <__swbuf_r+0x6c>
 8000d46:	2e0a      	cmp	r6, #10
 8000d48:	d104      	bne.n	8000d54 <__swbuf_r+0x6c>
 8000d4a:	4621      	mov	r1, r4
 8000d4c:	4628      	mov	r0, r5
 8000d4e:	f000 f911 	bl	8000f74 <_fflush_r>
 8000d52:	b988      	cbnz	r0, 8000d78 <__swbuf_r+0x90>
 8000d54:	4638      	mov	r0, r7
 8000d56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d58:	4b0a      	ldr	r3, [pc, #40]	; (8000d84 <__swbuf_r+0x9c>)
 8000d5a:	429c      	cmp	r4, r3
 8000d5c:	d101      	bne.n	8000d62 <__swbuf_r+0x7a>
 8000d5e:	68ac      	ldr	r4, [r5, #8]
 8000d60:	e7cf      	b.n	8000d02 <__swbuf_r+0x1a>
 8000d62:	4b09      	ldr	r3, [pc, #36]	; (8000d88 <__swbuf_r+0xa0>)
 8000d64:	429c      	cmp	r4, r3
 8000d66:	bf08      	it	eq
 8000d68:	68ec      	ldreq	r4, [r5, #12]
 8000d6a:	e7ca      	b.n	8000d02 <__swbuf_r+0x1a>
 8000d6c:	4621      	mov	r1, r4
 8000d6e:	4628      	mov	r0, r5
 8000d70:	f000 f80c 	bl	8000d8c <__swsetup_r>
 8000d74:	2800      	cmp	r0, #0
 8000d76:	d0cb      	beq.n	8000d10 <__swbuf_r+0x28>
 8000d78:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000d7c:	e7ea      	b.n	8000d54 <__swbuf_r+0x6c>
 8000d7e:	bf00      	nop
 8000d80:	08001748 	.word	0x08001748
 8000d84:	08001768 	.word	0x08001768
 8000d88:	08001728 	.word	0x08001728

08000d8c <__swsetup_r>:
 8000d8c:	4b32      	ldr	r3, [pc, #200]	; (8000e58 <__swsetup_r+0xcc>)
 8000d8e:	b570      	push	{r4, r5, r6, lr}
 8000d90:	681d      	ldr	r5, [r3, #0]
 8000d92:	4606      	mov	r6, r0
 8000d94:	460c      	mov	r4, r1
 8000d96:	b125      	cbz	r5, 8000da2 <__swsetup_r+0x16>
 8000d98:	69ab      	ldr	r3, [r5, #24]
 8000d9a:	b913      	cbnz	r3, 8000da2 <__swsetup_r+0x16>
 8000d9c:	4628      	mov	r0, r5
 8000d9e:	f000 f97d 	bl	800109c <__sinit>
 8000da2:	4b2e      	ldr	r3, [pc, #184]	; (8000e5c <__swsetup_r+0xd0>)
 8000da4:	429c      	cmp	r4, r3
 8000da6:	d10f      	bne.n	8000dc8 <__swsetup_r+0x3c>
 8000da8:	686c      	ldr	r4, [r5, #4]
 8000daa:	89a3      	ldrh	r3, [r4, #12]
 8000dac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000db0:	0719      	lsls	r1, r3, #28
 8000db2:	d42c      	bmi.n	8000e0e <__swsetup_r+0x82>
 8000db4:	06dd      	lsls	r5, r3, #27
 8000db6:	d411      	bmi.n	8000ddc <__swsetup_r+0x50>
 8000db8:	2309      	movs	r3, #9
 8000dba:	6033      	str	r3, [r6, #0]
 8000dbc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000dc0:	81a3      	strh	r3, [r4, #12]
 8000dc2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000dc6:	e03e      	b.n	8000e46 <__swsetup_r+0xba>
 8000dc8:	4b25      	ldr	r3, [pc, #148]	; (8000e60 <__swsetup_r+0xd4>)
 8000dca:	429c      	cmp	r4, r3
 8000dcc:	d101      	bne.n	8000dd2 <__swsetup_r+0x46>
 8000dce:	68ac      	ldr	r4, [r5, #8]
 8000dd0:	e7eb      	b.n	8000daa <__swsetup_r+0x1e>
 8000dd2:	4b24      	ldr	r3, [pc, #144]	; (8000e64 <__swsetup_r+0xd8>)
 8000dd4:	429c      	cmp	r4, r3
 8000dd6:	bf08      	it	eq
 8000dd8:	68ec      	ldreq	r4, [r5, #12]
 8000dda:	e7e6      	b.n	8000daa <__swsetup_r+0x1e>
 8000ddc:	0758      	lsls	r0, r3, #29
 8000dde:	d512      	bpl.n	8000e06 <__swsetup_r+0x7a>
 8000de0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000de2:	b141      	cbz	r1, 8000df6 <__swsetup_r+0x6a>
 8000de4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000de8:	4299      	cmp	r1, r3
 8000dea:	d002      	beq.n	8000df2 <__swsetup_r+0x66>
 8000dec:	4630      	mov	r0, r6
 8000dee:	f000 fa59 	bl	80012a4 <_free_r>
 8000df2:	2300      	movs	r3, #0
 8000df4:	6363      	str	r3, [r4, #52]	; 0x34
 8000df6:	89a3      	ldrh	r3, [r4, #12]
 8000df8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000dfc:	81a3      	strh	r3, [r4, #12]
 8000dfe:	2300      	movs	r3, #0
 8000e00:	6063      	str	r3, [r4, #4]
 8000e02:	6923      	ldr	r3, [r4, #16]
 8000e04:	6023      	str	r3, [r4, #0]
 8000e06:	89a3      	ldrh	r3, [r4, #12]
 8000e08:	f043 0308 	orr.w	r3, r3, #8
 8000e0c:	81a3      	strh	r3, [r4, #12]
 8000e0e:	6923      	ldr	r3, [r4, #16]
 8000e10:	b94b      	cbnz	r3, 8000e26 <__swsetup_r+0x9a>
 8000e12:	89a3      	ldrh	r3, [r4, #12]
 8000e14:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000e18:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000e1c:	d003      	beq.n	8000e26 <__swsetup_r+0x9a>
 8000e1e:	4621      	mov	r1, r4
 8000e20:	4630      	mov	r0, r6
 8000e22:	f000 f9ff 	bl	8001224 <__smakebuf_r>
 8000e26:	89a0      	ldrh	r0, [r4, #12]
 8000e28:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e2c:	f010 0301 	ands.w	r3, r0, #1
 8000e30:	d00a      	beq.n	8000e48 <__swsetup_r+0xbc>
 8000e32:	2300      	movs	r3, #0
 8000e34:	60a3      	str	r3, [r4, #8]
 8000e36:	6963      	ldr	r3, [r4, #20]
 8000e38:	425b      	negs	r3, r3
 8000e3a:	61a3      	str	r3, [r4, #24]
 8000e3c:	6923      	ldr	r3, [r4, #16]
 8000e3e:	b943      	cbnz	r3, 8000e52 <__swsetup_r+0xc6>
 8000e40:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000e44:	d1ba      	bne.n	8000dbc <__swsetup_r+0x30>
 8000e46:	bd70      	pop	{r4, r5, r6, pc}
 8000e48:	0781      	lsls	r1, r0, #30
 8000e4a:	bf58      	it	pl
 8000e4c:	6963      	ldrpl	r3, [r4, #20]
 8000e4e:	60a3      	str	r3, [r4, #8]
 8000e50:	e7f4      	b.n	8000e3c <__swsetup_r+0xb0>
 8000e52:	2000      	movs	r0, #0
 8000e54:	e7f7      	b.n	8000e46 <__swsetup_r+0xba>
 8000e56:	bf00      	nop
 8000e58:	20000000 	.word	0x20000000
 8000e5c:	08001748 	.word	0x08001748
 8000e60:	08001768 	.word	0x08001768
 8000e64:	08001728 	.word	0x08001728

08000e68 <__sflush_r>:
 8000e68:	898a      	ldrh	r2, [r1, #12]
 8000e6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e6e:	4605      	mov	r5, r0
 8000e70:	0710      	lsls	r0, r2, #28
 8000e72:	460c      	mov	r4, r1
 8000e74:	d458      	bmi.n	8000f28 <__sflush_r+0xc0>
 8000e76:	684b      	ldr	r3, [r1, #4]
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	dc05      	bgt.n	8000e88 <__sflush_r+0x20>
 8000e7c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000e7e:	2b00      	cmp	r3, #0
 8000e80:	dc02      	bgt.n	8000e88 <__sflush_r+0x20>
 8000e82:	2000      	movs	r0, #0
 8000e84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e88:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e8a:	2e00      	cmp	r6, #0
 8000e8c:	d0f9      	beq.n	8000e82 <__sflush_r+0x1a>
 8000e8e:	2300      	movs	r3, #0
 8000e90:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000e94:	682f      	ldr	r7, [r5, #0]
 8000e96:	602b      	str	r3, [r5, #0]
 8000e98:	d032      	beq.n	8000f00 <__sflush_r+0x98>
 8000e9a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000e9c:	89a3      	ldrh	r3, [r4, #12]
 8000e9e:	075a      	lsls	r2, r3, #29
 8000ea0:	d505      	bpl.n	8000eae <__sflush_r+0x46>
 8000ea2:	6863      	ldr	r3, [r4, #4]
 8000ea4:	1ac0      	subs	r0, r0, r3
 8000ea6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000ea8:	b10b      	cbz	r3, 8000eae <__sflush_r+0x46>
 8000eaa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000eac:	1ac0      	subs	r0, r0, r3
 8000eae:	2300      	movs	r3, #0
 8000eb0:	4602      	mov	r2, r0
 8000eb2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000eb4:	6a21      	ldr	r1, [r4, #32]
 8000eb6:	4628      	mov	r0, r5
 8000eb8:	47b0      	blx	r6
 8000eba:	1c43      	adds	r3, r0, #1
 8000ebc:	89a3      	ldrh	r3, [r4, #12]
 8000ebe:	d106      	bne.n	8000ece <__sflush_r+0x66>
 8000ec0:	6829      	ldr	r1, [r5, #0]
 8000ec2:	291d      	cmp	r1, #29
 8000ec4:	d82c      	bhi.n	8000f20 <__sflush_r+0xb8>
 8000ec6:	4a2a      	ldr	r2, [pc, #168]	; (8000f70 <__sflush_r+0x108>)
 8000ec8:	40ca      	lsrs	r2, r1
 8000eca:	07d6      	lsls	r6, r2, #31
 8000ecc:	d528      	bpl.n	8000f20 <__sflush_r+0xb8>
 8000ece:	2200      	movs	r2, #0
 8000ed0:	6062      	str	r2, [r4, #4]
 8000ed2:	04d9      	lsls	r1, r3, #19
 8000ed4:	6922      	ldr	r2, [r4, #16]
 8000ed6:	6022      	str	r2, [r4, #0]
 8000ed8:	d504      	bpl.n	8000ee4 <__sflush_r+0x7c>
 8000eda:	1c42      	adds	r2, r0, #1
 8000edc:	d101      	bne.n	8000ee2 <__sflush_r+0x7a>
 8000ede:	682b      	ldr	r3, [r5, #0]
 8000ee0:	b903      	cbnz	r3, 8000ee4 <__sflush_r+0x7c>
 8000ee2:	6560      	str	r0, [r4, #84]	; 0x54
 8000ee4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ee6:	602f      	str	r7, [r5, #0]
 8000ee8:	2900      	cmp	r1, #0
 8000eea:	d0ca      	beq.n	8000e82 <__sflush_r+0x1a>
 8000eec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000ef0:	4299      	cmp	r1, r3
 8000ef2:	d002      	beq.n	8000efa <__sflush_r+0x92>
 8000ef4:	4628      	mov	r0, r5
 8000ef6:	f000 f9d5 	bl	80012a4 <_free_r>
 8000efa:	2000      	movs	r0, #0
 8000efc:	6360      	str	r0, [r4, #52]	; 0x34
 8000efe:	e7c1      	b.n	8000e84 <__sflush_r+0x1c>
 8000f00:	6a21      	ldr	r1, [r4, #32]
 8000f02:	2301      	movs	r3, #1
 8000f04:	4628      	mov	r0, r5
 8000f06:	47b0      	blx	r6
 8000f08:	1c41      	adds	r1, r0, #1
 8000f0a:	d1c7      	bne.n	8000e9c <__sflush_r+0x34>
 8000f0c:	682b      	ldr	r3, [r5, #0]
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	d0c4      	beq.n	8000e9c <__sflush_r+0x34>
 8000f12:	2b1d      	cmp	r3, #29
 8000f14:	d001      	beq.n	8000f1a <__sflush_r+0xb2>
 8000f16:	2b16      	cmp	r3, #22
 8000f18:	d101      	bne.n	8000f1e <__sflush_r+0xb6>
 8000f1a:	602f      	str	r7, [r5, #0]
 8000f1c:	e7b1      	b.n	8000e82 <__sflush_r+0x1a>
 8000f1e:	89a3      	ldrh	r3, [r4, #12]
 8000f20:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f24:	81a3      	strh	r3, [r4, #12]
 8000f26:	e7ad      	b.n	8000e84 <__sflush_r+0x1c>
 8000f28:	690f      	ldr	r7, [r1, #16]
 8000f2a:	2f00      	cmp	r7, #0
 8000f2c:	d0a9      	beq.n	8000e82 <__sflush_r+0x1a>
 8000f2e:	0793      	lsls	r3, r2, #30
 8000f30:	680e      	ldr	r6, [r1, #0]
 8000f32:	bf08      	it	eq
 8000f34:	694b      	ldreq	r3, [r1, #20]
 8000f36:	600f      	str	r7, [r1, #0]
 8000f38:	bf18      	it	ne
 8000f3a:	2300      	movne	r3, #0
 8000f3c:	eba6 0807 	sub.w	r8, r6, r7
 8000f40:	608b      	str	r3, [r1, #8]
 8000f42:	f1b8 0f00 	cmp.w	r8, #0
 8000f46:	dd9c      	ble.n	8000e82 <__sflush_r+0x1a>
 8000f48:	6a21      	ldr	r1, [r4, #32]
 8000f4a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000f4c:	4643      	mov	r3, r8
 8000f4e:	463a      	mov	r2, r7
 8000f50:	4628      	mov	r0, r5
 8000f52:	47b0      	blx	r6
 8000f54:	2800      	cmp	r0, #0
 8000f56:	dc06      	bgt.n	8000f66 <__sflush_r+0xfe>
 8000f58:	89a3      	ldrh	r3, [r4, #12]
 8000f5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f5e:	81a3      	strh	r3, [r4, #12]
 8000f60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f64:	e78e      	b.n	8000e84 <__sflush_r+0x1c>
 8000f66:	4407      	add	r7, r0
 8000f68:	eba8 0800 	sub.w	r8, r8, r0
 8000f6c:	e7e9      	b.n	8000f42 <__sflush_r+0xda>
 8000f6e:	bf00      	nop
 8000f70:	20400001 	.word	0x20400001

08000f74 <_fflush_r>:
 8000f74:	b538      	push	{r3, r4, r5, lr}
 8000f76:	690b      	ldr	r3, [r1, #16]
 8000f78:	4605      	mov	r5, r0
 8000f7a:	460c      	mov	r4, r1
 8000f7c:	b913      	cbnz	r3, 8000f84 <_fflush_r+0x10>
 8000f7e:	2500      	movs	r5, #0
 8000f80:	4628      	mov	r0, r5
 8000f82:	bd38      	pop	{r3, r4, r5, pc}
 8000f84:	b118      	cbz	r0, 8000f8e <_fflush_r+0x1a>
 8000f86:	6983      	ldr	r3, [r0, #24]
 8000f88:	b90b      	cbnz	r3, 8000f8e <_fflush_r+0x1a>
 8000f8a:	f000 f887 	bl	800109c <__sinit>
 8000f8e:	4b14      	ldr	r3, [pc, #80]	; (8000fe0 <_fflush_r+0x6c>)
 8000f90:	429c      	cmp	r4, r3
 8000f92:	d11b      	bne.n	8000fcc <_fflush_r+0x58>
 8000f94:	686c      	ldr	r4, [r5, #4]
 8000f96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	d0ef      	beq.n	8000f7e <_fflush_r+0xa>
 8000f9e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000fa0:	07d0      	lsls	r0, r2, #31
 8000fa2:	d404      	bmi.n	8000fae <_fflush_r+0x3a>
 8000fa4:	0599      	lsls	r1, r3, #22
 8000fa6:	d402      	bmi.n	8000fae <_fflush_r+0x3a>
 8000fa8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000faa:	f000 f915 	bl	80011d8 <__retarget_lock_acquire_recursive>
 8000fae:	4628      	mov	r0, r5
 8000fb0:	4621      	mov	r1, r4
 8000fb2:	f7ff ff59 	bl	8000e68 <__sflush_r>
 8000fb6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000fb8:	07da      	lsls	r2, r3, #31
 8000fba:	4605      	mov	r5, r0
 8000fbc:	d4e0      	bmi.n	8000f80 <_fflush_r+0xc>
 8000fbe:	89a3      	ldrh	r3, [r4, #12]
 8000fc0:	059b      	lsls	r3, r3, #22
 8000fc2:	d4dd      	bmi.n	8000f80 <_fflush_r+0xc>
 8000fc4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000fc6:	f000 f908 	bl	80011da <__retarget_lock_release_recursive>
 8000fca:	e7d9      	b.n	8000f80 <_fflush_r+0xc>
 8000fcc:	4b05      	ldr	r3, [pc, #20]	; (8000fe4 <_fflush_r+0x70>)
 8000fce:	429c      	cmp	r4, r3
 8000fd0:	d101      	bne.n	8000fd6 <_fflush_r+0x62>
 8000fd2:	68ac      	ldr	r4, [r5, #8]
 8000fd4:	e7df      	b.n	8000f96 <_fflush_r+0x22>
 8000fd6:	4b04      	ldr	r3, [pc, #16]	; (8000fe8 <_fflush_r+0x74>)
 8000fd8:	429c      	cmp	r4, r3
 8000fda:	bf08      	it	eq
 8000fdc:	68ec      	ldreq	r4, [r5, #12]
 8000fde:	e7da      	b.n	8000f96 <_fflush_r+0x22>
 8000fe0:	08001748 	.word	0x08001748
 8000fe4:	08001768 	.word	0x08001768
 8000fe8:	08001728 	.word	0x08001728

08000fec <std>:
 8000fec:	2300      	movs	r3, #0
 8000fee:	b510      	push	{r4, lr}
 8000ff0:	4604      	mov	r4, r0
 8000ff2:	e9c0 3300 	strd	r3, r3, [r0]
 8000ff6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ffa:	6083      	str	r3, [r0, #8]
 8000ffc:	8181      	strh	r1, [r0, #12]
 8000ffe:	6643      	str	r3, [r0, #100]	; 0x64
 8001000:	81c2      	strh	r2, [r0, #14]
 8001002:	6183      	str	r3, [r0, #24]
 8001004:	4619      	mov	r1, r3
 8001006:	2208      	movs	r2, #8
 8001008:	305c      	adds	r0, #92	; 0x5c
 800100a:	f7ff fb3f 	bl	800068c <memset>
 800100e:	4b05      	ldr	r3, [pc, #20]	; (8001024 <std+0x38>)
 8001010:	6263      	str	r3, [r4, #36]	; 0x24
 8001012:	4b05      	ldr	r3, [pc, #20]	; (8001028 <std+0x3c>)
 8001014:	62a3      	str	r3, [r4, #40]	; 0x28
 8001016:	4b05      	ldr	r3, [pc, #20]	; (800102c <std+0x40>)
 8001018:	62e3      	str	r3, [r4, #44]	; 0x2c
 800101a:	4b05      	ldr	r3, [pc, #20]	; (8001030 <std+0x44>)
 800101c:	6224      	str	r4, [r4, #32]
 800101e:	6323      	str	r3, [r4, #48]	; 0x30
 8001020:	bd10      	pop	{r4, pc}
 8001022:	bf00      	nop
 8001024:	080014a9 	.word	0x080014a9
 8001028:	080014cb 	.word	0x080014cb
 800102c:	08001503 	.word	0x08001503
 8001030:	08001527 	.word	0x08001527

08001034 <_cleanup_r>:
 8001034:	4901      	ldr	r1, [pc, #4]	; (800103c <_cleanup_r+0x8>)
 8001036:	f000 b8af 	b.w	8001198 <_fwalk_reent>
 800103a:	bf00      	nop
 800103c:	08000f75 	.word	0x08000f75

08001040 <__sfmoreglue>:
 8001040:	b570      	push	{r4, r5, r6, lr}
 8001042:	1e4a      	subs	r2, r1, #1
 8001044:	2568      	movs	r5, #104	; 0x68
 8001046:	4355      	muls	r5, r2
 8001048:	460e      	mov	r6, r1
 800104a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800104e:	f000 f979 	bl	8001344 <_malloc_r>
 8001052:	4604      	mov	r4, r0
 8001054:	b140      	cbz	r0, 8001068 <__sfmoreglue+0x28>
 8001056:	2100      	movs	r1, #0
 8001058:	e9c0 1600 	strd	r1, r6, [r0]
 800105c:	300c      	adds	r0, #12
 800105e:	60a0      	str	r0, [r4, #8]
 8001060:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001064:	f7ff fb12 	bl	800068c <memset>
 8001068:	4620      	mov	r0, r4
 800106a:	bd70      	pop	{r4, r5, r6, pc}

0800106c <__sfp_lock_acquire>:
 800106c:	4801      	ldr	r0, [pc, #4]	; (8001074 <__sfp_lock_acquire+0x8>)
 800106e:	f000 b8b3 	b.w	80011d8 <__retarget_lock_acquire_recursive>
 8001072:	bf00      	nop
 8001074:	20000094 	.word	0x20000094

08001078 <__sfp_lock_release>:
 8001078:	4801      	ldr	r0, [pc, #4]	; (8001080 <__sfp_lock_release+0x8>)
 800107a:	f000 b8ae 	b.w	80011da <__retarget_lock_release_recursive>
 800107e:	bf00      	nop
 8001080:	20000094 	.word	0x20000094

08001084 <__sinit_lock_acquire>:
 8001084:	4801      	ldr	r0, [pc, #4]	; (800108c <__sinit_lock_acquire+0x8>)
 8001086:	f000 b8a7 	b.w	80011d8 <__retarget_lock_acquire_recursive>
 800108a:	bf00      	nop
 800108c:	2000008f 	.word	0x2000008f

08001090 <__sinit_lock_release>:
 8001090:	4801      	ldr	r0, [pc, #4]	; (8001098 <__sinit_lock_release+0x8>)
 8001092:	f000 b8a2 	b.w	80011da <__retarget_lock_release_recursive>
 8001096:	bf00      	nop
 8001098:	2000008f 	.word	0x2000008f

0800109c <__sinit>:
 800109c:	b510      	push	{r4, lr}
 800109e:	4604      	mov	r4, r0
 80010a0:	f7ff fff0 	bl	8001084 <__sinit_lock_acquire>
 80010a4:	69a3      	ldr	r3, [r4, #24]
 80010a6:	b11b      	cbz	r3, 80010b0 <__sinit+0x14>
 80010a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80010ac:	f7ff bff0 	b.w	8001090 <__sinit_lock_release>
 80010b0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80010b4:	6523      	str	r3, [r4, #80]	; 0x50
 80010b6:	4b13      	ldr	r3, [pc, #76]	; (8001104 <__sinit+0x68>)
 80010b8:	4a13      	ldr	r2, [pc, #76]	; (8001108 <__sinit+0x6c>)
 80010ba:	681b      	ldr	r3, [r3, #0]
 80010bc:	62a2      	str	r2, [r4, #40]	; 0x28
 80010be:	42a3      	cmp	r3, r4
 80010c0:	bf04      	itt	eq
 80010c2:	2301      	moveq	r3, #1
 80010c4:	61a3      	streq	r3, [r4, #24]
 80010c6:	4620      	mov	r0, r4
 80010c8:	f000 f820 	bl	800110c <__sfp>
 80010cc:	6060      	str	r0, [r4, #4]
 80010ce:	4620      	mov	r0, r4
 80010d0:	f000 f81c 	bl	800110c <__sfp>
 80010d4:	60a0      	str	r0, [r4, #8]
 80010d6:	4620      	mov	r0, r4
 80010d8:	f000 f818 	bl	800110c <__sfp>
 80010dc:	2200      	movs	r2, #0
 80010de:	60e0      	str	r0, [r4, #12]
 80010e0:	2104      	movs	r1, #4
 80010e2:	6860      	ldr	r0, [r4, #4]
 80010e4:	f7ff ff82 	bl	8000fec <std>
 80010e8:	68a0      	ldr	r0, [r4, #8]
 80010ea:	2201      	movs	r2, #1
 80010ec:	2109      	movs	r1, #9
 80010ee:	f7ff ff7d 	bl	8000fec <std>
 80010f2:	68e0      	ldr	r0, [r4, #12]
 80010f4:	2202      	movs	r2, #2
 80010f6:	2112      	movs	r1, #18
 80010f8:	f7ff ff78 	bl	8000fec <std>
 80010fc:	2301      	movs	r3, #1
 80010fe:	61a3      	str	r3, [r4, #24]
 8001100:	e7d2      	b.n	80010a8 <__sinit+0xc>
 8001102:	bf00      	nop
 8001104:	080016f0 	.word	0x080016f0
 8001108:	08001035 	.word	0x08001035

0800110c <__sfp>:
 800110c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800110e:	4607      	mov	r7, r0
 8001110:	f7ff ffac 	bl	800106c <__sfp_lock_acquire>
 8001114:	4b1e      	ldr	r3, [pc, #120]	; (8001190 <__sfp+0x84>)
 8001116:	681e      	ldr	r6, [r3, #0]
 8001118:	69b3      	ldr	r3, [r6, #24]
 800111a:	b913      	cbnz	r3, 8001122 <__sfp+0x16>
 800111c:	4630      	mov	r0, r6
 800111e:	f7ff ffbd 	bl	800109c <__sinit>
 8001122:	3648      	adds	r6, #72	; 0x48
 8001124:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001128:	3b01      	subs	r3, #1
 800112a:	d503      	bpl.n	8001134 <__sfp+0x28>
 800112c:	6833      	ldr	r3, [r6, #0]
 800112e:	b30b      	cbz	r3, 8001174 <__sfp+0x68>
 8001130:	6836      	ldr	r6, [r6, #0]
 8001132:	e7f7      	b.n	8001124 <__sfp+0x18>
 8001134:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001138:	b9d5      	cbnz	r5, 8001170 <__sfp+0x64>
 800113a:	4b16      	ldr	r3, [pc, #88]	; (8001194 <__sfp+0x88>)
 800113c:	60e3      	str	r3, [r4, #12]
 800113e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001142:	6665      	str	r5, [r4, #100]	; 0x64
 8001144:	f000 f847 	bl	80011d6 <__retarget_lock_init_recursive>
 8001148:	f7ff ff96 	bl	8001078 <__sfp_lock_release>
 800114c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8001150:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8001154:	6025      	str	r5, [r4, #0]
 8001156:	61a5      	str	r5, [r4, #24]
 8001158:	2208      	movs	r2, #8
 800115a:	4629      	mov	r1, r5
 800115c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001160:	f7ff fa94 	bl	800068c <memset>
 8001164:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001168:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800116c:	4620      	mov	r0, r4
 800116e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001170:	3468      	adds	r4, #104	; 0x68
 8001172:	e7d9      	b.n	8001128 <__sfp+0x1c>
 8001174:	2104      	movs	r1, #4
 8001176:	4638      	mov	r0, r7
 8001178:	f7ff ff62 	bl	8001040 <__sfmoreglue>
 800117c:	4604      	mov	r4, r0
 800117e:	6030      	str	r0, [r6, #0]
 8001180:	2800      	cmp	r0, #0
 8001182:	d1d5      	bne.n	8001130 <__sfp+0x24>
 8001184:	f7ff ff78 	bl	8001078 <__sfp_lock_release>
 8001188:	230c      	movs	r3, #12
 800118a:	603b      	str	r3, [r7, #0]
 800118c:	e7ee      	b.n	800116c <__sfp+0x60>
 800118e:	bf00      	nop
 8001190:	080016f0 	.word	0x080016f0
 8001194:	ffff0001 	.word	0xffff0001

08001198 <_fwalk_reent>:
 8001198:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800119c:	4606      	mov	r6, r0
 800119e:	4688      	mov	r8, r1
 80011a0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80011a4:	2700      	movs	r7, #0
 80011a6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80011aa:	f1b9 0901 	subs.w	r9, r9, #1
 80011ae:	d505      	bpl.n	80011bc <_fwalk_reent+0x24>
 80011b0:	6824      	ldr	r4, [r4, #0]
 80011b2:	2c00      	cmp	r4, #0
 80011b4:	d1f7      	bne.n	80011a6 <_fwalk_reent+0xe>
 80011b6:	4638      	mov	r0, r7
 80011b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80011bc:	89ab      	ldrh	r3, [r5, #12]
 80011be:	2b01      	cmp	r3, #1
 80011c0:	d907      	bls.n	80011d2 <_fwalk_reent+0x3a>
 80011c2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80011c6:	3301      	adds	r3, #1
 80011c8:	d003      	beq.n	80011d2 <_fwalk_reent+0x3a>
 80011ca:	4629      	mov	r1, r5
 80011cc:	4630      	mov	r0, r6
 80011ce:	47c0      	blx	r8
 80011d0:	4307      	orrs	r7, r0
 80011d2:	3568      	adds	r5, #104	; 0x68
 80011d4:	e7e9      	b.n	80011aa <_fwalk_reent+0x12>

080011d6 <__retarget_lock_init_recursive>:
 80011d6:	4770      	bx	lr

080011d8 <__retarget_lock_acquire_recursive>:
 80011d8:	4770      	bx	lr

080011da <__retarget_lock_release_recursive>:
 80011da:	4770      	bx	lr

080011dc <__swhatbuf_r>:
 80011dc:	b570      	push	{r4, r5, r6, lr}
 80011de:	460e      	mov	r6, r1
 80011e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011e4:	2900      	cmp	r1, #0
 80011e6:	b096      	sub	sp, #88	; 0x58
 80011e8:	4614      	mov	r4, r2
 80011ea:	461d      	mov	r5, r3
 80011ec:	da07      	bge.n	80011fe <__swhatbuf_r+0x22>
 80011ee:	2300      	movs	r3, #0
 80011f0:	602b      	str	r3, [r5, #0]
 80011f2:	89b3      	ldrh	r3, [r6, #12]
 80011f4:	061a      	lsls	r2, r3, #24
 80011f6:	d410      	bmi.n	800121a <__swhatbuf_r+0x3e>
 80011f8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011fc:	e00e      	b.n	800121c <__swhatbuf_r+0x40>
 80011fe:	466a      	mov	r2, sp
 8001200:	f000 f9b8 	bl	8001574 <_fstat_r>
 8001204:	2800      	cmp	r0, #0
 8001206:	dbf2      	blt.n	80011ee <__swhatbuf_r+0x12>
 8001208:	9a01      	ldr	r2, [sp, #4]
 800120a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800120e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001212:	425a      	negs	r2, r3
 8001214:	415a      	adcs	r2, r3
 8001216:	602a      	str	r2, [r5, #0]
 8001218:	e7ee      	b.n	80011f8 <__swhatbuf_r+0x1c>
 800121a:	2340      	movs	r3, #64	; 0x40
 800121c:	2000      	movs	r0, #0
 800121e:	6023      	str	r3, [r4, #0]
 8001220:	b016      	add	sp, #88	; 0x58
 8001222:	bd70      	pop	{r4, r5, r6, pc}

08001224 <__smakebuf_r>:
 8001224:	898b      	ldrh	r3, [r1, #12]
 8001226:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001228:	079d      	lsls	r5, r3, #30
 800122a:	4606      	mov	r6, r0
 800122c:	460c      	mov	r4, r1
 800122e:	d507      	bpl.n	8001240 <__smakebuf_r+0x1c>
 8001230:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001234:	6023      	str	r3, [r4, #0]
 8001236:	6123      	str	r3, [r4, #16]
 8001238:	2301      	movs	r3, #1
 800123a:	6163      	str	r3, [r4, #20]
 800123c:	b002      	add	sp, #8
 800123e:	bd70      	pop	{r4, r5, r6, pc}
 8001240:	ab01      	add	r3, sp, #4
 8001242:	466a      	mov	r2, sp
 8001244:	f7ff ffca 	bl	80011dc <__swhatbuf_r>
 8001248:	9900      	ldr	r1, [sp, #0]
 800124a:	4605      	mov	r5, r0
 800124c:	4630      	mov	r0, r6
 800124e:	f000 f879 	bl	8001344 <_malloc_r>
 8001252:	b948      	cbnz	r0, 8001268 <__smakebuf_r+0x44>
 8001254:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001258:	059a      	lsls	r2, r3, #22
 800125a:	d4ef      	bmi.n	800123c <__smakebuf_r+0x18>
 800125c:	f023 0303 	bic.w	r3, r3, #3
 8001260:	f043 0302 	orr.w	r3, r3, #2
 8001264:	81a3      	strh	r3, [r4, #12]
 8001266:	e7e3      	b.n	8001230 <__smakebuf_r+0xc>
 8001268:	4b0d      	ldr	r3, [pc, #52]	; (80012a0 <__smakebuf_r+0x7c>)
 800126a:	62b3      	str	r3, [r6, #40]	; 0x28
 800126c:	89a3      	ldrh	r3, [r4, #12]
 800126e:	6020      	str	r0, [r4, #0]
 8001270:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001274:	81a3      	strh	r3, [r4, #12]
 8001276:	9b00      	ldr	r3, [sp, #0]
 8001278:	6163      	str	r3, [r4, #20]
 800127a:	9b01      	ldr	r3, [sp, #4]
 800127c:	6120      	str	r0, [r4, #16]
 800127e:	b15b      	cbz	r3, 8001298 <__smakebuf_r+0x74>
 8001280:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001284:	4630      	mov	r0, r6
 8001286:	f000 f987 	bl	8001598 <_isatty_r>
 800128a:	b128      	cbz	r0, 8001298 <__smakebuf_r+0x74>
 800128c:	89a3      	ldrh	r3, [r4, #12]
 800128e:	f023 0303 	bic.w	r3, r3, #3
 8001292:	f043 0301 	orr.w	r3, r3, #1
 8001296:	81a3      	strh	r3, [r4, #12]
 8001298:	89a0      	ldrh	r0, [r4, #12]
 800129a:	4305      	orrs	r5, r0
 800129c:	81a5      	strh	r5, [r4, #12]
 800129e:	e7cd      	b.n	800123c <__smakebuf_r+0x18>
 80012a0:	08001035 	.word	0x08001035

080012a4 <_free_r>:
 80012a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80012a6:	2900      	cmp	r1, #0
 80012a8:	d048      	beq.n	800133c <_free_r+0x98>
 80012aa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80012ae:	9001      	str	r0, [sp, #4]
 80012b0:	2b00      	cmp	r3, #0
 80012b2:	f1a1 0404 	sub.w	r4, r1, #4
 80012b6:	bfb8      	it	lt
 80012b8:	18e4      	addlt	r4, r4, r3
 80012ba:	f000 f98f 	bl	80015dc <__malloc_lock>
 80012be:	4a20      	ldr	r2, [pc, #128]	; (8001340 <_free_r+0x9c>)
 80012c0:	9801      	ldr	r0, [sp, #4]
 80012c2:	6813      	ldr	r3, [r2, #0]
 80012c4:	4615      	mov	r5, r2
 80012c6:	b933      	cbnz	r3, 80012d6 <_free_r+0x32>
 80012c8:	6063      	str	r3, [r4, #4]
 80012ca:	6014      	str	r4, [r2, #0]
 80012cc:	b003      	add	sp, #12
 80012ce:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80012d2:	f000 b989 	b.w	80015e8 <__malloc_unlock>
 80012d6:	42a3      	cmp	r3, r4
 80012d8:	d90b      	bls.n	80012f2 <_free_r+0x4e>
 80012da:	6821      	ldr	r1, [r4, #0]
 80012dc:	1862      	adds	r2, r4, r1
 80012de:	4293      	cmp	r3, r2
 80012e0:	bf04      	itt	eq
 80012e2:	681a      	ldreq	r2, [r3, #0]
 80012e4:	685b      	ldreq	r3, [r3, #4]
 80012e6:	6063      	str	r3, [r4, #4]
 80012e8:	bf04      	itt	eq
 80012ea:	1852      	addeq	r2, r2, r1
 80012ec:	6022      	streq	r2, [r4, #0]
 80012ee:	602c      	str	r4, [r5, #0]
 80012f0:	e7ec      	b.n	80012cc <_free_r+0x28>
 80012f2:	461a      	mov	r2, r3
 80012f4:	685b      	ldr	r3, [r3, #4]
 80012f6:	b10b      	cbz	r3, 80012fc <_free_r+0x58>
 80012f8:	42a3      	cmp	r3, r4
 80012fa:	d9fa      	bls.n	80012f2 <_free_r+0x4e>
 80012fc:	6811      	ldr	r1, [r2, #0]
 80012fe:	1855      	adds	r5, r2, r1
 8001300:	42a5      	cmp	r5, r4
 8001302:	d10b      	bne.n	800131c <_free_r+0x78>
 8001304:	6824      	ldr	r4, [r4, #0]
 8001306:	4421      	add	r1, r4
 8001308:	1854      	adds	r4, r2, r1
 800130a:	42a3      	cmp	r3, r4
 800130c:	6011      	str	r1, [r2, #0]
 800130e:	d1dd      	bne.n	80012cc <_free_r+0x28>
 8001310:	681c      	ldr	r4, [r3, #0]
 8001312:	685b      	ldr	r3, [r3, #4]
 8001314:	6053      	str	r3, [r2, #4]
 8001316:	4421      	add	r1, r4
 8001318:	6011      	str	r1, [r2, #0]
 800131a:	e7d7      	b.n	80012cc <_free_r+0x28>
 800131c:	d902      	bls.n	8001324 <_free_r+0x80>
 800131e:	230c      	movs	r3, #12
 8001320:	6003      	str	r3, [r0, #0]
 8001322:	e7d3      	b.n	80012cc <_free_r+0x28>
 8001324:	6825      	ldr	r5, [r4, #0]
 8001326:	1961      	adds	r1, r4, r5
 8001328:	428b      	cmp	r3, r1
 800132a:	bf04      	itt	eq
 800132c:	6819      	ldreq	r1, [r3, #0]
 800132e:	685b      	ldreq	r3, [r3, #4]
 8001330:	6063      	str	r3, [r4, #4]
 8001332:	bf04      	itt	eq
 8001334:	1949      	addeq	r1, r1, r5
 8001336:	6021      	streq	r1, [r4, #0]
 8001338:	6054      	str	r4, [r2, #4]
 800133a:	e7c7      	b.n	80012cc <_free_r+0x28>
 800133c:	b003      	add	sp, #12
 800133e:	bd30      	pop	{r4, r5, pc}
 8001340:	20000080 	.word	0x20000080

08001344 <_malloc_r>:
 8001344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001346:	1ccd      	adds	r5, r1, #3
 8001348:	f025 0503 	bic.w	r5, r5, #3
 800134c:	3508      	adds	r5, #8
 800134e:	2d0c      	cmp	r5, #12
 8001350:	bf38      	it	cc
 8001352:	250c      	movcc	r5, #12
 8001354:	2d00      	cmp	r5, #0
 8001356:	4606      	mov	r6, r0
 8001358:	db01      	blt.n	800135e <_malloc_r+0x1a>
 800135a:	42a9      	cmp	r1, r5
 800135c:	d903      	bls.n	8001366 <_malloc_r+0x22>
 800135e:	230c      	movs	r3, #12
 8001360:	6033      	str	r3, [r6, #0]
 8001362:	2000      	movs	r0, #0
 8001364:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001366:	f000 f939 	bl	80015dc <__malloc_lock>
 800136a:	4921      	ldr	r1, [pc, #132]	; (80013f0 <_malloc_r+0xac>)
 800136c:	680a      	ldr	r2, [r1, #0]
 800136e:	4614      	mov	r4, r2
 8001370:	b99c      	cbnz	r4, 800139a <_malloc_r+0x56>
 8001372:	4f20      	ldr	r7, [pc, #128]	; (80013f4 <_malloc_r+0xb0>)
 8001374:	683b      	ldr	r3, [r7, #0]
 8001376:	b923      	cbnz	r3, 8001382 <_malloc_r+0x3e>
 8001378:	4621      	mov	r1, r4
 800137a:	4630      	mov	r0, r6
 800137c:	f000 f884 	bl	8001488 <_sbrk_r>
 8001380:	6038      	str	r0, [r7, #0]
 8001382:	4629      	mov	r1, r5
 8001384:	4630      	mov	r0, r6
 8001386:	f000 f87f 	bl	8001488 <_sbrk_r>
 800138a:	1c43      	adds	r3, r0, #1
 800138c:	d123      	bne.n	80013d6 <_malloc_r+0x92>
 800138e:	230c      	movs	r3, #12
 8001390:	6033      	str	r3, [r6, #0]
 8001392:	4630      	mov	r0, r6
 8001394:	f000 f928 	bl	80015e8 <__malloc_unlock>
 8001398:	e7e3      	b.n	8001362 <_malloc_r+0x1e>
 800139a:	6823      	ldr	r3, [r4, #0]
 800139c:	1b5b      	subs	r3, r3, r5
 800139e:	d417      	bmi.n	80013d0 <_malloc_r+0x8c>
 80013a0:	2b0b      	cmp	r3, #11
 80013a2:	d903      	bls.n	80013ac <_malloc_r+0x68>
 80013a4:	6023      	str	r3, [r4, #0]
 80013a6:	441c      	add	r4, r3
 80013a8:	6025      	str	r5, [r4, #0]
 80013aa:	e004      	b.n	80013b6 <_malloc_r+0x72>
 80013ac:	6863      	ldr	r3, [r4, #4]
 80013ae:	42a2      	cmp	r2, r4
 80013b0:	bf0c      	ite	eq
 80013b2:	600b      	streq	r3, [r1, #0]
 80013b4:	6053      	strne	r3, [r2, #4]
 80013b6:	4630      	mov	r0, r6
 80013b8:	f000 f916 	bl	80015e8 <__malloc_unlock>
 80013bc:	f104 000b 	add.w	r0, r4, #11
 80013c0:	1d23      	adds	r3, r4, #4
 80013c2:	f020 0007 	bic.w	r0, r0, #7
 80013c6:	1ac2      	subs	r2, r0, r3
 80013c8:	d0cc      	beq.n	8001364 <_malloc_r+0x20>
 80013ca:	1a1b      	subs	r3, r3, r0
 80013cc:	50a3      	str	r3, [r4, r2]
 80013ce:	e7c9      	b.n	8001364 <_malloc_r+0x20>
 80013d0:	4622      	mov	r2, r4
 80013d2:	6864      	ldr	r4, [r4, #4]
 80013d4:	e7cc      	b.n	8001370 <_malloc_r+0x2c>
 80013d6:	1cc4      	adds	r4, r0, #3
 80013d8:	f024 0403 	bic.w	r4, r4, #3
 80013dc:	42a0      	cmp	r0, r4
 80013de:	d0e3      	beq.n	80013a8 <_malloc_r+0x64>
 80013e0:	1a21      	subs	r1, r4, r0
 80013e2:	4630      	mov	r0, r6
 80013e4:	f000 f850 	bl	8001488 <_sbrk_r>
 80013e8:	3001      	adds	r0, #1
 80013ea:	d1dd      	bne.n	80013a8 <_malloc_r+0x64>
 80013ec:	e7cf      	b.n	800138e <_malloc_r+0x4a>
 80013ee:	bf00      	nop
 80013f0:	20000080 	.word	0x20000080
 80013f4:	20000084 	.word	0x20000084

080013f8 <_putc_r>:
 80013f8:	b570      	push	{r4, r5, r6, lr}
 80013fa:	460d      	mov	r5, r1
 80013fc:	4614      	mov	r4, r2
 80013fe:	4606      	mov	r6, r0
 8001400:	b118      	cbz	r0, 800140a <_putc_r+0x12>
 8001402:	6983      	ldr	r3, [r0, #24]
 8001404:	b90b      	cbnz	r3, 800140a <_putc_r+0x12>
 8001406:	f7ff fe49 	bl	800109c <__sinit>
 800140a:	4b1c      	ldr	r3, [pc, #112]	; (800147c <_putc_r+0x84>)
 800140c:	429c      	cmp	r4, r3
 800140e:	d124      	bne.n	800145a <_putc_r+0x62>
 8001410:	6874      	ldr	r4, [r6, #4]
 8001412:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001414:	07d8      	lsls	r0, r3, #31
 8001416:	d405      	bmi.n	8001424 <_putc_r+0x2c>
 8001418:	89a3      	ldrh	r3, [r4, #12]
 800141a:	0599      	lsls	r1, r3, #22
 800141c:	d402      	bmi.n	8001424 <_putc_r+0x2c>
 800141e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001420:	f7ff feda 	bl	80011d8 <__retarget_lock_acquire_recursive>
 8001424:	68a3      	ldr	r3, [r4, #8]
 8001426:	3b01      	subs	r3, #1
 8001428:	2b00      	cmp	r3, #0
 800142a:	60a3      	str	r3, [r4, #8]
 800142c:	da05      	bge.n	800143a <_putc_r+0x42>
 800142e:	69a2      	ldr	r2, [r4, #24]
 8001430:	4293      	cmp	r3, r2
 8001432:	db1c      	blt.n	800146e <_putc_r+0x76>
 8001434:	b2eb      	uxtb	r3, r5
 8001436:	2b0a      	cmp	r3, #10
 8001438:	d019      	beq.n	800146e <_putc_r+0x76>
 800143a:	6823      	ldr	r3, [r4, #0]
 800143c:	1c5a      	adds	r2, r3, #1
 800143e:	6022      	str	r2, [r4, #0]
 8001440:	701d      	strb	r5, [r3, #0]
 8001442:	b2ed      	uxtb	r5, r5
 8001444:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001446:	07da      	lsls	r2, r3, #31
 8001448:	d405      	bmi.n	8001456 <_putc_r+0x5e>
 800144a:	89a3      	ldrh	r3, [r4, #12]
 800144c:	059b      	lsls	r3, r3, #22
 800144e:	d402      	bmi.n	8001456 <_putc_r+0x5e>
 8001450:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001452:	f7ff fec2 	bl	80011da <__retarget_lock_release_recursive>
 8001456:	4628      	mov	r0, r5
 8001458:	bd70      	pop	{r4, r5, r6, pc}
 800145a:	4b09      	ldr	r3, [pc, #36]	; (8001480 <_putc_r+0x88>)
 800145c:	429c      	cmp	r4, r3
 800145e:	d101      	bne.n	8001464 <_putc_r+0x6c>
 8001460:	68b4      	ldr	r4, [r6, #8]
 8001462:	e7d6      	b.n	8001412 <_putc_r+0x1a>
 8001464:	4b07      	ldr	r3, [pc, #28]	; (8001484 <_putc_r+0x8c>)
 8001466:	429c      	cmp	r4, r3
 8001468:	bf08      	it	eq
 800146a:	68f4      	ldreq	r4, [r6, #12]
 800146c:	e7d1      	b.n	8001412 <_putc_r+0x1a>
 800146e:	4629      	mov	r1, r5
 8001470:	4622      	mov	r2, r4
 8001472:	4630      	mov	r0, r6
 8001474:	f7ff fc38 	bl	8000ce8 <__swbuf_r>
 8001478:	4605      	mov	r5, r0
 800147a:	e7e3      	b.n	8001444 <_putc_r+0x4c>
 800147c:	08001748 	.word	0x08001748
 8001480:	08001768 	.word	0x08001768
 8001484:	08001728 	.word	0x08001728

08001488 <_sbrk_r>:
 8001488:	b538      	push	{r3, r4, r5, lr}
 800148a:	4d06      	ldr	r5, [pc, #24]	; (80014a4 <_sbrk_r+0x1c>)
 800148c:	2300      	movs	r3, #0
 800148e:	4604      	mov	r4, r0
 8001490:	4608      	mov	r0, r1
 8001492:	602b      	str	r3, [r5, #0]
 8001494:	f000 f8e8 	bl	8001668 <_sbrk>
 8001498:	1c43      	adds	r3, r0, #1
 800149a:	d102      	bne.n	80014a2 <_sbrk_r+0x1a>
 800149c:	682b      	ldr	r3, [r5, #0]
 800149e:	b103      	cbz	r3, 80014a2 <_sbrk_r+0x1a>
 80014a0:	6023      	str	r3, [r4, #0]
 80014a2:	bd38      	pop	{r3, r4, r5, pc}
 80014a4:	20000098 	.word	0x20000098

080014a8 <__sread>:
 80014a8:	b510      	push	{r4, lr}
 80014aa:	460c      	mov	r4, r1
 80014ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014b0:	f000 f8a0 	bl	80015f4 <_read_r>
 80014b4:	2800      	cmp	r0, #0
 80014b6:	bfab      	itete	ge
 80014b8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80014ba:	89a3      	ldrhlt	r3, [r4, #12]
 80014bc:	181b      	addge	r3, r3, r0
 80014be:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80014c2:	bfac      	ite	ge
 80014c4:	6563      	strge	r3, [r4, #84]	; 0x54
 80014c6:	81a3      	strhlt	r3, [r4, #12]
 80014c8:	bd10      	pop	{r4, pc}

080014ca <__swrite>:
 80014ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014ce:	461f      	mov	r7, r3
 80014d0:	898b      	ldrh	r3, [r1, #12]
 80014d2:	05db      	lsls	r3, r3, #23
 80014d4:	4605      	mov	r5, r0
 80014d6:	460c      	mov	r4, r1
 80014d8:	4616      	mov	r6, r2
 80014da:	d505      	bpl.n	80014e8 <__swrite+0x1e>
 80014dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014e0:	2302      	movs	r3, #2
 80014e2:	2200      	movs	r2, #0
 80014e4:	f000 f868 	bl	80015b8 <_lseek_r>
 80014e8:	89a3      	ldrh	r3, [r4, #12]
 80014ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80014f2:	81a3      	strh	r3, [r4, #12]
 80014f4:	4632      	mov	r2, r6
 80014f6:	463b      	mov	r3, r7
 80014f8:	4628      	mov	r0, r5
 80014fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014fe:	f000 b817 	b.w	8001530 <_write_r>

08001502 <__sseek>:
 8001502:	b510      	push	{r4, lr}
 8001504:	460c      	mov	r4, r1
 8001506:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800150a:	f000 f855 	bl	80015b8 <_lseek_r>
 800150e:	1c43      	adds	r3, r0, #1
 8001510:	89a3      	ldrh	r3, [r4, #12]
 8001512:	bf15      	itete	ne
 8001514:	6560      	strne	r0, [r4, #84]	; 0x54
 8001516:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800151a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800151e:	81a3      	strheq	r3, [r4, #12]
 8001520:	bf18      	it	ne
 8001522:	81a3      	strhne	r3, [r4, #12]
 8001524:	bd10      	pop	{r4, pc}

08001526 <__sclose>:
 8001526:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800152a:	f000 b813 	b.w	8001554 <_close_r>
	...

08001530 <_write_r>:
 8001530:	b538      	push	{r3, r4, r5, lr}
 8001532:	4d07      	ldr	r5, [pc, #28]	; (8001550 <_write_r+0x20>)
 8001534:	4604      	mov	r4, r0
 8001536:	4608      	mov	r0, r1
 8001538:	4611      	mov	r1, r2
 800153a:	2200      	movs	r2, #0
 800153c:	602a      	str	r2, [r5, #0]
 800153e:	461a      	mov	r2, r3
 8001540:	f7fe fecd 	bl	80002de <_write>
 8001544:	1c43      	adds	r3, r0, #1
 8001546:	d102      	bne.n	800154e <_write_r+0x1e>
 8001548:	682b      	ldr	r3, [r5, #0]
 800154a:	b103      	cbz	r3, 800154e <_write_r+0x1e>
 800154c:	6023      	str	r3, [r4, #0]
 800154e:	bd38      	pop	{r3, r4, r5, pc}
 8001550:	20000098 	.word	0x20000098

08001554 <_close_r>:
 8001554:	b538      	push	{r3, r4, r5, lr}
 8001556:	4d06      	ldr	r5, [pc, #24]	; (8001570 <_close_r+0x1c>)
 8001558:	2300      	movs	r3, #0
 800155a:	4604      	mov	r4, r0
 800155c:	4608      	mov	r0, r1
 800155e:	602b      	str	r3, [r5, #0]
 8001560:	f000 f85a 	bl	8001618 <_close>
 8001564:	1c43      	adds	r3, r0, #1
 8001566:	d102      	bne.n	800156e <_close_r+0x1a>
 8001568:	682b      	ldr	r3, [r5, #0]
 800156a:	b103      	cbz	r3, 800156e <_close_r+0x1a>
 800156c:	6023      	str	r3, [r4, #0]
 800156e:	bd38      	pop	{r3, r4, r5, pc}
 8001570:	20000098 	.word	0x20000098

08001574 <_fstat_r>:
 8001574:	b538      	push	{r3, r4, r5, lr}
 8001576:	4d07      	ldr	r5, [pc, #28]	; (8001594 <_fstat_r+0x20>)
 8001578:	2300      	movs	r3, #0
 800157a:	4604      	mov	r4, r0
 800157c:	4608      	mov	r0, r1
 800157e:	4611      	mov	r1, r2
 8001580:	602b      	str	r3, [r5, #0]
 8001582:	f000 f851 	bl	8001628 <_fstat>
 8001586:	1c43      	adds	r3, r0, #1
 8001588:	d102      	bne.n	8001590 <_fstat_r+0x1c>
 800158a:	682b      	ldr	r3, [r5, #0]
 800158c:	b103      	cbz	r3, 8001590 <_fstat_r+0x1c>
 800158e:	6023      	str	r3, [r4, #0]
 8001590:	bd38      	pop	{r3, r4, r5, pc}
 8001592:	bf00      	nop
 8001594:	20000098 	.word	0x20000098

08001598 <_isatty_r>:
 8001598:	b538      	push	{r3, r4, r5, lr}
 800159a:	4d06      	ldr	r5, [pc, #24]	; (80015b4 <_isatty_r+0x1c>)
 800159c:	2300      	movs	r3, #0
 800159e:	4604      	mov	r4, r0
 80015a0:	4608      	mov	r0, r1
 80015a2:	602b      	str	r3, [r5, #0]
 80015a4:	f000 f848 	bl	8001638 <_isatty>
 80015a8:	1c43      	adds	r3, r0, #1
 80015aa:	d102      	bne.n	80015b2 <_isatty_r+0x1a>
 80015ac:	682b      	ldr	r3, [r5, #0]
 80015ae:	b103      	cbz	r3, 80015b2 <_isatty_r+0x1a>
 80015b0:	6023      	str	r3, [r4, #0]
 80015b2:	bd38      	pop	{r3, r4, r5, pc}
 80015b4:	20000098 	.word	0x20000098

080015b8 <_lseek_r>:
 80015b8:	b538      	push	{r3, r4, r5, lr}
 80015ba:	4d07      	ldr	r5, [pc, #28]	; (80015d8 <_lseek_r+0x20>)
 80015bc:	4604      	mov	r4, r0
 80015be:	4608      	mov	r0, r1
 80015c0:	4611      	mov	r1, r2
 80015c2:	2200      	movs	r2, #0
 80015c4:	602a      	str	r2, [r5, #0]
 80015c6:	461a      	mov	r2, r3
 80015c8:	f000 f83e 	bl	8001648 <_lseek>
 80015cc:	1c43      	adds	r3, r0, #1
 80015ce:	d102      	bne.n	80015d6 <_lseek_r+0x1e>
 80015d0:	682b      	ldr	r3, [r5, #0]
 80015d2:	b103      	cbz	r3, 80015d6 <_lseek_r+0x1e>
 80015d4:	6023      	str	r3, [r4, #0]
 80015d6:	bd38      	pop	{r3, r4, r5, pc}
 80015d8:	20000098 	.word	0x20000098

080015dc <__malloc_lock>:
 80015dc:	4801      	ldr	r0, [pc, #4]	; (80015e4 <__malloc_lock+0x8>)
 80015de:	f7ff bdfb 	b.w	80011d8 <__retarget_lock_acquire_recursive>
 80015e2:	bf00      	nop
 80015e4:	20000090 	.word	0x20000090

080015e8 <__malloc_unlock>:
 80015e8:	4801      	ldr	r0, [pc, #4]	; (80015f0 <__malloc_unlock+0x8>)
 80015ea:	f7ff bdf6 	b.w	80011da <__retarget_lock_release_recursive>
 80015ee:	bf00      	nop
 80015f0:	20000090 	.word	0x20000090

080015f4 <_read_r>:
 80015f4:	b538      	push	{r3, r4, r5, lr}
 80015f6:	4d07      	ldr	r5, [pc, #28]	; (8001614 <_read_r+0x20>)
 80015f8:	4604      	mov	r4, r0
 80015fa:	4608      	mov	r0, r1
 80015fc:	4611      	mov	r1, r2
 80015fe:	2200      	movs	r2, #0
 8001600:	602a      	str	r2, [r5, #0]
 8001602:	461a      	mov	r2, r3
 8001604:	f000 f828 	bl	8001658 <_read>
 8001608:	1c43      	adds	r3, r0, #1
 800160a:	d102      	bne.n	8001612 <_read_r+0x1e>
 800160c:	682b      	ldr	r3, [r5, #0]
 800160e:	b103      	cbz	r3, 8001612 <_read_r+0x1e>
 8001610:	6023      	str	r3, [r4, #0]
 8001612:	bd38      	pop	{r3, r4, r5, pc}
 8001614:	20000098 	.word	0x20000098

08001618 <_close>:
 8001618:	4b02      	ldr	r3, [pc, #8]	; (8001624 <_close+0xc>)
 800161a:	2258      	movs	r2, #88	; 0x58
 800161c:	601a      	str	r2, [r3, #0]
 800161e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001622:	4770      	bx	lr
 8001624:	20000098 	.word	0x20000098

08001628 <_fstat>:
 8001628:	4b02      	ldr	r3, [pc, #8]	; (8001634 <_fstat+0xc>)
 800162a:	2258      	movs	r2, #88	; 0x58
 800162c:	601a      	str	r2, [r3, #0]
 800162e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001632:	4770      	bx	lr
 8001634:	20000098 	.word	0x20000098

08001638 <_isatty>:
 8001638:	4b02      	ldr	r3, [pc, #8]	; (8001644 <_isatty+0xc>)
 800163a:	2258      	movs	r2, #88	; 0x58
 800163c:	601a      	str	r2, [r3, #0]
 800163e:	2000      	movs	r0, #0
 8001640:	4770      	bx	lr
 8001642:	bf00      	nop
 8001644:	20000098 	.word	0x20000098

08001648 <_lseek>:
 8001648:	4b02      	ldr	r3, [pc, #8]	; (8001654 <_lseek+0xc>)
 800164a:	2258      	movs	r2, #88	; 0x58
 800164c:	601a      	str	r2, [r3, #0]
 800164e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001652:	4770      	bx	lr
 8001654:	20000098 	.word	0x20000098

08001658 <_read>:
 8001658:	4b02      	ldr	r3, [pc, #8]	; (8001664 <_read+0xc>)
 800165a:	2258      	movs	r2, #88	; 0x58
 800165c:	601a      	str	r2, [r3, #0]
 800165e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001662:	4770      	bx	lr
 8001664:	20000098 	.word	0x20000098

08001668 <_sbrk>:
 8001668:	4b04      	ldr	r3, [pc, #16]	; (800167c <_sbrk+0x14>)
 800166a:	6819      	ldr	r1, [r3, #0]
 800166c:	4602      	mov	r2, r0
 800166e:	b909      	cbnz	r1, 8001674 <_sbrk+0xc>
 8001670:	4903      	ldr	r1, [pc, #12]	; (8001680 <_sbrk+0x18>)
 8001672:	6019      	str	r1, [r3, #0]
 8001674:	6818      	ldr	r0, [r3, #0]
 8001676:	4402      	add	r2, r0
 8001678:	601a      	str	r2, [r3, #0]
 800167a:	4770      	bx	lr
 800167c:	20000088 	.word	0x20000088
 8001680:	200000a0 	.word	0x200000a0

08001684 <_init>:
 8001684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001686:	bf00      	nop
 8001688:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800168a:	bc08      	pop	{r3}
 800168c:	469e      	mov	lr, r3
 800168e:	4770      	bx	lr

08001690 <_fini>:
 8001690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001692:	bf00      	nop
 8001694:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001696:	bc08      	pop	{r3}
 8001698:	469e      	mov	lr, r3
 800169a:	4770      	bx	lr
